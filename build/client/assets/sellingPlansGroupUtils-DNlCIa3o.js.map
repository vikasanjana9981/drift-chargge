{"version":3,"file":"sellingPlansGroupUtils-DNlCIa3o.js","sources":["../../../app/shared/products/product-edit/utils/sellingPlansGroupUtils.ts"],"sourcesContent":["import { OneTimePlan, PayPerShipmentSellingPlan } from \"app/types/product/sellingPlans\";\r\n\r\nexport interface SellingPlanGroup {\r\n    appId: string;\r\n    createdAt: string;\r\n    id: string;\r\n    merchantCode: string;\r\n    name: string;\r\n    options: string[];\r\n    position: number;\r\n    sellingPlans: {\r\n        edges: Array<{\r\n            cursor: string;\r\n            node: {\r\n                category: string;\r\n                createdAt: string;\r\n                description: string | null;\r\n                position: number | null;\r\n                name: string;\r\n                options: string[];\r\n                id: string;\r\n                deliveryPolicy: {\r\n                    cutoff: number | null;\r\n                    interval?: string;\r\n                    intervalCount?: number;\r\n                    preAnchorBehavior?: string;\r\n                    intent?: string;\r\n                    createdAt?: string;\r\n                    anchors?: any[];\r\n                    fulfillmentExactTime?: string | null;\r\n                };\r\n            };\r\n        }>;\r\n    };\r\n}\r\n\r\nexport interface SellingPlanGroupEdge {\r\n    cursor: string;\r\n    node: SellingPlanGroup;\r\n}\r\n\r\nexport interface PayPerShipmentSellingPlanFrontend extends PayPerShipmentSellingPlan {\r\n    id: string\r\n    position: number,\r\n    createdAt?: string,\r\n}\r\n\r\nexport interface PayPerShipmentPlanGroup {\r\n    groupName: string;\r\n    id: string;\r\n    sellingPlans: PayPerShipmentSellingPlanFrontend[]\r\n}\r\n\r\nexport const getSellingPlanGroup = (\r\n    sellingPlanGroups: SellingPlanGroupEdge[], // Accepts an array of SellingPlanGroupEdge\r\n    planGroupName: string\r\n): SellingPlanGroup | any => {\r\n    for (const group of sellingPlanGroups) {\r\n        if (group.node.merchantCode === planGroupName) {\r\n            return group.node; // Return the matching SellingPlanGroup\r\n        }\r\n    }\r\n    return null; // Return null if no matching plan group is found\r\n};\r\n\r\nexport const processOneTimeGroup = (sellingPlanGroup: any): OneTimePlan => {\r\n    const sellingPlan = sellingPlanGroup.sellingPlans.edges[0]?.node;\r\n\r\n    return {\r\n        enable: !!sellingPlan,\r\n        planName: sellingPlan?.name || '',\r\n        groupId: sellingPlanGroup?.id,\r\n        sellingPlanId: sellingPlan?.id,\r\n\r\n        // Combine all policy processors\r\n        ...processPricingPolicy(sellingPlan),\r\n        ...processInventoryPolicy(sellingPlan),\r\n        ...processDeliveryPolicy(sellingPlan),\r\n        ...processBillingPolicy(sellingPlan)\r\n    };\r\n}\r\n\r\n\r\n// Pricing Policy Processor\r\nconst processPricingPolicy = (sellingPlan: any) => ({\r\n    pricingPolicyEnable: !!sellingPlan?.pricingPolicies?.length,\r\n    pricingPolicyAdjustmentType:\r\n        sellingPlan?.pricingPolicies?.[0]?.adjustmentType || 'FIXED_AMOUNT',\r\n    pricingPolicyAdjustmentValue:\r\n        sellingPlan?.pricingPolicies?.[0]?.adjustmentValue?.percentage || sellingPlan?.pricingPolicies?.[0]?.adjustmentValue?.amount,\r\n});\r\n\r\n// Inventory Policy Processor\r\nconst processInventoryPolicy = (sellingPlan: any) => ({\r\n    inventoryPolicyEnable: !!sellingPlan?.inventoryPolicy,\r\n    inventoryPolicyReserve:\r\n        sellingPlan?.inventoryPolicy?.reserve || 'ON_FULFILLMENT',\r\n});\r\n\r\n// Delivery Policy Processor\r\nconst processDeliveryPolicy = (sellingPlan: any) => ({\r\n    deliveryPolicyEnable: !!sellingPlan?.deliveryPolicy,\r\n    deliveryPolicyAnchorsCutoffDay: sellingPlan?.deliveryPolicy?.cutoff || 0,\r\n    deliveryPolicyAnchorsDay: 1,\r\n    deliveryPolicyAnchorsMonth: 1,\r\n    deliveryPolicyAnchorsType: 'MONTHDAY' as 'MONTHDAY' | 'WEEKDAY' | 'YEARDAY',\r\n    deliveryPolicyCutoff: sellingPlan?.deliveryPolicy?.cutoff || 0,\r\n    deliveryPolicyFulfillmentExactTime:\r\n        sellingPlan?.deliveryPolicy?.fulfillmentExactTime || null,\r\n    deliveryPolicyFulfillmentTrigger:\r\n        sellingPlan?.deliveryPolicy?.fulfillmentTrigger || 'ANCHOR',\r\n    deliveryPolicyIntent:\r\n        sellingPlan?.deliveryPolicy?.intent || 'FULFILLMENT_BEGIN',\r\n    deliveryPolicyPreAnchorBehavior:\r\n        sellingPlan?.deliveryPolicy?.preAnchorBehavior || 'ASAP',\r\n    preAnchorBehavior:\r\n        sellingPlan?.deliveryPolicy?.preAnchorBehavior || 'ASAP',\r\n});\r\n\r\n// Billing Policy Processor\r\nconst processBillingPolicy = (sellingPlan: any) => ({\r\n    billingPolicyEnable: !!sellingPlan?.billingPolicy,\r\n    billingPolicyCheckoutChargeType:\r\n        sellingPlan?.billingPolicy?.checkoutCharge?.type || 'PRICE',\r\n    billingPolicyCheckoutChargeValue:\r\n        sellingPlan?.billingPolicy?.checkoutCharge?.value?.percentage || 0,\r\n    billingPolicyRemainingBalanceChargeExactTime:\r\n        sellingPlan?.billingPolicy?.remainingBalanceChargeExactTime || '',\r\n    billingPolicyRemainingBalanceChargeTimeAfterCheckout:\r\n        sellingPlan?.billingPolicy?.remainingBalanceChargeTimeAfterCheckout || '',\r\n    billingPolicyRemainingBalanceChargeTrigger:\r\n        sellingPlan?.billingPolicy?.remainingBalanceChargeTrigger || \"NO_REMAINING_BALANCE\"\r\n});\r\n\r\nexport const processPayPerShipmentGroup = (sellingPlanGroup: any): PayPerShipmentPlanGroup => {\r\n    return {\r\n        groupName: sellingPlanGroup?.name || \"Unnamed Group\",\r\n        id: sellingPlanGroup?.id,\r\n        sellingPlans: sellingPlanGroup.sellingPlans.edges.map(({ node }: any, index: number): PayPerShipmentSellingPlanFrontend => ({\r\n            id: node.id,\r\n            createdAt: node?.createdAt || '',\r\n            position: node?.position || index + 1,\r\n            planName: node?.name || \"Unnamed Plan\",\r\n            showDescription: !!node.description,\r\n            category: node.category || \"SUBSCRIPTION\",\r\n            descriptionContent: node.description || \"\",\r\n\r\n            // Pricing Policy\r\n            pricingPolicyEnable: !!node.pricingPolicies?.length,\r\n            pricingPolicyAdjustmentType: node.pricingPolicies?.[0]?.adjustmentType || \"FIXED_AMOUNT\",\r\n            pricingPolicyAdjustmentValue: node.pricingPolicies?.[0]?.adjustmentValue?.percentage || 0,\r\n            pricingPolicyAfterCycleEnable: false,\r\n            pricingPolicyAfterCycle: 0,\r\n            pricingPolicyAfterCycleAdjustmentType: \"FIXED_AMOUNT\",\r\n            pricingPolicyAfterCycleAdjustmentValue: 0,\r\n\r\n            // Inventory Policy\r\n            inventoryPolicyEnable: !!node.inventoryPolicy,\r\n            inventoryPolicyReserve: node.inventoryPolicy?.reserve || \"ON_FULFILLMENT\",\r\n\r\n            // Delivery Policy\r\n            deliveryPolicyEnable: !!node.deliveryPolicy,\r\n            deliveryPolicyAnchorsCutoffDay: node.deliveryPolicy?.cutoff || 0,\r\n            deliveryPolicyAnchorsDay: 1,\r\n            deliveryPolicyAnchorsMonth: 1,\r\n            deliveryPolicyAnchorsType: \"WEEKDAY\", // Assuming it's a weekly plan, update logic if needed\r\n            deliveryPolicyCutoff: node.deliveryPolicy?.cutoff || 0,\r\n            deliveryPolicyFulfillmentExactTime: node.deliveryPolicy?.fulfillmentExactTime || null,\r\n            deliveryPolicyFulfillmentTrigger: node.deliveryPolicy?.fulfillmentTrigger || \"ANCHOR\",\r\n            deliveryPolicyIntent: node.deliveryPolicy?.intent || \"FULFILLMENT_BEGIN\",\r\n            deliveryPolicyPreAnchorBehavior: node.deliveryPolicy?.preAnchorBehavior || \"ASAP\",\r\n\r\n            // Recurring Delivery Policy\r\n            deliveryRecurringPolicyEnable: !!node.deliveryPolicy?.interval,\r\n            preAnchorBehavior: node.deliveryPolicy?.preAnchorBehavior || \"ASAP\",\r\n            deliveryRecurringPolicyAnchorsCutoffDay: node.deliveryPolicy?.cutoff || 0,\r\n            deliveryRecurringPolicyAnchorsDay: 1,\r\n            deliveryRecurringPolicyAnchorsMonth: 1,\r\n            deliveryRecurringPolicyAnchorsType: \"WEEKDAY\",\r\n            deliveryRecurringPolicyCutoff: node.deliveryPolicy?.cutoff || 0,\r\n            deliveryRecurringPolicyIntent: node.deliveryPolicy?.intent || \"FULFILLMENT_BEGIN\",\r\n            deliveryRecurringPolicyInterval: node.deliveryPolicy?.interval || null,\r\n            deliveryRecurringPolicyIntervalCount: node.deliveryPolicy?.intervalCount || 0,\r\n            deliveryRecurringPreAnchorBehavior: node.deliveryPolicy?.preAnchorBehavior || \"ASAP\",\r\n\r\n            // Recurring Billing Policy\r\n            billingRecurringPolicyEnable: !!node.billingPolicy?.interval,\r\n            billingRecurringPolicyInterval: node.billingPolicy?.interval || \"WEEK\",\r\n            billingRecurringPolicyIntervalCount: node.billingPolicy?.intervalCount || 0,\r\n            billingRecurringPolicyMinCycles: node.billingPolicy?.minCycles || 0,\r\n            billingRecurringPolicyMaxCycles: node.billingPolicy?.maxCycles || 0,\r\n            billingRecurringPolicyAnchorsCutoffDay: 0, // Default, update as needed\r\n            billingRecurringPolicyAnchorsDay: 1,\r\n            billingRecurringPolicyAnchorsMonth: 1,\r\n            billingRecurringPolicyAnchorsType: \"WEEKDAY\",\r\n        }))\r\n    };\r\n};\r\n\r\n\r\n"],"names":["getSellingPlanGroup","sellingPlanGroups","planGroupName","group","processOneTimeGroup","sellingPlanGroup","_a","sellingPlan","processPricingPolicy","processInventoryPolicy","processDeliveryPolicy","processBillingPolicy","_b","_c","_d","_e","_f","_g","_h","_i","processPayPerShipmentGroup","node","index","_j","_k","_l","_m","_n","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z"],"mappings":"AAqDa,MAAAA,EAAsB,CAC/BC,EACAC,IACyB,CACzB,UAAWC,KAASF,EACZ,GAAAE,EAAM,KAAK,eAAiBD,EAC5B,OAAOC,EAAM,KAGd,OAAA,IACX,EAEaC,EAAuBC,GAAuC,CAZ9D,IAAAC,EAaT,MAAMC,GAAcD,EAAAD,EAAiB,aAAa,MAAM,CAAC,IAArC,YAAAC,EAAwC,KAErD,MAAA,CACH,OAAQ,CAAC,CAACC,EACV,UAAUA,GAAA,YAAAA,EAAa,OAAQ,GAC/B,QAASF,GAAA,YAAAA,EAAkB,GAC3B,cAAeE,GAAA,YAAAA,EAAa,GAG5B,GAAGC,EAAqBD,CAAW,EACnC,GAAGE,EAAuBF,CAAW,EACrC,GAAGG,EAAsBH,CAAW,EACpC,GAAGI,EAAqBJ,CAAW,CACvC,CACJ,EAIMC,EAAwBD,GAAsB,CA/BvC,IAAAD,EAAAM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EA+BuC,OAChD,oBAAqB,CAAC,GAACb,EAAAC,GAAA,YAAAA,EAAa,kBAAb,MAAAD,EAA8B,QACrD,8BACIO,GAAAD,EAAAL,GAAA,YAAAA,EAAa,kBAAb,YAAAK,EAA+B,KAA/B,YAAAC,EAAmC,iBAAkB,eACzD,+BACIG,GAAAD,GAAAD,EAAAP,GAAA,YAAAA,EAAa,kBAAb,YAAAO,EAA+B,KAA/B,YAAAC,EAAmC,kBAAnC,YAAAC,EAAoD,eAAcG,GAAAD,GAAAD,EAAAV,GAAA,YAAAA,EAAa,kBAAb,YAAAU,EAA+B,KAA/B,YAAAC,EAAmC,kBAAnC,YAAAC,EAAoD,OAC9H,GAGMV,EAA0BF,GAAsB,CAxCzC,IAAAD,EAwCyC,OAClD,sBAAuB,CAAC,EAACC,GAAA,MAAAA,EAAa,iBACtC,yBACID,EAAAC,GAAA,YAAAA,EAAa,kBAAb,YAAAD,EAA8B,UAAW,gBACjD,GAGMI,EAAyBH,GAAsB,CA/CxC,IAAAD,EAAAM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EA+CwC,OACjD,qBAAsB,CAAC,EAACV,GAAA,MAAAA,EAAa,gBACrC,iCAAgCD,EAAAC,GAAA,YAAAA,EAAa,iBAAb,YAAAD,EAA6B,SAAU,EACvE,yBAA0B,EAC1B,2BAA4B,EAC5B,0BAA2B,WAC3B,uBAAsBM,EAAAL,GAAA,YAAAA,EAAa,iBAAb,YAAAK,EAA6B,SAAU,EAC7D,qCACIC,EAAAN,GAAA,YAAAA,EAAa,iBAAb,YAAAM,EAA6B,uBAAwB,KACzD,mCACIC,EAAAP,GAAA,YAAAA,EAAa,iBAAb,YAAAO,EAA6B,qBAAsB,SACvD,uBACIC,EAAAR,GAAA,YAAAA,EAAa,iBAAb,YAAAQ,EAA6B,SAAU,oBAC3C,kCACIC,EAAAT,GAAA,YAAAA,EAAa,iBAAb,YAAAS,EAA6B,oBAAqB,OACtD,oBACIC,EAAAV,GAAA,YAAAA,EAAa,iBAAb,YAAAU,EAA6B,oBAAqB,MAC1D,GAGMN,EAAwBJ,GAAsB,CAnEvC,IAAAD,EAAAM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAmEuC,OAChD,oBAAqB,CAAC,EAACX,GAAA,MAAAA,EAAa,eACpC,kCACIK,GAAAN,EAAAC,GAAA,YAAAA,EAAa,gBAAb,YAAAD,EAA4B,iBAA5B,YAAAM,EAA4C,OAAQ,QACxD,mCACIG,GAAAD,GAAAD,EAAAN,GAAA,YAAAA,EAAa,gBAAb,YAAAM,EAA4B,iBAA5B,YAAAC,EAA4C,QAA5C,YAAAC,EAAmD,aAAc,EACrE,+CACIC,EAAAT,GAAA,YAAAA,EAAa,gBAAb,YAAAS,EAA4B,kCAAmC,GACnE,uDACIC,EAAAV,GAAA,YAAAA,EAAa,gBAAb,YAAAU,EAA4B,0CAA2C,GAC3E,6CACIC,EAAAX,GAAA,YAAAA,EAAa,gBAAb,YAAAW,EAA4B,gCAAiC,sBACrE,GAEaE,EAA8Bf,IAChC,CACH,WAAWA,GAAA,YAAAA,EAAkB,OAAQ,gBACrC,GAAIA,GAAA,YAAAA,EAAkB,GACtB,aAAcA,EAAiB,aAAa,MAAM,IAAI,CAAC,CAAE,KAAAgB,CAAK,EAAQC,IAAsD,CArFvH,IAAAhB,EAAAM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAqFuH,OACxH,GAAIlB,EAAK,GACT,WAAWA,GAAA,YAAAA,EAAM,YAAa,GAC9B,UAAUA,GAAA,YAAAA,EAAM,WAAYC,EAAQ,EACpC,UAAUD,GAAA,YAAAA,EAAM,OAAQ,eACxB,gBAAiB,CAAC,CAACA,EAAK,YACxB,SAAUA,EAAK,UAAY,eAC3B,mBAAoBA,EAAK,aAAe,GAGxC,oBAAqB,CAAC,GAACf,EAAAe,EAAK,kBAAL,MAAAf,EAAsB,QAC7C,8BAA6BO,GAAAD,EAAAS,EAAK,kBAAL,YAAAT,EAAuB,KAAvB,YAAAC,EAA2B,iBAAkB,eAC1E,+BAA8BG,GAAAD,GAAAD,EAAAO,EAAK,kBAAL,YAAAP,EAAuB,KAAvB,YAAAC,EAA2B,kBAA3B,YAAAC,EAA4C,aAAc,EACxF,8BAA+B,GAC/B,wBAAyB,EACzB,sCAAuC,eACvC,uCAAwC,EAGxC,sBAAuB,CAAC,CAACK,EAAK,gBAC9B,yBAAwBJ,EAAAI,EAAK,kBAAL,YAAAJ,EAAsB,UAAW,iBAGzD,qBAAsB,CAAC,CAACI,EAAK,eAC7B,iCAAgCH,EAAAG,EAAK,iBAAL,YAAAH,EAAqB,SAAU,EAC/D,yBAA0B,EAC1B,2BAA4B,EAC5B,0BAA2B,UAC3B,uBAAsBC,EAAAE,EAAK,iBAAL,YAAAF,EAAqB,SAAU,EACrD,qCAAoCI,EAAAF,EAAK,iBAAL,YAAAE,EAAqB,uBAAwB,KACjF,mCAAkCC,EAAAH,EAAK,iBAAL,YAAAG,EAAqB,qBAAsB,SAC7E,uBAAsBC,EAAAJ,EAAK,iBAAL,YAAAI,EAAqB,SAAU,oBACrD,kCAAiCC,EAAAL,EAAK,iBAAL,YAAAK,EAAqB,oBAAqB,OAG3E,8BAA+B,CAAC,GAACC,EAAAN,EAAK,iBAAL,MAAAM,EAAqB,UACtD,oBAAmBC,EAAAP,EAAK,iBAAL,YAAAO,EAAqB,oBAAqB,OAC7D,0CAAyCC,EAAAR,EAAK,iBAAL,YAAAQ,EAAqB,SAAU,EACxE,kCAAmC,EACnC,oCAAqC,EACrC,mCAAoC,UACpC,gCAA+BC,EAAAT,EAAK,iBAAL,YAAAS,EAAqB,SAAU,EAC9D,gCAA+BC,EAAAV,EAAK,iBAAL,YAAAU,EAAqB,SAAU,oBAC9D,kCAAiCC,EAAAX,EAAK,iBAAL,YAAAW,EAAqB,WAAY,KAClE,uCAAsCC,EAAAZ,EAAK,iBAAL,YAAAY,EAAqB,gBAAiB,EAC5E,qCAAoCC,EAAAb,EAAK,iBAAL,YAAAa,EAAqB,oBAAqB,OAG9E,6BAA8B,CAAC,GAACC,EAAAd,EAAK,gBAAL,MAAAc,EAAoB,UACpD,iCAAgCC,EAAAf,EAAK,gBAAL,YAAAe,EAAoB,WAAY,OAChE,sCAAqCC,EAAAhB,EAAK,gBAAL,YAAAgB,EAAoB,gBAAiB,EAC1E,kCAAiCC,EAAAjB,EAAK,gBAAL,YAAAiB,EAAoB,YAAa,EAClE,kCAAiCC,EAAAlB,EAAK,gBAAL,YAAAkB,EAAoB,YAAa,EAClE,uCAAwC,EACxC,iCAAkC,EAClC,mCAAoC,EACpC,kCAAmC,SAAA,EACrC,CACN"}