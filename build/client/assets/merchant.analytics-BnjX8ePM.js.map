{"version":3,"file":"merchant.analytics-BnjX8ePM.js","sources":["../../../app/routes/merchant.analytics.tsx"],"sourcesContent":["import { LoaderFunctionArgs, redirect } from '@remix-run/node';\r\nimport { Link, useLoaderData } from '@remix-run/react';\r\nimport { AppProvider } from '@shopify/shopify-app-remix/react';\r\nimport { routes } from 'app/config/routes';\r\nimport { getAuthCookie, mergeQueryParams } from 'app/packages/utils/cookieAuth';\r\nimport ExportButton from 'app/shared/export-button';\r\nimport PageHeader from 'app/shared/page-header';\r\nimport ProductsTable from 'app/shared/products/product-list/table';\r\nimport { authenticate } from 'app/shopify.server';\r\nimport { PiPlusBold } from 'react-icons/pi';\r\nimport { Button } from 'rizzui/button';\r\n\r\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\r\n  const cookieHeader = request.headers.get(\"Cookie\");\r\n  const authData = await getAuthCookie(cookieHeader);\r\n  if (!authData) {\r\n    throw redirect(\"/auth/login\");\r\n  }\r\n\r\n  // Create a new request with merged query parameters\r\n  const updatedRequest = mergeQueryParams(request, authData.query);\r\n  await authenticate.admin(updatedRequest);\r\n\r\n  return { apiKey: process.env.SHOPIFY_API_KEY || \"\" };\r\n};\r\n\r\nconst pageHeader = {\r\n  title: 'Products',\r\n  breadcrumb: [\r\n    {\r\n      href: routes.products.products,\r\n      name: 'Products',\r\n    },\r\n    {\r\n      name: 'List',\r\n    },\r\n  ],\r\n};\r\n\r\nconst Analytics = ({ Products = [] }) => {\r\n  const { apiKey } = useLoaderData<typeof loader>();\r\n  return <h1>Analytics</h1>\r\n}\r\n\r\nexport default Analytics"],"names":["Analytics","Products","useLoaderData","jsx","children"],"mappings":"qFAuCMA,MAAAA,EAAYA,CAAC,CAAEC,SAAAA,EAAW,CAAA,CAAG,KACdC,EAA6B,EACzCC,EAAAA,IAAC,MAAGC,SAAS,WAAA,CAAA"}