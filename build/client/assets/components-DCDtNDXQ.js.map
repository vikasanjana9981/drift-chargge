{"version":3,"file":"components-DCDtNDXQ.js","sources":["../../../node_modules/@remix-run/router/dist/router.js","../../../node_modules/react-router/dist/index.js","../../../node_modules/react-router-dom/dist/index.js","../../../node_modules/turbo-stream/dist/turbo-stream.mjs","../../../node_modules/@remix-run/server-runtime/dist/esm/single-fetch.js","../../../node_modules/@remix-run/react/dist/esm/_virtual/_rollupPluginBabelHelpers.js","../../../node_modules/@remix-run/react/dist/esm/invariant.js","../../../node_modules/@remix-run/react/dist/esm/routeModules.js","../../../node_modules/@remix-run/react/dist/esm/links.js","../../../node_modules/@remix-run/react/dist/esm/markup.js","../../../node_modules/@remix-run/react/dist/esm/data.js","../../../node_modules/@remix-run/react/dist/esm/single-fetch.js","../../../node_modules/@remix-run/react/dist/esm/errorBoundaries.js","../../../node_modules/@remix-run/react/dist/esm/fallback.js","../../../node_modules/@remix-run/react/dist/esm/routes.js","../../../node_modules/@remix-run/react/dist/esm/fog-of-war.js","../../../node_modules/@remix-run/react/dist/esm/components.js"],"sourcesContent":["/**\n * @remix-run/router v1.21.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    // Treating this as a full URL will strip any trailing spaces so we need to\n    // pre-encode them since they might be part of a matching splat param from\n    // an ancestor route\n    href = href.replace(/ $/, \"%20\");\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, String(index)];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/v6/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  return matchRoutesImpl(routes, locationArg, basename, false);\n}\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    let decoded = decodePath(pathname);\n    matches = matchRouteBranch(branches[i], decoded, allowPartial);\n  }\n  return matches;\n}\nfunction convertRouteMatchToUiMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:[\\w-]+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname, allowPartial) {\n  if (allowPartial === void 0) {\n    allowPartial = false;\n  }\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    let route = meta.route;\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\n      match = matchPath({\n        path: meta.relativePath,\n        caseSensitive: meta.caseSensitive,\n        end: false\n      }, remainingPathname);\n    }\n    if (!match) {\n      return null;\n    }\n    Object.assign(matchedParams, match.params);\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/v6/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/v6/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = compiledParams.reduce((memo, _ref, index) => {\n    let {\n      paramName,\n      isOptional\n    } = _ref;\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    const value = captureGroups[index];\n    if (isOptional && !value) {\n      memo[paramName] = undefined;\n    } else {\n      memo[paramName] = (value || \"\").replace(/%2F/g, \"/\");\n    }\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let params = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:([\\w-]+)(\\?)?/g, (_, paramName, isOptional) => {\n    params.push({\n      paramName,\n      isOptional: isOptional != null\n    });\n    return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    params.push({\n      paramName: \"*\"\n    });\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, params];\n}\nfunction decodePath(value) {\n  try {\n    return value.split(\"/\").map(v => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/v6/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n// Return the array of pathnames for the current route matches - used to\n// generate the routePathnames input for resolveTo()\nfunction getResolveToMatches(matches, v7_relativeSplatPath) {\n  let pathMatches = getPathContributingMatches(matches);\n  // When v7_relativeSplatPath is enabled, use the full pathname for the leaf\n  // match so we include splat values for \".\" links.  See:\n  // https://github.com/remix-run/react-router/issues/11052#issuecomment-1836589329\n  if (v7_relativeSplatPath) {\n    return pathMatches.map((match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase);\n  }\n  return pathMatches.map(match => match.pathnameBase);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    // With relative=\"route\" (the default), each leading .. segment means\n    // \"go up one route\" instead of \"go up one URL segment\".  This is a key\n    // difference from how <a href> works and a major reason we call this a\n    // \"to\" value instead of a \"href\".\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @deprecated The `json` method is deprecated in favor of returning raw objects.\n * This method will be removed in v7.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass DataWithResponseInit {\n  constructor(data, init) {\n    this.type = \"DataWithResponseInit\";\n    this.data = data;\n    this.init = init || null;\n  }\n}\n/**\n * Create \"responses\" that contain `status`/`headers` without forcing\n * serialization into an actual `Response` - used by Remix single fetch\n */\nfunction data(data, init) {\n  return new DataWithResponseInit(data, typeof init === \"number\" ? {\n    status: init\n  } : init);\n}\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref3) => {\n      let [key, value] = _ref3;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n/**\n * @deprecated The `defer` method is deprecated in favor of returning raw\n * objects. This method will be removed in v7.\n */\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirectDocument = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n/**\n * A redirect response that will perform a `history.replaceState` instead of a\n * `history.pushState` for client-side navigation redirects.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst replace = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Replace\", \"true\");\n  return response;\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n *\n * We don't export the class for public use since it's an implementation\n * detail, but we export the interface above so folks can build their own\n * abstractions around instances via isRouteErrorResponse()\n */\nclass ErrorResponseImpl {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\nconst TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategy;\n  let patchRoutesOnNavigationImpl = init.patchRoutesOnNavigation;\n  // Config driven behavior flags\n  let future = _extends({\n    v7_fetcherPersist: false,\n    v7_normalizeFormMethod: false,\n    v7_partialHydration: false,\n    v7_prependBasename: false,\n    v7_relativeSplatPath: false,\n    v7_skipActionErrorRevalidation: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null && !patchRoutesOnNavigationImpl) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  // In SPA apps, if the user provided a patchRoutesOnNavigation implementation and\n  // our initial match is a splat route, clear them out so we run through lazy\n  // discovery on hydration in case there's a more accurate lazy route match.\n  // In SSR apps (with `hydrationData`), we expect that the server will send\n  // up the proper matched routes so we don't want to run lazy discovery on\n  // initial hydration and want to hydrate into the splat route.\n  if (initialMatches && !init.hydrationData) {\n    let fogOfWar = checkFogOfWar(initialMatches, dataRoutes, init.history.location.pathname);\n    if (fogOfWar.active) {\n      initialMatches = null;\n    }\n  }\n  let initialized;\n  if (!initialMatches) {\n    initialized = false;\n    initialMatches = [];\n    // If partial hydration and fog of war is enabled, we will be running\n    // `patchRoutesOnNavigation` during hydration so include any partial matches as\n    // the initial matches so we can properly render `HydrateFallback`'s\n    if (future.v7_partialHydration) {\n      let fogOfWar = checkFogOfWar(null, dataRoutes, init.history.location.pathname);\n      if (fogOfWar.active && fogOfWar.matches) {\n        initialMatches = fogOfWar.matches;\n      }\n    }\n  } else if (initialMatches.some(m => m.route.lazy)) {\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    initialized = false;\n  } else if (!initialMatches.some(m => m.route.loader)) {\n    // If we've got no loaders to run, then we're good to go\n    initialized = true;\n  } else if (future.v7_partialHydration) {\n    // If partial hydration is enabled, we're initialized so long as we were\n    // provided with hydrationData for every route with a loader, and no loaders\n    // were marked for explicit hydration\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\n    // If errors exist, don't consider routes below the boundary\n    if (errors) {\n      let idx = initialMatches.findIndex(m => errors[m.route.id] !== undefined);\n      initialized = initialMatches.slice(0, idx + 1).every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    } else {\n      initialized = initialMatches.every(m => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\n    }\n  } else {\n    // Without partial hydration - we're initialized if we were provided any\n    // hydrationData - which is expected to be complete\n    initialized = init.hydrationData != null;\n  }\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // Should the current navigation enable document.startViewTransition?\n  let pendingViewTransitionEnabled = false;\n  // Store applied view transitions so we can apply them on POP\n  let appliedViewTransitions = new Map();\n  // Cleanup function for persisting applied transitions to sessionStorage\n  let removePageHideEventListener = null;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = new Set();\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Ref-count mounted fetchers so we know when it's ok to clean them up\n  let activeFetchers = new Map();\n  // Fetchers that have requested a delete when using v7_fetcherPersist,\n  // they'll be officially removed after they return to idle\n  let deletedFetchers = new Set();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let unblockBlockerHistoryUpdate = undefined;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (unblockBlockerHistoryUpdate) {\n        unblockBlockerHistoryUpdate();\n        unblockBlockerHistoryUpdate = undefined;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        let nextHistoryUpdatePromise = new Promise(resolve => {\n          unblockBlockerHistoryUpdate = resolve;\n        });\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked, after the url\n            // restoration is also complete.  See:\n            // https://github.com/remix-run/react-router/issues/11613\n            nextHistoryUpdatePromise.then(() => init.history.go(delta));\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    if (isBrowser) {\n      // FIXME: This feels gross.  How can we cleanup the lines between\n      // scrollRestoration/appliedTransitions persistance?\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\n    }\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location, {\n        initialHydration: true\n      });\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    if (removePageHideEventListener) {\n      removePageHideEventListener();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state = _extends({}, state, newState);\n    // Prep fetcher cleanup so we can tell the UI which fetcher data entries\n    // can be removed\n    let completedFetchers = [];\n    let deletedFetchersKeys = [];\n    if (future.v7_fetcherPersist) {\n      state.fetchers.forEach((fetcher, key) => {\n        if (fetcher.state === \"idle\") {\n          if (deletedFetchers.has(key)) {\n            // Unmounted from the UI and can be totally removed\n            deletedFetchersKeys.push(key);\n          } else {\n            // Returned to idle but still mounted in the UI, so semi-remains for\n            // revalidations and such\n            completedFetchers.push(key);\n          }\n        }\n      });\n    }\n    // Iterate over a local copy so that if flushSync is used and we end up\n    // removing and adding a new subscriber due to the useCallback dependencies,\n    // we don't get ourselves into a loop calling the new subscriber immediately\n    [...subscribers].forEach(subscriber => subscriber(state, {\n      deletedFetchers: deletedFetchersKeys,\n      viewTransitionOpts: opts.viewTransitionOpts,\n      flushSync: opts.flushSync === true\n    }));\n    // Remove idle fetchers from state since we only care about in-flight fetchers.\n    if (future.v7_fetcherPersist) {\n      completedFetchers.forEach(key => state.fetchers.delete(key));\n      deletedFetchersKeys.forEach(key => deleteFetcher(key));\n    }\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState, _temp) {\n    var _location$state, _location$state2;\n    let {\n      flushSync\n    } = _temp === void 0 ? {} : _temp;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    // Commit any in-flight routes at the end of the HMR revalidation \"navigation\"\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    let viewTransitionOpts;\n    // On POP, enable transitions if they were enabled on the original navigation\n    if (pendingAction === Action.Pop) {\n      // Forward takes precedence so they behave like the original navigation\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\n      if (priorPaths && priorPaths.has(location.pathname)) {\n        viewTransitionOpts = {\n          currentLocation: state.location,\n          nextLocation: location\n        };\n      } else if (appliedViewTransitions.has(location.pathname)) {\n        // If we don't have a previous forward nav, assume we're popping back to\n        // the new location and enable if that location previously enabled\n        viewTransitionOpts = {\n          currentLocation: location,\n          nextLocation: state.location\n        };\n      }\n    } else if (pendingViewTransitionEnabled) {\n      // Store the applied transition on PUSH/REPLACE\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\n      if (toPaths) {\n        toPaths.add(location.pathname);\n      } else {\n        toPaths = new Set([location.pathname]);\n        appliedViewTransitions.set(state.location.pathname, toPaths);\n      }\n      viewTransitionOpts = {\n        currentLocation: state.location,\n        nextLocation: location\n      };\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }), {\n      viewTransitionOpts,\n      flushSync: flushSync === true\n    });\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    pendingViewTransitionEnabled = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, future.v7_relativeSplatPath, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let flushSync = (opts && opts.flushSync) === true;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n      enableViewTransition: opts && opts.viewTransition,\n      flushSync\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation,\n      // Proxy through any rending view transition\n      enableViewTransition: pendingViewTransitionEnabled === true\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    let flushSync = (opts && opts.flushSync) === true;\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let {\n        error,\n        notFoundMatches,\n        route\n      } = handleNavigational404(location.pathname);\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial hydration will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      }, {\n        flushSync\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionResult;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingActionResult = [findNearestBoundary(matches).route.id, {\n        type: ResultType.error,\n        error: opts.pendingError\n      }];\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionResult = await handleAction(request, location, opts.submission, matches, fogOfWar.active, {\n        replace: opts.replace,\n        flushSync\n      });\n      if (actionResult.shortCircuited) {\n        return;\n      }\n      // If we received a 404 from handleAction, it's because we couldn't lazily\n      // discover the destination route so we don't want to call loaders\n      if (actionResult.pendingActionResult) {\n        let [routeId, result] = actionResult.pendingActionResult;\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\n          pendingNavigationController = null;\n          completeNavigation(location, {\n            matches: actionResult.matches,\n            loaderData: {},\n            errors: {\n              [routeId]: result.error\n            }\n          });\n          return;\n        }\n      }\n      matches = actionResult.matches || matches;\n      pendingActionResult = actionResult.pendingActionResult;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      flushSync = false;\n      // No need to do fog of war matching again on loader execution\n      fogOfWar.active = false;\n      // Create a GET request for the loaders\n      request = createClientSideRequest(init.history, request.url, request.signal);\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      matches: updatedMatches,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, fogOfWar.active, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === true, flushSync, pendingActionResult);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches: updatedMatches || matches\n    }, getActionDataForCommit(pendingActionResult), {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, isFogOfWar, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    }, {\n      flushSync: opts.flushSync === true\n    });\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          pendingActionResult: [boundaryId, {\n            type: ResultType.error,\n            error: discoverResult.error\n          }]\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          notFoundMatches,\n          error,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          pendingActionResult: [route.id, {\n            type: ResultType.error,\n            error\n          }]\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", state, request, [actionMatch], matches, null);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        let location = normalizeRedirectLocation(result.response.headers.get(\"Location\"), new URL(request.url), basename);\n        replace = location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(request, result, true, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions to the current location are REPLACE\n      // navigations, but if the action threw an error that'll be rendered in\n      // an errorElement, we fall back to PUSH so that the user can use the\n      // back button to get back to the pre-submission form location to try\n      // again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        matches,\n        pendingActionResult: [boundaryMatch.route.id, result]\n      };\n    }\n    return {\n      matches,\n      pendingActionResult: [actionMatch.route.id, result]\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync, pendingActionResult) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    // If we have partialHydration enabled, then don't update the state for the\n    // initial data load since it's not a \"navigation\"\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && (!future.v7_partialHydration || !initialHydration);\n    // When fog of war is enabled, we enter our `loading` state earlier so we\n    // can discover new routes during the `loading` state.  We skip this if\n    // we've already run actions since we would have done our matching already.\n    // If the children() function threw then, we want to proceed with the\n    // partial matches it discovered.\n    if (isFogOfWar) {\n      if (shouldUpdateNavigationState) {\n        let actionData = getUpdatedActionData(pendingActionResult);\n        updateState(_extends({\n          navigation: loadingNavigation\n        }, actionData !== undefined ? {\n          actionData\n        } : {}), {\n          flushSync\n        });\n      }\n      let discoverResult = await discoverRoutes(matches, location.pathname, request.signal);\n      if (discoverResult.type === \"aborted\") {\n        return {\n          shortCircuited: true\n        };\n      } else if (discoverResult.type === \"error\") {\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\n        return {\n          matches: discoverResult.partialMatches,\n          loaderData: {},\n          errors: {\n            [boundaryId]: discoverResult.error\n          }\n        };\n      } else if (!discoverResult.matches) {\n        let {\n          error,\n          notFoundMatches,\n          route\n        } = handleNavigational404(location.pathname);\n        return {\n          matches: notFoundMatches,\n          loaderData: {},\n          errors: {\n            [route.id]: error\n          }\n        };\n      } else {\n        matches = discoverResult.matches;\n      }\n    }\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future.v7_partialHydration && initialHydration === true, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null\n      }, getActionDataForCommit(pendingActionResult), updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}), {\n        flushSync\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (shouldUpdateNavigationState) {\n      let updates = {};\n      if (!isFogOfWar) {\n        // Only update navigation/actionNData if we didn't already do it above\n        updates.navigation = loadingNavigation;\n        let actionData = getUpdatedActionData(pendingActionResult);\n        if (actionData !== undefined) {\n          updates.actionData = actionData;\n        }\n      }\n      if (revalidatingFetchers.length > 0) {\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\n      }\n      updateState(updates, {\n        flushSync\n      });\n    }\n    revalidatingFetchers.forEach(rf => {\n      abortFetcher(rf.key);\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      await startRedirectNavigation(request, redirect.result, true, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    // Preserve SSR errors during partial hydration\n    if (future.v7_partialHydration && initialHydration && state.errors) {\n      errors = _extends({}, state.errors, errors);\n    }\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      matches,\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getUpdatedActionData(pendingActionResult) {\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\n      // This is cast to `any` currently because `RouteData`uses any and it\n      // would be a breaking change to use any.\n      // TODO: v7 - change `RouteData` to use `unknown` instead of `any`\n      return {\n        [pendingActionResult[0]]: pendingActionResult[1].data\n      };\n    } else if (state.actionData) {\n      if (Object.keys(state.actionData).length === 0) {\n        return null;\n      } else {\n        return state.actionData;\n      }\n    }\n  }\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\n    revalidatingFetchers.forEach(rf => {\n      let fetcher = state.fetchers.get(rf.key);\n      let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n      state.fetchers.set(rf.key, revalidatingFetcher);\n    });\n    return new Map(state.fetchers);\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    abortFetcher(key);\n    let flushSync = (opts && opts.flushSync) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, future.v7_relativeSplatPath, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\n    if (fogOfWar.active && fogOfWar.matches) {\n      matches = fogOfWar.matches;\n    }\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }), {\n        flushSync\n      });\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error, {\n        flushSync\n      });\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, fogOfWar.active, flushSync, preventScrollReset, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    function detectAndHandle405Error(m) {\n      if (!m.route.action && !m.route.lazy) {\n        let error = getInternalRouterError(405, {\n          method: submission.formMethod,\n          pathname: path,\n          routeId: routeId\n        });\n        setFetcherError(key, routeId, error, {\n          flushSync\n        });\n        return true;\n      }\n      return false;\n    }\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(requestMatches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        requestMatches = discoverResult.matches;\n        match = getTargetMatch(requestMatches, path);\n        if (detectAndHandle405Error(match)) {\n          return;\n        }\n      }\n    }\n    // Call the action for the fetcher\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResults = await callDataStrategy(\"action\", state, fetchRequest, [match], requestMatches, key);\n    let actionResult = actionResults[match.route.id];\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    // When using v7_fetcherPersist, we don't want errors bubbling up to the UI\n    // or redirects processed for unmounted fetchers so we just revert them to\n    // idle\n    if (future.v7_fetcherPersist && deletedFetchers.has(key)) {\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      }\n      // Let SuccessResult's fall through for revalidation\n    } else {\n      if (isRedirectResult(actionResult)) {\n        fetchControllers.delete(key);\n        if (pendingNavigationLoadId > originatingLoadId) {\n          // A new navigation was kicked off after our action started, so that\n          // should take precedence over this redirect navigation.  We already\n          // set isRevalidationRequired so all loaders for the new route should\n          // fire unless opted out via shouldRevalidate\n          updateFetcherState(key, getDoneFetcher(undefined));\n          return;\n        } else {\n          fetchRedirectIds.add(key);\n          updateFetcherState(key, getLoadingFetcher(submission));\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\n            fetcherSubmission: submission,\n            preventScrollReset\n          });\n        }\n      }\n      // Process any non-redirect errors thrown\n      if (isErrorResult(actionResult)) {\n        setFetcherError(key, routeId, actionResult.error);\n        return;\n      }\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, false, future.v7_skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, [match.route.id, actionResult]);\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      abortFetcher(staleKey);\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(loaderResults);\n    if (redirect) {\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    redirect = findRedirect(fetcherResults);\n    if (redirect) {\n      // If this redirect came from a fetcher make sure we mark it in\n      // fetchRedirectIds so it doesn't get revalidated on the next set of\n      // loader executions\n      fetchRedirectIds.add(redirect.key);\n      return startRedirectNavigation(revalidationRequest, redirect.result, false, {\n        preventScrollReset\n      });\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),\n        fetchers: new Map(state.fetchers)\n      });\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, isFogOfWar, flushSync, preventScrollReset, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined), {\n      flushSync\n    });\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    if (isFogOfWar) {\n      let discoverResult = await discoverRoutes(matches, path, fetchRequest.signal);\n      if (discoverResult.type === \"aborted\") {\n        return;\n      } else if (discoverResult.type === \"error\") {\n        setFetcherError(key, routeId, discoverResult.error, {\n          flushSync\n        });\n        return;\n      } else if (!discoverResult.matches) {\n        setFetcherError(key, routeId, getInternalRouterError(404, {\n          pathname: path\n        }), {\n          flushSync\n        });\n        return;\n      } else {\n        matches = discoverResult.matches;\n        match = getTargetMatch(matches, path);\n      }\n    }\n    // Call the loader for this fetcher route match\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let results = await callDataStrategy(\"loader\", state, fetchRequest, [match], matches, key);\n    let result = results[match.route.id];\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // We don't want errors bubbling up or redirects followed for unmounted\n    // fetchers, so short circuit here if it was removed from the UI\n    if (deletedFetchers.has(key)) {\n      updateFetcherState(key, getDoneFetcher(undefined));\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        updateFetcherState(key, getDoneFetcher(undefined));\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(fetchRequest, result, false, {\n          preventScrollReset\n        });\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      setFetcherError(key, routeId, result.error);\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    updateFetcherState(key, getDoneFetcher(result.data));\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(request, redirect, isNavigation, _temp2) {\n    let {\n      submission,\n      fetcherSubmission,\n      preventScrollReset,\n      replace\n    } = _temp2 === void 0 ? {} : _temp2;\n    if (redirect.response.headers.has(\"X-Remix-Revalidate\")) {\n      isRevalidationRequired = true;\n    }\n    let location = redirect.response.headers.get(\"Location\");\n    invariant(location, \"Expected a Location header on the redirect Response\");\n    location = normalizeRedirectLocation(location, new URL(request.url), basename);\n    let redirectLocation = createLocation(state.location, location, {\n      _isRedirect: true\n    });\n    if (isBrowser) {\n      let isDocumentReload = false;\n      if (redirect.response.headers.has(\"X-Remix-Reload-Document\")) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\n        const url = init.history.createURL(location);\n        isDocumentReload =\n        // Hard reload if it's an absolute URL to a new origin\n        url.origin !== routerWindow.location.origin ||\n        // Hard reload if it's an absolute URL that does not match our basename\n        stripBasename(url.pathname, basename) == null;\n      }\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(location);\n        } else {\n          routerWindow.location.assign(location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true || redirect.response.headers.has(\"X-Remix-Replace\") ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let {\n      formMethod,\n      formAction,\n      formEncType\n    } = state.navigation;\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (redirectPreserveMethodStatusCodes.has(redirect.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: location\n        }),\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve these flags across redirects\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : undefined\n      });\n    }\n  }\n  // Utility wrapper for calling dataStrategy client-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, state, request, matchesToLoad, matches, fetcherKey) {\n    let results;\n    let dataResults = {};\n    try {\n      results = await callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties);\n    } catch (e) {\n      // If the outer dataStrategy method throws, just return the error for all\n      // matches - and it'll naturally bubble to the root\n      matchesToLoad.forEach(m => {\n        dataResults[m.route.id] = {\n          type: ResultType.error,\n          error: e\n        };\n      });\n      return dataResults;\n    }\n    for (let [routeId, result] of Object.entries(results)) {\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        dataResults[routeId] = {\n          type: ResultType.redirect,\n          response: normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, future.v7_relativeSplatPath)\n        };\n      } else {\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(result);\n      }\n    }\n    return dataResults;\n  }\n  async function callLoadersAndMaybeResolveData(state, matches, matchesToLoad, fetchersToLoad, request) {\n    let currentMatches = state.matches;\n    // Kick off loaders and fetchers in parallel\n    let loaderResultsPromise = callDataStrategy(\"loader\", state, request, matchesToLoad, matches, null);\n    let fetcherResultsPromise = Promise.all(fetchersToLoad.map(async f => {\n      if (f.matches && f.match && f.controller) {\n        let results = await callDataStrategy(\"loader\", state, createClientSideRequest(init.history, f.path, f.controller.signal), [f.match], f.matches, f.key);\n        let result = results[f.match.route.id];\n        // Fetcher results are keyed by fetcher key from here on out, not routeId\n        return {\n          [f.key]: result\n        };\n      } else {\n        return Promise.resolve({\n          [f.key]: {\n            type: ResultType.error,\n            error: getInternalRouterError(404, {\n              pathname: f.path\n            })\n          }\n        });\n      }\n    }));\n    let loaderResults = await loaderResultsPromise;\n    let fetcherResults = (await fetcherResultsPromise).reduce((acc, r) => Object.assign(acc, r), {});\n    await Promise.all([resolveNavigationDeferredResults(matches, loaderResults, request.signal, currentMatches, state.loaderData), resolveFetcherDeferredResults(matches, fetcherResults, fetchersToLoad)]);\n    return {\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.add(key);\n      }\n      abortFetcher(key);\n    });\n  }\n  function updateFetcherState(key, fetcher, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function setFetcherError(key, routeId, error, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    }, {\n      flushSync: (opts && opts.flushSync) === true\n    });\n  }\n  function getFetcher(key) {\n    if (future.v7_fetcherPersist) {\n      activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\n      // If this fetcher was previously marked for deletion, unmark it since we\n      // have a new instance\n      if (deletedFetchers.has(key)) {\n        deletedFetchers.delete(key);\n      }\n    }\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    deletedFetchers.delete(key);\n    cancelledFetcherLoads.delete(key);\n    state.fetchers.delete(key);\n  }\n  function deleteFetcherAndUpdateState(key) {\n    if (future.v7_fetcherPersist) {\n      let count = (activeFetchers.get(key) || 0) - 1;\n      if (count <= 0) {\n        activeFetchers.delete(key);\n        deletedFetchers.add(key);\n      } else {\n        activeFetchers.set(key, count);\n      }\n    } else {\n      deleteFetcher(key);\n    }\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    if (controller) {\n      controller.abort();\n      fetchControllers.delete(key);\n    }\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function handleNavigational404(pathname) {\n    let error = getInternalRouterError(404, {\n      pathname\n    });\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(routesToUse);\n    // Cancel all pending deferred on 404s since we don't keep any routes\n    cancelActiveDeferreds();\n    return {\n      notFoundMatches: matches,\n      route,\n      error\n    };\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => convertRouteMatchToUiMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function checkFogOfWar(matches, routesToUse, pathname) {\n    if (patchRoutesOnNavigationImpl) {\n      if (!matches) {\n        let fogMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n        return {\n          active: true,\n          matches: fogMatches || []\n        };\n      } else {\n        if (Object.keys(matches[0].params).length > 0) {\n          // If we matched a dynamic param or a splat, it might only be because\n          // we haven't yet discovered other routes that would match with a\n          // higher score.  Call patchRoutesOnNavigation just to be sure\n          let partialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n          return {\n            active: true,\n            matches: partialMatches\n          };\n        }\n      }\n    }\n    return {\n      active: false,\n      matches: null\n    };\n  }\n  async function discoverRoutes(matches, pathname, signal) {\n    if (!patchRoutesOnNavigationImpl) {\n      return {\n        type: \"success\",\n        matches\n      };\n    }\n    let partialMatches = matches;\n    while (true) {\n      let isNonHMR = inFlightDataRoutes == null;\n      let routesToUse = inFlightDataRoutes || dataRoutes;\n      let localManifest = manifest;\n      try {\n        await patchRoutesOnNavigationImpl({\n          path: pathname,\n          matches: partialMatches,\n          patch: (routeId, children) => {\n            if (signal.aborted) return;\n            patchRoutesImpl(routeId, children, routesToUse, localManifest, mapRouteProperties);\n          }\n        });\n      } catch (e) {\n        return {\n          type: \"error\",\n          error: e,\n          partialMatches\n        };\n      } finally {\n        // If we are not in the middle of an HMR revalidation and we changed the\n        // routes, provide a new identity so when we `updateState` at the end of\n        // this navigation/fetch `router.routes` will be a new identity and\n        // trigger a re-run of memoized `router.routes` dependencies.\n        // HMR will already update the identity and reflow when it lands\n        // `inFlightDataRoutes` in `completeNavigation`\n        if (isNonHMR && !signal.aborted) {\n          dataRoutes = [...dataRoutes];\n        }\n      }\n      if (signal.aborted) {\n        return {\n          type: \"aborted\"\n        };\n      }\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\n      if (newMatches) {\n        return {\n          type: \"success\",\n          matches: newMatches\n        };\n      }\n      let newPartialMatches = matchRoutesImpl(routesToUse, pathname, basename, true);\n      // Avoid loops if the second pass results in the same partial matches\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every((m, i) => m.route.id === newPartialMatches[i].route.id)) {\n        return {\n          type: \"success\",\n          matches: null\n        };\n      }\n      partialMatches = newPartialMatches;\n    }\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  function patchRoutes(routeId, children) {\n    let isNonHMR = inFlightDataRoutes == null;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties);\n    // If we are not in the middle of an HMR revalidation and we changed the\n    // routes, provide a new identity and trigger a reflow via `updateState`\n    // to re-run memoized `router.routes` dependencies.\n    // HMR will already update the identity and reflow when it lands\n    // `inFlightDataRoutes` in `completeNavigation`\n    if (isNonHMR) {\n      dataRoutes = [...dataRoutes];\n      updateState({});\n    }\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get future() {\n      return future;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    get window() {\n      return routerWindow;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher: deleteFetcherAndUpdateState,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    patchRoutes,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Config driven behavior flags\n  let future = _extends({\n    v7_relativeSplatPath: false,\n    v7_throwAbortReason: false\n  }, opts ? opts.future : null);\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   *\n   * - `opts.requestContext` is an optional server context that will be passed\n   *   to actions/loaders in the `context` parameter\n   * - `opts.skipLoaderErrorBubbling` is an optional parameter that will prevent\n   *   the bubbling of errors which allows single-fetch-type implementations\n   *   where the client will handle the bubbling and we may need to return data\n   *   for the handling route\n   */\n  async function query(request, _temp3) {\n    let {\n      requestContext,\n      skipLoaderErrorBubbling,\n      dataStrategy\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, skipLoaderErrorBubbling === true, null);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   *\n   * - `opts.routeId` allows you to specify the specific route handler to call.\n   *   If not provided the handler will determine the proper route by matching\n   *   against `request.url`\n   * - `opts.requestContext` is an optional server context that will be passed\n   *    to actions/loaders in the `context` parameter\n   */\n  async function queryRoute(request, _temp4) {\n    let {\n      routeId,\n      requestContext,\n      dataStrategy\n    } = _temp4 === void 0 ? {} : _temp4;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, dataStrategy || null, false, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction for a\n      // `queryRoute` call, we throw the `DataStrategyResult` to bail out early\n      // and then return or throw the raw Response here accordingly\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\n        if (e.type === ResultType.error) {\n          throw e.result;\n        }\n        return e.result;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      let results = await callDataStrategy(\"action\", request, [actionMatch], matches, isRouteRequest, requestContext, dataStrategy);\n      result = results[actionMatch.route.id];\n      if (request.signal.aborted) {\n        throwStaticHandlerAbortedError(request, isRouteRequest, future);\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.response.status,\n        headers: {\n          Location: result.response.headers.get(\"Location\")\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null, [boundaryMatch.route.id, result]);\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    let context = await loadRouteData(loaderRequest, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, null);\n    return _extends({}, context, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      }\n    }, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionHeaders: result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {}\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, pendingActionResult) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\n          [pendingActionResult[0]]: pendingActionResult[1].error\n        } : null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await callDataStrategy(\"loader\", request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy);\n    if (request.signal.aborted) {\n      throwStaticHandlerAbortedError(request, isRouteRequest, future);\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  // Utility wrapper for calling dataStrategy server-side without having to\n  // pass around the manifest, mapRouteProperties, etc.\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\n    let results = await callDataStrategyImpl(dataStrategy || defaultDataStrategy, type, null, request, matchesToLoad, matches, null, manifest, mapRouteProperties, requestContext);\n    let dataResults = {};\n    await Promise.all(matches.map(async match => {\n      if (!(match.route.id in results)) {\n        return;\n      }\n      let result = results[match.route.id];\n      if (isRedirectDataStrategyResultResult(result)) {\n        let response = result.result;\n        // Throw redirects and let the server handle them with an HTTP redirect\n        throw normalizeRelativeRoutingRedirectResponse(response, request, match.route.id, matches, basename, future.v7_relativeSplatPath);\n      }\n      if (isResponse(result.result) && isRouteRequest) {\n        // For SSR single-route requests, we want to hand Responses back\n        // directly without unwrapping\n        throw result;\n      }\n      dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\n    }));\n    return dataResults;\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction throwStaticHandlerAbortedError(request, isRouteRequest, future) {\n  if (future.v7_throwAbortReason && request.signal.reason !== undefined) {\n    throw request.signal.reason;\n  }\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\n  throw new Error(method + \"() call aborted: \" + request.method + \" \" + request.url);\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId) {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Account for `?index` params when routing to the current location\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\n    let nakedIndex = hasNakedIndexQuery(path.search);\n    if (activeRouteMatch.route.index && !nakedIndex) {\n      // Add one when we're targeting an index route\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\n      // Remove existing ones when we're not\n      let params = new URLSearchParams(path.search);\n      let indexValues = params.getAll(\"index\");\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes at/below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary) {\n  if (includeBoundary === void 0) {\n    includeBoundary = false;\n  }\n  let index = matches.findIndex(m => m.route.id === boundaryId);\n  if (index >= 0) {\n    return matches.slice(0, includeBoundary ? index + 1 : index);\n  }\n  return matches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, skipActionErrorRevalidation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryMatches = matches;\n  if (initialHydration && state.errors) {\n    // On initial hydration, only consider matches up to _and including_ the boundary.\n    // This is inclusive to handle cases where a server loader ran successfully,\n    // a child server loader bubbled up to this route, but this route has\n    // `clientLoader.hydrate` so we want to still run the `clientLoader` so that\n    // we have a complete version of `loaderData`\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, Object.keys(state.errors)[0], true);\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\n    // If an action threw an error, we call loaders up to, but not including the\n    // boundary\n    boundaryMatches = getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]);\n  }\n  // Don't revalidate loaders by default after action 4xx/5xx responses\n  // when the flag is enabled.  They can still opt-into revalidation via\n  // `shouldRevalidate` via `actionResult`\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : undefined;\n  let shouldSkipRevalidation = skipActionErrorRevalidation && actionStatus && actionStatus >= 400;\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    let {\n      route\n    } = match;\n    if (route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (route.loader == null) {\n      return false;\n    }\n    if (initialHydration) {\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      actionStatus,\n      defaultShouldRevalidate: shouldSkipRevalidation ? false :\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate:\n    //  - on initial hydration (shouldn't be any fetchers then anyway)\n    //  - if fetcher won't be present in the subsequent render\n    //    - no longer matches the URL (v7_fetcherPersist=false)\n    //    - was unmounted but persisted due to v7_fetcherPersist=true\n    if (initialHydration || !matches.some(m => m.route.id === f.routeId) || deletedFetchers.has(key)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.has(key)) {\n      // Always mark for revalidation if the fetcher was cancelled\n      cancelledFetcherLoads.delete(key);\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        actionStatus,\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\n  // We dunno if we have a loader - gotta find out!\n  if (route.lazy) {\n    return true;\n  }\n  // No loader, nothing to initialize\n  if (!route.loader) {\n    return false;\n  }\n  let hasData = loaderData != null && loaderData[route.id] !== undefined;\n  let hasError = errors != null && errors[route.id] !== undefined;\n  // Don't run if we error'd during SSR\n  if (!hasData && hasError) {\n    return false;\n  }\n  // Explicitly opting-in to running on hydration\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\n    return true;\n  }\n  // Otherwise, run if we're not yet initialized with anything\n  return !hasData && !hasError;\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties) {\n  var _childrenToPatch;\n  let childrenToPatch;\n  if (routeId) {\n    let route = manifest[routeId];\n    invariant(route, \"No route found to patch children into: routeId = \" + routeId);\n    if (!route.children) {\n      route.children = [];\n    }\n    childrenToPatch = route.children;\n  } else {\n    childrenToPatch = routesToUse;\n  }\n  // Don't patch in routes we already know about so that `patch` is idempotent\n  // to simplify user-land code. This is useful because we re-call the\n  // `patchRoutesOnNavigation` function for matched routes with params.\n  let uniqueChildren = children.filter(newRoute => !childrenToPatch.some(existingRoute => isSameRoute(newRoute, existingRoute)));\n  let newRoutes = convertRoutesToDataRoutes(uniqueChildren, mapRouteProperties, [routeId || \"_\", \"patch\", String(((_childrenToPatch = childrenToPatch) == null ? void 0 : _childrenToPatch.length) || \"0\")], manifest);\n  childrenToPatch.push(...newRoutes);\n}\nfunction isSameRoute(newRoute, existingRoute) {\n  // Most optimal check is by id\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\n    return true;\n  }\n  // Second is by pathing differences\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\n    return false;\n  }\n  // Pathless layout routes are trickier since we need to check children.\n  // If they have no children then they're the same as far as we can tell\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\n    return true;\n  }\n  // Otherwise, we look to see if every child in the new route is already\n  // represented in the existing route's children\n  return newRoute.children.every((aChild, i) => {\n    var _existingRoute$childr;\n    return (_existingRoute$childr = existingRoute.children) == null ? void 0 : _existingRoute$childr.some(bChild => isSameRoute(aChild, bChild));\n  });\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\n// Default implementation of `dataStrategy` which fetches all loaders in parallel\nasync function defaultDataStrategy(_ref4) {\n  let {\n    matches\n  } = _ref4;\n  let matchesToLoad = matches.filter(m => m.shouldLoad);\n  let results = await Promise.all(matchesToLoad.map(m => m.resolve()));\n  return results.reduce((acc, result, i) => Object.assign(acc, {\n    [matchesToLoad[i].route.id]: result\n  }), {});\n}\nasync function callDataStrategyImpl(dataStrategyImpl, type, state, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties, requestContext) {\n  let loadRouteDefinitionsPromises = matches.map(m => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties, manifest) : undefined);\n  let dsMatches = matches.map((match, i) => {\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\n    let shouldLoad = matchesToLoad.some(m => m.route.id === match.route.id);\n    // `resolve` encapsulates route.lazy(), executing the loader/action,\n    // and mapping return values/thrown errors to a `DataStrategyResult`.  Users\n    // can pass a callback to take fine-grained control over the execution\n    // of the loader/action\n    let resolve = async handlerOverride => {\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\n        shouldLoad = true;\n      }\n      return shouldLoad ? callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, requestContext) : Promise.resolve({\n        type: ResultType.data,\n        result: undefined\n      });\n    };\n    return _extends({}, match, {\n      shouldLoad,\n      resolve\n    });\n  });\n  // Send all matches here to allow for a middleware-type implementation.\n  // handler will be a no-op for unneeded routes and we filter those results\n  // back out below.\n  let results = await dataStrategyImpl({\n    matches: dsMatches,\n    request,\n    params: matches[0].params,\n    fetcherKey,\n    context: requestContext\n  });\n  // Wait for all routes to load here but 'swallow the error since we want\n  // it to bubble up from the `await loadRoutePromise` in `callLoaderOrAction` -\n  // called from `match.resolve()`\n  try {\n    await Promise.all(loadRouteDefinitionsPromises);\n  } catch (e) {\n    // No-op\n  }\n  return results;\n}\n// Default logic for calling a loader/action is the user has no specified a dataStrategy\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, staticContext) {\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    // This will never resolve so safe to type it as Promise<DataStrategyResult> to\n    // satisfy the function return value\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    let actualHandler = ctx => {\n      if (typeof handler !== \"function\") {\n        return Promise.reject(new Error(\"You cannot call the handler for a route which defines a boolean \" + (\"\\\"\" + type + \"\\\" [routeId: \" + match.route.id + \"]\")));\n      }\n      return handler({\n        request,\n        params: match.params,\n        context: staticContext\n      }, ...(ctx !== undefined ? [ctx] : []));\n    };\n    let handlerPromise = (async () => {\n      try {\n        let val = await (handlerOverride ? handlerOverride(ctx => actualHandler(ctx)) : actualHandler());\n        return {\n          type: \"data\",\n          result: val\n        };\n      } catch (e) {\n        return {\n          type: \"error\",\n          result: e\n        };\n      }\n    })();\n    return Promise.race([handlerPromise, abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    // If we have a route.lazy promise, await that first\n    if (loadRoutePromise) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let [value] = await Promise.all([\n        // If the handler throws, don't let it immediately bubble out,\n        // since we need to let the lazy() execution finish so we know if this\n        // route has a boundary that can handle the error\n        runHandler(handler).catch(e => {\n          handlerError = e;\n        }), loadRoutePromise]);\n        if (handlerError !== undefined) {\n          throw handlerError;\n        }\n        result = value;\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadRoutePromise;\n        handler = match.route[type];\n        if (handler) {\n          // Handler still runs even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            result: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result.result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    // We should already be catching and converting normal handler executions to\n    // DataStrategyResults and returning them, so anything that throws here is an\n    // unexpected error we still need to wrap\n    return {\n      type: ResultType.error,\n      result: e\n    };\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  return result;\n}\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\n  let {\n    result,\n    type\n  } = dataStrategyResult;\n  if (isResponse(result)) {\n    let data;\n    try {\n      let contentType = result.headers.get(\"Content-Type\");\n      // Check between word boundaries instead of startsWith() due to the last\n      // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n        if (result.body == null) {\n          data = null;\n        } else {\n          data = await result.json();\n        }\n      } else {\n        data = await result.text();\n      }\n    } catch (e) {\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n    if (type === ResultType.error) {\n      return {\n        type: ResultType.error,\n        error: new ErrorResponseImpl(result.status, result.statusText, data),\n        statusCode: result.status,\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (type === ResultType.error) {\n    if (isDataWithResponseInit(result)) {\n      var _result$init2;\n      if (result.data instanceof Error) {\n        var _result$init;\n        return {\n          type: ResultType.error,\n          error: result.data,\n          statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status\n        };\n      }\n      // Convert thrown data() to ErrorResponse instances\n      result = new ErrorResponseImpl(((_result$init2 = result.init) == null ? void 0 : _result$init2.status) || 500, undefined, result.data);\n    }\n    return {\n      type: ResultType.error,\n      error: result,\n      statusCode: isRouteErrorResponse(result) ? result.status : undefined\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init3, _result$init4;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init3 = result.init) == null ? void 0 : _result$init3.status,\n      headers: ((_result$init4 = result.init) == null ? void 0 : _result$init4.headers) && new Headers(result.init.headers)\n    };\n  }\n  if (isDataWithResponseInit(result)) {\n    var _result$init5, _result$init6;\n    return {\n      type: ResultType.data,\n      data: result.data,\n      statusCode: (_result$init5 = result.init) == null ? void 0 : _result$init5.status,\n      headers: (_result$init6 = result.init) != null && _result$init6.headers ? new Headers(result.init.headers) : undefined\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Support relative routing in internal redirects\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename, v7_relativeSplatPath) {\n  let location = response.headers.get(\"Location\");\n  invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\n    let trimmedMatches = matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1);\n    location = normalizeTo(new URL(request.url), trimmedMatches, basename, true, location, v7_relativeSplatPath);\n    response.headers.set(\"Location\", location);\n  }\n  return response;\n}\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\n  if (ABSOLUTE_URL_REGEX.test(location)) {\n    // Strip off the protocol+origin for same-origin + same-basename absolute redirects\n    let normalizedLocation = location;\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\n    if (url.origin === currentUrl.origin && isSameBasename) {\n      return url.pathname + url.search + url.hash;\n    }\n  }\n  return location;\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, skipLoaderErrorBubbling) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : undefined;\n  // Process loader results into state.loaderData/state.errors\n  matches.forEach(match => {\n    if (!(match.route.id in results)) {\n      return;\n    }\n    let id = match.route.id;\n    let result = results[id];\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError !== undefined) {\n        error = pendingError;\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      if (skipLoaderErrorBubbling) {\n        errors[id] = error;\n      } else {\n        // Look upwards from the matched route for the closest ancestor error\n        // boundary, defaulting to the root match.  Prefer higher error values\n        // if lower errors bubble to the same boundary\n        let boundaryMatch = findNearestBoundary(matches, id);\n        if (errors[boundaryMatch.route.id] == null) {\n          errors[boundaryMatch.route.id] = error;\n        }\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      } else {\n        loaderData[id] = result.data;\n        // Error status codes always override success status codes, but if all\n        // loaders are successful we take the deepest status code.\n        if (result.statusCode && result.statusCode !== 200 && !foundError) {\n          statusCode = result.statusCode;\n        }\n        if (result.headers) {\n          loaderHeaders[id] = result.headers;\n        }\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError !== undefined && pendingActionResult) {\n    errors = {\n      [pendingActionResult[0]]: pendingError\n    };\n    loaderData[pendingActionResult[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, results, pendingActionResult, activeDeferreds, false // This method is only called client side so we always want to bubble\n  );\n  // Process results from our revalidating fetchers\n  revalidatingFetchers.forEach(rf => {\n    let {\n      key,\n      match,\n      controller\n    } = rf;\n    let result = fetcherResults[key];\n    invariant(result, \"Did not find corresponding fetcher result\");\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      return;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  });\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\nfunction getActionDataForCommit(pendingActionResult) {\n  if (!pendingActionResult) {\n    return {};\n  }\n  return isErrorResult(pendingActionResult[1]) ? {\n    // Clear out prior actionData on errors\n    actionData: {}\n  } : {\n    actionData: {\n      [pendingActionResult[0]]: pendingActionResult[1].data\n    }\n  };\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.length === 1 ? routes[0] : routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp5) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type,\n    message\n  } = _temp5 === void 0 ? {} : _temp5;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  let entries = Object.entries(results);\n  for (let i = entries.length - 1; i >= 0; i--) {\n    let [key, result] = entries[i];\n    if (isRedirectResult(result)) {\n      return {\n        key,\n        result\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDataStrategyResult(result) {\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === ResultType.data || result.type === ResultType.error);\n}\nfunction isRedirectDataStrategyResultResult(result) {\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDataWithResponseInit(value) {\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveNavigationDeferredResults(matches, results, signal, currentMatches, currentLoaderData) {\n  let entries = Object.entries(results);\n  for (let index = 0; index < entries.length; index++) {\n    let [routeId, result] = entries[index];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && isRevalidatingLoader) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, false).then(result => {\n        if (result) {\n          results[routeId] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveFetcherDeferredResults(matches, results, revalidatingFetchers) {\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      routeId,\n      controller\n    } = revalidatingFetchers[index];\n    let result = results[key];\n    let match = matches.find(m => (m == null ? void 0 : m.route.id) === routeId);\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    if (isDeferredResult(result)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      invariant(controller, \"Expected an AbortController for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, controller.signal, true).then(result => {\n        if (result) {\n          results[key] = result;\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data\n  };\n  return fetcher;\n}\nfunction restoreAppliedTransitions(_window, transitions) {\n  try {\n    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);\n    if (sessionPositions) {\n      let json = JSON.parse(sessionPositions);\n      for (let [k, v] of Object.entries(json || {})) {\n        if (v && Array.isArray(v)) {\n          transitions.set(k, new Set(v || []));\n        }\n      }\n    }\n  } catch (e) {\n    // no-op, use default empty object\n  }\n}\nfunction persistAppliedTransitions(_window, transitions) {\n  if (transitions.size > 0) {\n    let json = {};\n    for (let [k, v] of transitions) {\n      json[k] = [...v];\n    }\n    try {\n      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json));\n    } catch (error) {\n      warning(false, \"Failed to save applied view transitions in sessionStorage (\" + error + \").\");\n    }\n  }\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, ErrorResponseImpl as UNSAFE_ErrorResponseImpl, convertRouteMatchToUiMatch as UNSAFE_convertRouteMatchToUiMatch, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, decodePath as UNSAFE_decodePath, getResolveToMatches as UNSAFE_getResolveToMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, data, defer, generatePath, getStaticContextFromError, getToPathname, isDataWithResponseInit, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, redirectDocument, replace, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.28.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_decodePath, UNSAFE_getResolveToMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, UNSAFE_convertRouteMatchToUiMatch, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, replace, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level `<Router>` API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/v6/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a `<Router>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/v6/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * `<NavLink>`.\n *\n * @see https://reactrouter.com/v6/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, UNSAFE_decodePath(pathname)), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by `<Link>`s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/v6/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    future,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/v6/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by `<Outlet>` to render child routes.\n *\n * @see https://reactrouter.com/v6/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/v6/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/v6/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    future\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an `<Outlet>` to render their child route's\n * element.\n *\n * @see https://reactrouter.com/v6/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = pathname;\n  if (parentPathnameBase !== \"/\") {\n    // Determine the remaining pathname by removing the # of URL segments the\n    // parentPathnameBase has, instead of removing based on character count.\n    // This is because we can't guarantee that incoming/outgoing encodings/\n    // decodings will match exactly.\n    // We decode paths before matching on a per-segment basis with\n    // decodeURIComponent(), but we re-encode pathnames via `new URL()` so they\n    // match what `window.location.pathname` would reflect.  Those don't 100%\n    // align when it comes to encoded URI characters such as % and &.\n    //\n    // So we may end up with:\n    //   pathname:           \"/descendant/a%25b/match\"\n    //   parentPathnameBase: \"/descendant/a%b\"\n    //\n    // And the direct substring removal approach won't work :/\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\n  }\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined || matches[matches.length - 1].route.lazy !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState, future);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error !== undefined ? props.error : state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error !== undefined ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState, future) {\n  var _dataRouterState;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (future === void 0) {\n    future = null;\n  }\n  if (matches == null) {\n    var _future;\n    if (!dataRouterState) {\n      return null;\n    }\n    if (dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else if ((_future = future) != null && _future.v7_partialHydration && parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\n      // Don't bail if we're initializing with partial hydration and we have\n      // router matches.  That means we're actively running `patchRoutesOnNavigation`\n      // so we should render down the partial matches to the appropriate\n      // `HydrateFallback`.  We only do this if `parentMatches` is empty so it\n      // only impacts the root matches for `RouterProvider` and no descendant\n      // `<Routes>`\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState = dataRouterState) == null ? void 0 : _dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]) !== undefined);\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  // If we're in a partial hydration mode, detect if we need to render down to\n  // a given HydrateFallback while we load the rest of the hydration data\n  let renderFallback = false;\n  let fallbackIndex = -1;\n  if (dataRouterState && future && future.v7_partialHydration) {\n    for (let i = 0; i < renderedMatches.length; i++) {\n      let match = renderedMatches[i];\n      // Track the deepest fallback up until the first route without data\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\n        fallbackIndex = i;\n      }\n      if (match.route.id) {\n        let {\n          loaderData,\n          errors\n        } = dataRouterState;\n        let needsToRunLoader = match.route.loader && loaderData[match.route.id] === undefined && (!errors || errors[match.route.id] === undefined);\n        if (match.route.lazy || needsToRunLoader) {\n          // We found the first route that's not ready to render (waiting on\n          // lazy, or has a loader that hasn't run yet).  Flag that we need to\n          // render a fallback and render up until the appropriate fallback\n          renderFallback = true;\n          if (fallbackIndex >= 0) {\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\n          } else {\n            renderedMatches = [renderedMatches[0]];\n          }\n          break;\n        }\n      }\n    }\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    // Only data routers handle errors/fallbacks\n    let error;\n    let shouldRenderHydrateFallback = false;\n    let errorElement = null;\n    let hydrateFallbackElement = null;\n    if (dataRouterState) {\n      error = errors && match.route.id ? errors[match.route.id] : undefined;\n      errorElement = match.route.errorElement || defaultErrorElement;\n      if (renderFallback) {\n        if (fallbackIndex < 0 && index === 0) {\n          warningOnce(\"route-fallback\", false, \"No `HydrateFallback` element provided to render during initial hydration\");\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = null;\n        } else if (fallbackIndex === index) {\n          shouldRenderHydrateFallback = true;\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\n        }\n      }\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (shouldRenderHydrateFallback) {\n        children = hydrateFallbackElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook = /*#__PURE__*/function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n  return DataRouterHook;\n}(DataRouterHook || {});\nvar DataRouterStateHook = /*#__PURE__*/function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n  return DataRouterStateHook;\n}(DataRouterStateHook || {});\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(() => ({\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  }), [dataRouterContext.router.revalidate, state.revalidation]);\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(m => UNSAFE_convertRouteMatchToUiMatch(m, loaderData)), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  return state.actionData ? state.actionData[routeId] : undefined;\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error !== undefined) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor `<Await />` value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor `<Await />` value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned$1 = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned$1[key]) {\n    alreadyWarned$1[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\nconst alreadyWarned = {};\nfunction warnOnce(key, message) {\n  if (!alreadyWarned[message]) {\n    alreadyWarned[message] = true;\n    console.warn(message);\n  }\n}\nconst logDeprecation = (flag, msg, link) => warnOnce(flag, \"\\u26A0\\uFE0F React Router Future Flag Warning: \" + msg + \". \" + (\"You can use the `\" + flag + \"` future flag to opt-in early. \") + (\"For more information, see \" + link + \".\"));\nfunction logV6DeprecationWarnings(renderFuture, routerFuture) {\n  if ((renderFuture == null ? void 0 : renderFuture.v7_startTransition) === undefined) {\n    logDeprecation(\"v7_startTransition\", \"React Router will begin wrapping state updates in `React.startTransition` in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_starttransition\");\n  }\n  if ((renderFuture == null ? void 0 : renderFuture.v7_relativeSplatPath) === undefined && (!routerFuture || !routerFuture.v7_relativeSplatPath)) {\n    logDeprecation(\"v7_relativeSplatPath\", \"Relative route resolution within Splat routes is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath\");\n  }\n  if (routerFuture) {\n    if (routerFuture.v7_fetcherPersist === undefined) {\n      logDeprecation(\"v7_fetcherPersist\", \"The persistence behavior of fetchers is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist\");\n    }\n    if (routerFuture.v7_normalizeFormMethod === undefined) {\n      logDeprecation(\"v7_normalizeFormMethod\", \"Casing of `formMethod` fields is being normalized to uppercase in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod\");\n    }\n    if (routerFuture.v7_partialHydration === undefined) {\n      logDeprecation(\"v7_partialHydration\", \"`RouterProvider` hydration behavior is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_partialhydration\");\n    }\n    if (routerFuture.v7_skipActionErrorRevalidation === undefined) {\n      logDeprecation(\"v7_skipActionErrorRevalidation\", \"The revalidation behavior after 4xx/5xx `action` responses is changing in v7\", \"https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation\");\n    }\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    if (v7_startTransition && startTransitionImpl) {\n      startTransitionImpl(() => setStateImpl(newState));\n    } else {\n      setStateImpl(newState);\n    }\n  }, [setStateImpl, v7_startTransition]);\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  React.useEffect(() => logV6DeprecationWarnings(future, router.future), [router, future]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    }\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` that stores all entries in memory.\n *\n * @see https://reactrouter.com/v6/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/v6/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    future,\n    static: isStatic\n  } = React.useContext(NavigationContext);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!isStatic, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getResolveToMatches(matches, future.v7_relativeSplatPath), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/v6/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/v6/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a `<Router>` directly. Instead, you'll render a\n * router that is more specific to your environment such as a `<BrowserRouter>`\n * in web browsers or a `<StaticRouter>` for server rendering.\n *\n * @see https://reactrouter.com/v6/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false,\n    future\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp,\n    future: _extends({\n      v7_relativeSplatPath: false\n    }, future)\n  }), [basename, future, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of `<Route>` elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/v6/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus = /*#__PURE__*/function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n  return AwaitRenderStatus;\n}(AwaitRenderStatus || {});\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = \"_error\" in promise ? AwaitRenderStatus.error : \"_data\" in promise ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on `<Await>`\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/v6/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.HydrateFallback) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.hydrateFallbackElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - \" + \"`HydrateFallback` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      hydrateFallbackElement: /*#__PURE__*/React.createElement(route.HydrateFallback),\n      HydrateFallback: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, logV6DeprecationWarnings as UNSAFE_logV6DeprecationWarnings, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.28.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_logV6DeprecationWarnings, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\n  _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"];\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"6\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync,\n      viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\";\n    // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n      return;\n    }\n    // flushSync + startViewTransition\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      });\n      // Update the DOM\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      });\n      // Clean up after the animation completes\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    }\n    // startTransition + startViewTransition\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]);\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0;\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future, router.future), [future, router.future]);\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n}\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition\n    } = _ref7,\n    rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    viewTransition\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children\n    } = _ref8,\n    rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null &&\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  }\n  // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    viewTransition: viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition\n    } = _ref9,\n    props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      viewTransition\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n// Internal hooks\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n// External hooks\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        flushSync: options.flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        flushSync: options.flushSync,\n        viewTransition: options.viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher(_temp3) {\n  var _route$matches;\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  // Fetcher additions\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit, useViewTransitionState };\n//# sourceMappingURL=index.js.map\n","// src/utils.ts\nvar HOLE = -1;\nvar NAN = -2;\nvar NEGATIVE_INFINITY = -3;\nvar NEGATIVE_ZERO = -4;\nvar NULL = -5;\nvar POSITIVE_INFINITY = -6;\nvar UNDEFINED = -7;\nvar TYPE_BIGINT = \"B\";\nvar TYPE_DATE = \"D\";\nvar TYPE_ERROR = \"E\";\nvar TYPE_MAP = \"M\";\nvar TYPE_NULL_OBJECT = \"N\";\nvar TYPE_PROMISE = \"P\";\nvar TYPE_REGEXP = \"R\";\nvar TYPE_SET = \"S\";\nvar TYPE_SYMBOL = \"Y\";\nvar TYPE_URL = \"U\";\nvar TYPE_PREVIOUS_RESOLVED = \"Z\";\nvar Deferred = class {\n  promise;\n  resolve;\n  reject;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n};\nfunction createLineSplittingTransform() {\n  const decoder = new TextDecoder();\n  let leftover = \"\";\n  return new TransformStream({\n    transform(chunk, controller) {\n      const str = decoder.decode(chunk, { stream: true });\n      const parts = (leftover + str).split(\"\\n\");\n      leftover = parts.pop() || \"\";\n      for (const part of parts) {\n        controller.enqueue(part);\n      }\n    },\n    flush(controller) {\n      if (leftover) {\n        controller.enqueue(leftover);\n      }\n    }\n  });\n}\n\n// src/flatten.ts\nfunction flatten(input) {\n  const { indices } = this;\n  const existing = indices.get(input);\n  if (existing)\n    return [existing];\n  if (input === void 0)\n    return UNDEFINED;\n  if (input === null)\n    return NULL;\n  if (Number.isNaN(input))\n    return NAN;\n  if (input === Number.POSITIVE_INFINITY)\n    return POSITIVE_INFINITY;\n  if (input === Number.NEGATIVE_INFINITY)\n    return NEGATIVE_INFINITY;\n  if (input === 0 && 1 / input < 0)\n    return NEGATIVE_ZERO;\n  const index = this.index++;\n  indices.set(input, index);\n  stringify.call(this, input, index);\n  return index;\n}\nfunction stringify(input, index) {\n  const { deferred, plugins, postPlugins } = this;\n  const str = this.stringified;\n  const stack = [[input, index]];\n  while (stack.length > 0) {\n    const [input2, index2] = stack.pop();\n    const partsForObj = (obj) => Object.keys(obj).map((k) => `\"_${flatten.call(this, k)}\":${flatten.call(this, obj[k])}`).join(\",\");\n    let error = null;\n    switch (typeof input2) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        str[index2] = JSON.stringify(input2);\n        break;\n      case \"bigint\":\n        str[index2] = `[\"${TYPE_BIGINT}\",\"${input2}\"]`;\n        break;\n      case \"symbol\": {\n        const keyFor = Symbol.keyFor(input2);\n        if (!keyFor) {\n          error = new Error(\n            \"Cannot encode symbol unless created with Symbol.for()\"\n          );\n        } else {\n          str[index2] = `[\"${TYPE_SYMBOL}\",${JSON.stringify(keyFor)}]`;\n        }\n        break;\n      }\n      case \"object\": {\n        if (!input2) {\n          str[index2] = `${NULL}`;\n          break;\n        }\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          let result = isArray ? \"[\" : \"{\";\n          if (isArray) {\n            for (let i = 0; i < input2.length; i++)\n              result += (i ? \",\" : \"\") + (i in input2 ? flatten.call(this, input2[i]) : HOLE);\n            str[index2] = `${result}]`;\n          } else if (input2 instanceof Date) {\n            str[index2] = `[\"${TYPE_DATE}\",${input2.getTime()}]`;\n          } else if (input2 instanceof URL) {\n            str[index2] = `[\"${TYPE_URL}\",${JSON.stringify(input2.href)}]`;\n          } else if (input2 instanceof RegExp) {\n            str[index2] = `[\"${TYPE_REGEXP}\",${JSON.stringify(\n              input2.source\n            )},${JSON.stringify(input2.flags)}]`;\n          } else if (input2 instanceof Set) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_SET}\",${[...input2].map((val) => flatten.call(this, val)).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_SET}\"]`;\n            }\n          } else if (input2 instanceof Map) {\n            if (input2.size > 0) {\n              str[index2] = `[\"${TYPE_MAP}\",${[...input2].flatMap(([k, v]) => [\n                flatten.call(this, k),\n                flatten.call(this, v)\n              ]).join(\",\")}]`;\n            } else {\n              str[index2] = `[\"${TYPE_MAP}\"]`;\n            }\n          } else if (input2 instanceof Promise) {\n            str[index2] = `[\"${TYPE_PROMISE}\",${index2}]`;\n            deferred[index2] = input2;\n          } else if (input2 instanceof Error) {\n            str[index2] = `[\"${TYPE_ERROR}\",${JSON.stringify(input2.message)}`;\n            if (input2.name !== \"Error\") {\n              str[index2] += `,${JSON.stringify(input2.name)}`;\n            }\n            str[index2] += \"]\";\n          } else if (Object.getPrototypeOf(input2) === null) {\n            str[index2] = `[\"${TYPE_NULL_OBJECT}\",{${partsForObj(input2)}}]`;\n          } else if (isPlainObject(input2)) {\n            str[index2] = `{${partsForObj(input2)}}`;\n          } else {\n            error = new Error(\"Cannot encode object with prototype\");\n          }\n        }\n        break;\n      }\n      default: {\n        const isArray = Array.isArray(input2);\n        let pluginHandled = false;\n        if (!isArray && plugins) {\n          for (const plugin of plugins) {\n            const pluginResult = plugin(input2);\n            if (Array.isArray(pluginResult)) {\n              pluginHandled = true;\n              const [pluginIdentifier, ...rest] = pluginResult;\n              str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n              if (rest.length > 0) {\n                str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n              }\n              str[index2] += \"]\";\n              break;\n            }\n          }\n        }\n        if (!pluginHandled) {\n          error = new Error(\"Cannot encode function or unexpected type\");\n        }\n      }\n    }\n    if (error) {\n      let pluginHandled = false;\n      if (postPlugins) {\n        for (const plugin of postPlugins) {\n          const pluginResult = plugin(input2);\n          if (Array.isArray(pluginResult)) {\n            pluginHandled = true;\n            const [pluginIdentifier, ...rest] = pluginResult;\n            str[index2] = `[${JSON.stringify(pluginIdentifier)}`;\n            if (rest.length > 0) {\n              str[index2] += `,${rest.map((v) => flatten.call(this, v)).join(\",\")}`;\n            }\n            str[index2] += \"]\";\n            break;\n          }\n        }\n      }\n      if (!pluginHandled) {\n        throw error;\n      }\n    }\n  }\n}\nvar objectProtoNames = Object.getOwnPropertyNames(Object.prototype).sort().join(\"\\0\");\nfunction isPlainObject(thing) {\n  const proto = Object.getPrototypeOf(thing);\n  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join(\"\\0\") === objectProtoNames;\n}\n\n// src/unflatten.ts\nvar globalObj = typeof window !== \"undefined\" ? window : typeof globalThis !== \"undefined\" ? globalThis : void 0;\nfunction unflatten(parsed) {\n  const { hydrated, values } = this;\n  if (typeof parsed === \"number\")\n    return hydrate.call(this, parsed);\n  if (!Array.isArray(parsed) || !parsed.length)\n    throw new SyntaxError();\n  const startIndex = values.length;\n  for (const value of parsed) {\n    values.push(value);\n  }\n  hydrated.length = values.length;\n  return hydrate.call(this, startIndex);\n}\nfunction hydrate(index) {\n  const { hydrated, values, deferred, plugins } = this;\n  let result;\n  const stack = [\n    [\n      index,\n      (v) => {\n        result = v;\n      }\n    ]\n  ];\n  let postRun = [];\n  while (stack.length > 0) {\n    const [index2, set] = stack.pop();\n    switch (index2) {\n      case UNDEFINED:\n        set(void 0);\n        continue;\n      case NULL:\n        set(null);\n        continue;\n      case NAN:\n        set(NaN);\n        continue;\n      case POSITIVE_INFINITY:\n        set(Infinity);\n        continue;\n      case NEGATIVE_INFINITY:\n        set(-Infinity);\n        continue;\n      case NEGATIVE_ZERO:\n        set(-0);\n        continue;\n    }\n    if (hydrated[index2]) {\n      set(hydrated[index2]);\n      continue;\n    }\n    const value = values[index2];\n    if (!value || typeof value !== \"object\") {\n      hydrated[index2] = value;\n      set(value);\n      continue;\n    }\n    if (Array.isArray(value)) {\n      if (typeof value[0] === \"string\") {\n        const [type, b, c] = value;\n        switch (type) {\n          case TYPE_DATE:\n            set(hydrated[index2] = new Date(b));\n            continue;\n          case TYPE_URL:\n            set(hydrated[index2] = new URL(b));\n            continue;\n          case TYPE_BIGINT:\n            set(hydrated[index2] = BigInt(b));\n            continue;\n          case TYPE_REGEXP:\n            set(hydrated[index2] = new RegExp(b, c));\n            continue;\n          case TYPE_SYMBOL:\n            set(hydrated[index2] = Symbol.for(b));\n            continue;\n          case TYPE_SET:\n            const newSet = /* @__PURE__ */ new Set();\n            hydrated[index2] = newSet;\n            for (let i = 1; i < value.length; i++)\n              stack.push([\n                value[i],\n                (v) => {\n                  newSet.add(v);\n                }\n              ]);\n            set(newSet);\n            continue;\n          case TYPE_MAP:\n            const map = /* @__PURE__ */ new Map();\n            hydrated[index2] = map;\n            for (let i = 1; i < value.length; i += 2) {\n              const r = [];\n              stack.push([\n                value[i + 1],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                value[i],\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                map.set(r[0], r[1]);\n              });\n            }\n            set(map);\n            continue;\n          case TYPE_NULL_OBJECT:\n            const obj = /* @__PURE__ */ Object.create(null);\n            hydrated[index2] = obj;\n            for (const key of Object.keys(b).reverse()) {\n              const r = [];\n              stack.push([\n                b[key],\n                (v) => {\n                  r[1] = v;\n                }\n              ]);\n              stack.push([\n                Number(key.slice(1)),\n                (k) => {\n                  r[0] = k;\n                }\n              ]);\n              postRun.push(() => {\n                obj[r[0]] = r[1];\n              });\n            }\n            set(obj);\n            continue;\n          case TYPE_PROMISE:\n            if (hydrated[b]) {\n              set(hydrated[index2] = hydrated[b]);\n            } else {\n              const d = new Deferred();\n              deferred[b] = d;\n              set(hydrated[index2] = d.promise);\n            }\n            continue;\n          case TYPE_ERROR:\n            const [, message, errorType] = value;\n            let error = errorType && globalObj && globalObj[errorType] ? new globalObj[errorType](message) : new Error(message);\n            hydrated[index2] = error;\n            set(error);\n            continue;\n          case TYPE_PREVIOUS_RESOLVED:\n            set(hydrated[index2] = hydrated[b]);\n            continue;\n          default:\n            if (Array.isArray(plugins)) {\n              const r = [];\n              const vals = value.slice(1);\n              for (let i = 0; i < vals.length; i++) {\n                const v = vals[i];\n                stack.push([\n                  v,\n                  (v2) => {\n                    r[i] = v2;\n                  }\n                ]);\n              }\n              postRun.push(() => {\n                for (const plugin of plugins) {\n                  const result2 = plugin(value[0], ...r);\n                  if (result2) {\n                    set(hydrated[index2] = result2.value);\n                    return;\n                  }\n                }\n                throw new SyntaxError();\n              });\n              continue;\n            }\n            throw new SyntaxError();\n        }\n      } else {\n        const array = [];\n        hydrated[index2] = array;\n        for (let i = 0; i < value.length; i++) {\n          const n = value[i];\n          if (n !== HOLE) {\n            stack.push([\n              n,\n              (v) => {\n                array[i] = v;\n              }\n            ]);\n          }\n        }\n        set(array);\n        continue;\n      }\n    } else {\n      const object = {};\n      hydrated[index2] = object;\n      for (const key of Object.keys(value).reverse()) {\n        const r = [];\n        stack.push([\n          value[key],\n          (v) => {\n            r[1] = v;\n          }\n        ]);\n        stack.push([\n          Number(key.slice(1)),\n          (k) => {\n            r[0] = k;\n          }\n        ]);\n        postRun.push(() => {\n          object[r[0]] = r[1];\n        });\n      }\n      set(object);\n      continue;\n    }\n  }\n  while (postRun.length > 0) {\n    postRun.pop()();\n  }\n  return result;\n}\n\n// src/turbo-stream.ts\nasync function decode(readable, options) {\n  const { plugins } = options ?? {};\n  const done = new Deferred();\n  const reader = readable.pipeThrough(createLineSplittingTransform()).getReader();\n  const decoder = {\n    values: [],\n    hydrated: [],\n    deferred: {},\n    plugins\n  };\n  const decoded = await decodeInitial.call(decoder, reader);\n  let donePromise = done.promise;\n  if (decoded.done) {\n    done.resolve();\n  } else {\n    donePromise = decodeDeferred.call(decoder, reader).then(done.resolve).catch((reason) => {\n      for (const deferred of Object.values(decoder.deferred)) {\n        deferred.reject(reason);\n      }\n      done.reject(reason);\n    });\n  }\n  return {\n    done: donePromise.then(() => reader.closed),\n    value: decoded.value\n  };\n}\nasync function decodeInitial(reader) {\n  const read = await reader.read();\n  if (!read.value) {\n    throw new SyntaxError();\n  }\n  let line;\n  try {\n    line = JSON.parse(read.value);\n  } catch (reason) {\n    throw new SyntaxError();\n  }\n  return {\n    done: read.done,\n    value: unflatten.call(this, line)\n  };\n}\nasync function decodeDeferred(reader) {\n  let read = await reader.read();\n  while (!read.done) {\n    if (!read.value)\n      continue;\n    const line = read.value;\n    switch (line[0]) {\n      case TYPE_PROMISE: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.resolve(value);\n        break;\n      }\n      case TYPE_ERROR: {\n        const colonIndex = line.indexOf(\":\");\n        const deferredId = Number(line.slice(1, colonIndex));\n        const deferred = this.deferred[deferredId];\n        if (!deferred) {\n          throw new Error(`Deferred ID ${deferredId} not found in stream`);\n        }\n        const lineData = line.slice(colonIndex + 1);\n        let jsonLine;\n        try {\n          jsonLine = JSON.parse(lineData);\n        } catch (reason) {\n          throw new SyntaxError();\n        }\n        const value = unflatten.call(this, jsonLine);\n        deferred.reject(value);\n        break;\n      }\n      default:\n        throw new SyntaxError();\n    }\n    read = await reader.read();\n  }\n}\nfunction encode(input, options) {\n  const { plugins, postPlugins, signal } = options ?? {};\n  const encoder = {\n    deferred: {},\n    index: 0,\n    indices: /* @__PURE__ */ new Map(),\n    stringified: [],\n    plugins,\n    postPlugins,\n    signal\n  };\n  const textEncoder = new TextEncoder();\n  let lastSentIndex = 0;\n  const readable = new ReadableStream({\n    async start(controller) {\n      const id = flatten.call(encoder, input);\n      if (Array.isArray(id)) {\n        throw new Error(\"This should never happen\");\n      }\n      if (id < 0) {\n        controller.enqueue(textEncoder.encode(`${id}\n`));\n      } else {\n        controller.enqueue(\n          textEncoder.encode(`[${encoder.stringified.join(\",\")}]\n`)\n        );\n        lastSentIndex = encoder.stringified.length - 1;\n      }\n      const seenPromises = /* @__PURE__ */ new WeakSet();\n      while (Object.keys(encoder.deferred).length > 0) {\n        for (const [deferredId, deferred] of Object.entries(encoder.deferred)) {\n          if (seenPromises.has(deferred))\n            continue;\n          seenPromises.add(\n            encoder.deferred[Number(deferredId)] = raceSignal(\n              deferred,\n              encoder.signal\n            ).then(\n              (resolved) => {\n                const id2 = flatten.call(encoder, resolved);\n                if (Array.isArray(id2)) {\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_PROMISE}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                    )\n                  );\n                  encoder.index++;\n                  lastSentIndex++;\n                } else if (id2 < 0) {\n                  controller.enqueue(\n                    textEncoder.encode(`${TYPE_PROMISE}${deferredId}:${id2}\n`)\n                  );\n                } else {\n                  const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_PROMISE}${deferredId}:[${values}]\n`\n                    )\n                  );\n                  lastSentIndex = encoder.stringified.length - 1;\n                }\n              },\n              (reason) => {\n                if (!reason || typeof reason !== \"object\" || !(reason instanceof Error)) {\n                  reason = new Error(\"An unknown error occurred\");\n                }\n                const id2 = flatten.call(encoder, reason);\n                if (Array.isArray(id2)) {\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_ERROR}${deferredId}:[[\"${TYPE_PREVIOUS_RESOLVED}\",${id2[0]}]]\n`\n                    )\n                  );\n                  encoder.index++;\n                  lastSentIndex++;\n                } else if (id2 < 0) {\n                  controller.enqueue(\n                    textEncoder.encode(`${TYPE_ERROR}${deferredId}:${id2}\n`)\n                  );\n                } else {\n                  const values = encoder.stringified.slice(lastSentIndex + 1).join(\",\");\n                  controller.enqueue(\n                    textEncoder.encode(\n                      `${TYPE_ERROR}${deferredId}:[${values}]\n`\n                    )\n                  );\n                  lastSentIndex = encoder.stringified.length - 1;\n                }\n              }\n            ).finally(() => {\n              delete encoder.deferred[Number(deferredId)];\n            })\n          );\n        }\n        await Promise.race(Object.values(encoder.deferred));\n      }\n      await Promise.all(Object.values(encoder.deferred));\n      controller.close();\n    }\n  });\n  return readable;\n}\nfunction raceSignal(promise, signal) {\n  if (!signal)\n    return promise;\n  if (signal.aborted)\n    return Promise.reject(signal.reason || new Error(\"Signal was aborted.\"));\n  const abort = new Promise((resolve, reject) => {\n    signal.addEventListener(\"abort\", (event) => {\n      reject(signal.reason || new Error(\"Signal was aborted.\"));\n    });\n    promise.then(resolve).catch(reject);\n  });\n  abort.catch(() => {\n  });\n  return Promise.race([abort, promise]);\n}\nexport {\n  decode,\n  encode\n};\n","/**\n * @remix-run/server-runtime v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { data as data$1, isRouteErrorResponse, stripBasename, UNSAFE_ErrorResponseImpl } from '@remix-run/router';\nimport { encode } from 'turbo-stream';\nimport { sanitizeErrors, sanitizeError } from './errors.js';\nimport { getDocumentHeaders } from './headers.js';\nimport { ServerMode } from './mode.js';\nimport { isResponse, isRedirectStatusCode } from './responses.js';\n\nconst SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\n// We can't use a 3xx status or else the `fetch()` would follow the redirect.\n// We need to communicate the redirect back as data so we can act on it in the\n// client side router.  We use a 202 to avoid any automatic caching we might\n// get from a 200 since a \"temporary\" redirect should not be cached.  This lets\n// the user control cache behavior via Cache-Control\nconst SINGLE_FETCH_REDIRECT_STATUS = 202;\nfunction getSingleFetchDataStrategy({\n  isActionDataRequest,\n  loadRouteIds\n} = {}) {\n  return async ({\n    request,\n    matches\n  }) => {\n    // Don't call loaders on action data requests\n    if (isActionDataRequest && request.method === \"GET\") {\n      return {};\n    }\n\n    // Only run opt-in loaders when fine-grained revalidation is enabled\n    let matchesToLoad = loadRouteIds ? matches.filter(m => loadRouteIds.includes(m.route.id)) : matches;\n    let results = await Promise.all(matchesToLoad.map(match => match.resolve()));\n    return results.reduce((acc, result, i) => Object.assign(acc, {\n      [matchesToLoad[i].route.id]: result\n    }), {});\n  };\n}\nasync function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n  try {\n    let handlerRequest = new Request(handlerUrl, {\n      method: request.method,\n      body: request.body,\n      headers: request.headers,\n      signal: request.signal,\n      ...(request.body ? {\n        duplex: \"half\"\n      } : undefined)\n    });\n    let result = await staticHandler.query(handlerRequest, {\n      requestContext: loadContext,\n      skipLoaderErrorBubbling: true,\n      dataStrategy: getSingleFetchDataStrategy({\n        isActionDataRequest: true\n      })\n    });\n\n    // Unlike `handleDataRequest`, when singleFetch is enabled, query does\n    // let non-Response return values through\n    if (isResponse(result)) {\n      return {\n        result: getSingleFetchRedirect(result.status, result.headers, build.basename),\n        headers: result.headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      };\n    }\n    let context = result;\n    let headers = getDocumentHeaders(build, context);\n    if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\n      return {\n        result: getSingleFetchRedirect(context.statusCode, headers, build.basename),\n        headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      };\n    }\n\n    // Sanitize errors outside of development environments\n    if (context.errors) {\n      Object.values(context.errors).forEach(err => {\n        // @ts-expect-error This is \"private\" from users but intended for internal use\n        if (!isRouteErrorResponse(err) || err.error) {\n          handleError(err);\n        }\n      });\n      context.errors = sanitizeErrors(context.errors, serverMode);\n    }\n    let singleFetchResult;\n    if (context.errors) {\n      singleFetchResult = {\n        error: Object.values(context.errors)[0]\n      };\n    } else {\n      singleFetchResult = {\n        data: Object.values(context.actionData || {})[0]\n      };\n    }\n    return {\n      result: singleFetchResult,\n      headers,\n      status: context.statusCode\n    };\n  } catch (error) {\n    handleError(error);\n    // These should only be internal remix errors, no need to deal with responseStubs\n    return {\n      result: {\n        error\n      },\n      headers: new Headers(),\n      status: 500\n    };\n  }\n}\nasync function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\n  try {\n    var _URL$searchParams$get;\n    let handlerRequest = new Request(handlerUrl, {\n      headers: request.headers,\n      signal: request.signal\n    });\n    let loadRouteIds = ((_URL$searchParams$get = new URL(request.url).searchParams.get(\"_routes\")) === null || _URL$searchParams$get === void 0 ? void 0 : _URL$searchParams$get.split(\",\")) || undefined;\n    let result = await staticHandler.query(handlerRequest, {\n      requestContext: loadContext,\n      skipLoaderErrorBubbling: true,\n      dataStrategy: getSingleFetchDataStrategy({\n        loadRouteIds\n      })\n    });\n    if (isResponse(result)) {\n      return {\n        result: {\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(result.status, result.headers, build.basename)\n        },\n        headers: result.headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      };\n    }\n    let context = result;\n    let headers = getDocumentHeaders(build, context);\n    if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\n      return {\n        result: {\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(context.statusCode, headers, build.basename)\n        },\n        headers,\n        status: SINGLE_FETCH_REDIRECT_STATUS\n      };\n    }\n\n    // Sanitize errors outside of development environments\n    if (context.errors) {\n      Object.values(context.errors).forEach(err => {\n        // @ts-expect-error This is \"private\" from users but intended for internal use\n        if (!isRouteErrorResponse(err) || err.error) {\n          handleError(err);\n        }\n      });\n      context.errors = sanitizeErrors(context.errors, serverMode);\n    }\n\n    // Aggregate results based on the matches we intended to load since we get\n    // `null` values back in `context.loaderData` for routes we didn't load\n    let results = {};\n    let loadedMatches = loadRouteIds ? context.matches.filter(m => m.route.loader && loadRouteIds.includes(m.route.id)) : context.matches;\n    loadedMatches.forEach(m => {\n      var _context$loaderData, _context$errors;\n      let data = (_context$loaderData = context.loaderData) === null || _context$loaderData === void 0 ? void 0 : _context$loaderData[m.route.id];\n      let error = (_context$errors = context.errors) === null || _context$errors === void 0 ? void 0 : _context$errors[m.route.id];\n      if (error !== undefined) {\n        results[m.route.id] = {\n          error\n        };\n      } else if (data !== undefined) {\n        results[m.route.id] = {\n          data\n        };\n      }\n    });\n    return {\n      result: results,\n      headers,\n      status: context.statusCode\n    };\n  } catch (error) {\n    handleError(error);\n    // These should only be internal remix errors, no need to deal with responseStubs\n    return {\n      result: {\n        root: {\n          error\n        }\n      },\n      headers: new Headers(),\n      status: 500\n    };\n  }\n}\nfunction getSingleFetchRedirect(status, headers, basename) {\n  let redirect = headers.get(\"Location\");\n  if (basename) {\n    redirect = stripBasename(redirect, basename) || redirect;\n  }\n  return {\n    redirect,\n    status,\n    revalidate:\n    // Technically X-Remix-Revalidate isn't needed here - that was an implementation\n    // detail of ?_data requests as our way to tell the front end to revalidate when\n    // we didn't have a response body to include that information in.\n    // With single fetch, we tell the front end via this revalidate boolean field.\n    // However, we're respecting it for now because it may be something folks have\n    // used in their own responses\n    // TODO(v3): Consider removing or making this official public API\n    headers.has(\"X-Remix-Revalidate\") || headers.has(\"Set-Cookie\"),\n    reload: headers.has(\"X-Remix-Reload-Document\"),\n    replace: headers.has(\"X-Remix-Replace\")\n  };\n}\n\n// Note: If you change this function please change the corresponding\n// decodeViaTurboStream function in server-runtime\nfunction encodeViaTurboStream(data, requestSignal, streamTimeout, serverMode) {\n  let controller = new AbortController();\n  // How long are we willing to wait for all of the promises in `data` to resolve\n  // before timing out?  We default this to 50ms shorter than the default value for\n  // `ABORT_DELAY` in our built-in `entry.server.tsx` so that once we reject we\n  // have time to flush the rejections down through React's rendering stream before `\n  // we call abort() on that.  If the user provides their own it's up to them to\n  // decouple the aborting of the stream from the aborting of React's renderToPipeableStream\n  let timeoutId = setTimeout(() => controller.abort(new Error(\"Server Timeout\")), typeof streamTimeout === \"number\" ? streamTimeout : 4950);\n  requestSignal.addEventListener(\"abort\", () => clearTimeout(timeoutId));\n  return encode(data, {\n    signal: controller.signal,\n    plugins: [value => {\n      // Even though we sanitized errors on context.errors prior to responding,\n      // we still need to handle this for any deferred data that rejects with an\n      // Error - as those will not be sanitized yet\n      if (value instanceof Error) {\n        let {\n          name,\n          message,\n          stack\n        } = serverMode === ServerMode.Production ? sanitizeError(value, serverMode) : value;\n        return [\"SanitizedError\", name, message, stack];\n      }\n      if (value instanceof UNSAFE_ErrorResponseImpl) {\n        let {\n          data,\n          status,\n          statusText\n        } = value;\n        return [\"ErrorResponse\", data, status, statusText];\n      }\n      if (value && typeof value === \"object\" && SingleFetchRedirectSymbol in value) {\n        return [\"SingleFetchRedirect\", value[SingleFetchRedirectSymbol]];\n      }\n    }],\n    postPlugins: [value => {\n      if (!value) return;\n      if (typeof value !== \"object\") return;\n      return [\"SingleFetchClassInstance\", Object.fromEntries(Object.entries(value))];\n    }, () => [\"SingleFetchFallback\"]]\n  });\n}\nfunction data(value, init) {\n  return data$1(value, init);\n}\n\n// prettier-ignore\n// eslint-disable-next-line\n\nexport { SINGLE_FETCH_REDIRECT_STATUS, SingleFetchRedirectSymbol, data, encodeViaTurboStream, getSingleFetchDataStrategy, getSingleFetchRedirect, singleFetchAction, singleFetchLoaders };\n","/**\n * @remix-run/react v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nexport { _extends as extends };\n","/**\n * @remix-run/react v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport { invariant as default };\n","/**\n * @remix-run/react v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n/**\n * A function that handles data mutations for a route on the client\n */\n\n/**\n * Arguments passed to a route `clientAction` function\n */\n\n/**\n * A function that loads data for a route on the client\n */\n\n/**\n * Arguments passed to a route `clientLoader` function\n */\n\n/**\n * ErrorBoundary to display for this route\n */\n\n/**\n * `<Route HydrateFallback>` component to render on initial loads\n * when client loaders are present\n */\n\n/**\n * Optional, root-only `<Route Layout>` component to wrap the root content in.\n * Useful for defining the <html>/<head>/<body> document shell shared by the\n * Component, HydrateFallback, and ErrorBoundary\n */\n\n/**\n * A function that defines `<link>` tags to be inserted into the `<head>` of\n * the document on route transitions.\n *\n * @see https://remix.run/route/meta\n */\n\n/**\n * A React component that is rendered for a route.\n */\n\n/**\n * An arbitrary object that is associated with a route.\n *\n * @see https://remix.run/route/handle\n */\n\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n  try {\n    let routeModule = await import( /* webpackIgnore: true */route.module);\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    // If we can't load the route it's likely one of 2 things:\n    // - User got caught in the middle of a deploy and the CDN no longer has the\n    //   asset we're trying to import! Reload from the server and the user\n    //   (should) get the new manifest--unless the developer purged the static\n    //   assets, the manifest path, but not the documents 😬\n    // - Or, the asset trying to be imported has an error (usually in vite dev\n    //   mode), so the best we can do here is log the error for visibility\n    //   (via `Preserve log`) and reload\n\n    // Log the error so it can be accessed via the `Preserve Log` setting\n    console.error(`Error loading route module \\`${route.module}\\`, reloading page...`);\n    console.error(error);\n    if (window.__remixContext.isSpaMode &&\n    // @ts-expect-error\n    typeof import.meta.hot !== \"undefined\") {\n      // In SPA Mode (which implies vite) we don't want to perform a hard reload\n      // on dev-time errors since it's a vite compilation error and a reload is\n      // just going to fail with the same issue.  Let the UI bubble to the error\n      // boundary and let them see the error in the overlay or the dev server log\n      throw error;\n    }\n    window.location.reload();\n    return new Promise(() => {\n      // check out of this hook cause the DJs never gonna re[s]olve this\n    });\n  }\n}\n\nexport { loadRouteModule };\n","/**\n * @remix-run/react v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { parsePath } from 'react-router-dom';\nimport { loadRouteModule } from './routeModules.js';\n\n/**\n * Represents a `<link>` element.\n *\n * WHATWG Specification: https://html.spec.whatwg.org/multipage/semantics.html#the-link-element\n */\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Gets all the links for a set of matches. The modules are assumed to have been\n * loaded already.\n */\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map(match => {\n    var _module$links;\n    let module = routeModules[match.route.id];\n    let route = manifest.routes[match.route.id];\n    return [route.css ? route.css.map(href => ({\n      rel: \"stylesheet\",\n      href\n    })) : [], (module === null || module === void 0 ? void 0 : (_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || []];\n  }).flat(2);\n  let preloads = getCurrentPageModulePreloadHrefs(matches, manifest);\n  return dedupeLinkDescriptors(descriptors, preloads);\n}\nasync function prefetchStyleLinks(route, routeModule) {\n  var _route$css, _routeModule$links;\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\n  let descriptors = [((_route$css = route.css) === null || _route$css === void 0 ? void 0 : _route$css.map(href => ({\n    rel: \"stylesheet\",\n    href\n  }))) ?? [], ((_routeModule$links = routeModule.links) === null || _routeModule$links === void 0 ? void 0 : _routeModule$links.call(routeModule)) ?? []].flat(1);\n  if (descriptors.length === 0) return;\n  let styleLinks = [];\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({\n        ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  }\n\n  // don't block for non-matching media queries, or for stylesheets that are\n  // already in the DOM (active route revalidations)\n  let matchingLinks = styleLinks.filter(link => (!link.media || window.matchMedia(link.media).matches) && !document.querySelector(`link[rel=\"stylesheet\"][href=\"${link.href}\"]`));\n  await Promise.all(matchingLinks.map(prefetchStyleLink));\n}\nasync function prefetchStyleLink(descriptor) {\n  return new Promise(resolve => {\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n    function removeLink() {\n      // if a navigation interrupts this prefetch React will update the <head>\n      // and remove the link we put in there manually, so we check if it's still\n      // there before trying to remove it\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n    document.head.appendChild(link);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  if (object == null) {\n    return false;\n  }\n\n  // <link> may not have an href if <link rel=\"preload\"> is used with imageSrcSet + imageSizes\n  // https://github.com/remix-run/remix/issues/184\n  // https://html.spec.whatwg.org/commit-snapshots/cb4f5ff75de5f4cbd7013c4abad02f21c77d4d1c/#attr-link-imagesrcset\n  if (object.href == null) {\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\n  }\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\n  let links = await Promise.all(matches.map(async match => {\n    let mod = await loadRouteModule(manifest.routes[match.route.id], routeModules);\n    return mod.links ? mod.links() : [];\n  }));\n  return dedupeLinkDescriptors(links.flat(1).filter(isHtmlLinkDescriptor).filter(link => link.rel === \"stylesheet\" || link.rel === \"preload\").map(link => link.rel === \"stylesheet\" ? {\n    ...link,\n    rel: \"prefetch\",\n    as: \"style\"\n  } : {\n    ...link,\n    rel: \"prefetch\"\n  }));\n}\n\n// This is ridiculously identical to transition.ts `filterMatchesToLoad`\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, future, mode) {\n  let path = parsePathPatch(page);\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n  let matchPathChanged = (match, index) => {\n    var _currentMatches$index;\n    return (\n      // param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname ||\n      // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      ((_currentMatches$index = currentMatches[index].route.path) === null || _currentMatches$index === void 0 ? void 0 : _currentMatches$index.endsWith(\"*\")) && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n\n  // NOTE: keep this mostly up-to-date w/ the transition data diff, but this\n  // version doesn't care about submissions\n  let newMatches = mode === \"data\" && (future.v3_singleFetch || location.search !== path.search) ?\n  // this is really similar to stuff in transition.ts, maybe somebody smarter\n  // than me (or in less of a hurry) can share some of it. You're the best.\n  nextMatches.filter((match, index) => {\n    let manifestRoute = manifest.routes[match.route.id];\n    if (!manifestRoute.hasLoader) {\n      return false;\n    }\n    if (isNew(match, index) || matchPathChanged(match, index)) {\n      return true;\n    }\n\n    // For reused routes on GET navigations, by default:\n    // - Single fetch always revalidates\n    // - Multi fetch revalidates if search params changed\n    let defaultShouldRevalidate = future.v3_singleFetch || location.search !== path.search;\n    if (match.route.shouldRevalidate) {\n      var _currentMatches$;\n      let routeChoice = match.route.shouldRevalidate({\n        currentUrl: new URL(location.pathname + location.search + location.hash, window.origin),\n        currentParams: ((_currentMatches$ = currentMatches[0]) === null || _currentMatches$ === void 0 ? void 0 : _currentMatches$.params) || {},\n        nextUrl: new URL(page, window.origin),\n        nextParams: match.params,\n        defaultShouldRevalidate\n      });\n      if (typeof routeChoice === \"boolean\") {\n        return routeChoice;\n      }\n    }\n    return defaultShouldRevalidate;\n  }) : nextMatches.filter((match, index) => {\n    let manifestRoute = manifest.routes[match.route.id];\n    return (mode === \"assets\" || manifestRoute.hasLoader) && (isNew(match, index) || matchPathChanged(match, index));\n  });\n  return newMatches;\n}\nfunction getDataLinkHrefs(page, matches, manifest) {\n  let path = parsePathPatch(page);\n  return dedupeHrefs(matches.filter(match => manifest.routes[match.route.id].hasLoader && !manifest.routes[match.route.id].hasClientLoader).map(match => {\n    let {\n      pathname,\n      search\n    } = path;\n    let searchParams = new URLSearchParams(search);\n    searchParams.set(\"_data\", match.route.id);\n    return `${pathname}?${searchParams}`;\n  }));\n}\nfunction getModuleLinkHrefs(matches, manifestPatch) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifestPatch.routes[match.route.id];\n    let hrefs = [route.module];\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n    return hrefs;\n  }).flat(1));\n}\n\n// The `<Script>` will render rel=modulepreload for the current page, we don't\n// need to include them in a page prefetch, this gives us the list to remove\n// while deduping.\nfunction getCurrentPageModulePreloadHrefs(matches, manifest) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifest.routes[match.route.id];\n    let hrefs = [route.module];\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n    return hrefs;\n  }).flat(1));\n}\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\nfunction sortKeys(obj) {\n  let sorted = {};\n  let keys = Object.keys(obj).sort();\n  for (let key of keys) {\n    sorted[key] = obj[key];\n  }\n  return sorted;\n}\nfunction dedupeLinkDescriptors(descriptors, preloads) {\n  let set = new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n    let key = JSON.stringify(sortKeys(descriptor));\n    if (!set.has(key)) {\n      set.add(key);\n      deduped.push({\n        key,\n        link: descriptor\n      });\n    }\n    return deduped;\n  }, []);\n}\n\n// https://github.com/remix-run/history/issues/897\nfunction parsePathPatch(href) {\n  let path = parsePath(href);\n  if (path.search === undefined) path.search = \"\";\n  return path;\n}\n\n// Detect if this browser supports <link rel=\"preload\"> (or has it enabled).\n// Originally added to handle the firefox `network.preload` config:\n//   https://bugzilla.mozilla.org/show_bug.cgi?id=1847811\nlet _isPreloadSupported;\nfunction isPreloadSupported() {\n  if (_isPreloadSupported !== undefined) {\n    return _isPreloadSupported;\n  }\n  let el = document.createElement(\"link\");\n  _isPreloadSupported = el.relList.supports(\"preload\");\n  el = null;\n  return _isPreloadSupported;\n}\n\nexport { getDataLinkHrefs, getKeyedLinksForMatches, getKeyedPrefetchLinks, getModuleLinkHrefs, getNewMatchesForLinks, isPageLinkDescriptor, prefetchStyleLinks };\n","/**\n * @remix-run/react v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n// This escapeHtml utility is based on https://github.com/zertosh/htmlescape\n// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE\n\n// We've chosen to inline the utility here to reduce the number of npm dependencies we have,\n// slightly decrease the code size compared the original package and make it esm compatible.\n\nconst ESCAPE_LOOKUP = {\n  \"&\": \"\\\\u0026\",\n  \">\": \"\\\\u003e\",\n  \"<\": \"\\\\u003c\",\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\"\n};\nconst ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\nfunction escapeHtml(html) {\n  return html.replace(ESCAPE_REGEX, match => ESCAPE_LOOKUP[match]);\n}\nfunction createHtml(html) {\n  return {\n    __html: html\n  };\n}\n\nexport { createHtml, escapeHtml };\n","/**\n * @remix-run/react v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { AbortedDeferredError, UNSAFE_DeferredData } from '@remix-run/router';\n\n/**\n * Data for a route that was returned from a `loader()`.\n */\n\nfunction isCatchResponse(response) {\n  return response.headers.get(\"X-Remix-Catch\") != null;\n}\nfunction isErrorResponse(response) {\n  return response.headers.get(\"X-Remix-Error\") != null;\n}\nfunction isNetworkErrorResponse(response) {\n  // If we reach the Remix server, we can safely identify response types via the\n  // X-Remix-Error/X-Remix-Catch headers.  However, if we never reach the Remix\n  // server, and instead receive a 4xx/5xx from somewhere in between (like\n  // Cloudflare), then we get a false negative in the isErrorResponse check and\n  // we incorrectly assume that the user returns the 4xx/5xx response and\n  // consider it successful.  To alleviate this, we add X-Remix-Response to any\n  // non-Error/non-Catch responses coming back from the server.  If we don't\n  // see this, we can conclude that a 4xx/5xx response never actually reached\n  // the Remix server and we can bubble it up as an error.\n  return isResponse(response) && response.status >= 400 && response.headers.get(\"X-Remix-Error\") == null && response.headers.get(\"X-Remix-Catch\") == null && response.headers.get(\"X-Remix-Response\") == null;\n}\nfunction isRedirectResponse(response) {\n  return response.headers.get(\"X-Remix-Redirect\") != null;\n}\nfunction isDeferredResponse(response) {\n  var _response$headers$get;\n  return !!((_response$headers$get = response.headers.get(\"Content-Type\")) !== null && _response$headers$get !== void 0 && _response$headers$get.match(/text\\/remix-deferred/));\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nasync function fetchData(request, routeId, retry = 0) {\n  let url = new URL(request.url);\n  url.searchParams.set(\"_data\", routeId);\n  if (retry > 0) {\n    // Retry up to 3 times waiting 50, 250, 1250 ms\n    // between retries for a total of 1550 ms before giving up.\n    await new Promise(resolve => setTimeout(resolve, 5 ** retry * 10));\n  }\n  let init = await createRequestInit(request);\n  let revalidation = window.__remixRevalidation;\n  let response = await fetch(url.href, init).catch(error => {\n    if (typeof revalidation === \"number\" && revalidation === window.__remixRevalidation && (error === null || error === void 0 ? void 0 : error.name) === \"TypeError\" && retry < 3) {\n      return fetchData(request, routeId, retry + 1);\n    }\n    throw error;\n  });\n  if (isErrorResponse(response)) {\n    let data = await response.json();\n    let error = new Error(data.message);\n    error.stack = data.stack;\n    return error;\n  }\n  if (isNetworkErrorResponse(response)) {\n    let text = await response.text();\n    let error = new Error(text);\n    error.stack = undefined;\n    return error;\n  }\n  return response;\n}\nasync function createRequestInit(request) {\n  let init = {\n    signal: request.signal\n  };\n  if (request.method !== \"GET\") {\n    init.method = request.method;\n    let contentType = request.headers.get(\"Content-Type\");\n\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = JSON.stringify(await request.json());\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\n      init.headers = {\n        \"Content-Type\": contentType\n      };\n      init.body = await request.text();\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\n      init.body = new URLSearchParams(await request.text());\n    } else {\n      init.body = await request.formData();\n    }\n  }\n  return init;\n}\nconst DEFERRED_VALUE_PLACEHOLDER_PREFIX = \"__deferred_promise:\";\nasync function parseDeferredReadableStream(stream) {\n  if (!stream) {\n    throw new Error(\"parseDeferredReadableStream requires stream argument\");\n  }\n  let deferredData;\n  let deferredResolvers = {};\n  try {\n    let sectionReader = readStreamSections(stream);\n\n    // Read the first section to get the critical data\n    let initialSectionResult = await sectionReader.next();\n    let initialSection = initialSectionResult.value;\n    if (!initialSection) throw new Error(\"no critical data\");\n    let criticalData = JSON.parse(initialSection);\n\n    // Setup deferred data and resolvers for later based on the critical data\n    if (typeof criticalData === \"object\" && criticalData !== null) {\n      for (let [eventKey, value] of Object.entries(criticalData)) {\n        if (typeof value !== \"string\" || !value.startsWith(DEFERRED_VALUE_PLACEHOLDER_PREFIX)) {\n          continue;\n        }\n        deferredData = deferredData || {};\n        deferredData[eventKey] = new Promise((resolve, reject) => {\n          deferredResolvers[eventKey] = {\n            resolve: value => {\n              resolve(value);\n              delete deferredResolvers[eventKey];\n            },\n            reject: error => {\n              reject(error);\n              delete deferredResolvers[eventKey];\n            }\n          };\n        });\n      }\n    }\n\n    // Read the rest of the stream and resolve deferred promises\n    void (async () => {\n      try {\n        for await (let section of sectionReader) {\n          // Determine event type and data\n          let [event, ...sectionDataStrings] = section.split(\":\");\n          let sectionDataString = sectionDataStrings.join(\":\");\n          let data = JSON.parse(sectionDataString);\n          if (event === \"data\") {\n            for (let [key, value] of Object.entries(data)) {\n              if (deferredResolvers[key]) {\n                deferredResolvers[key].resolve(value);\n              }\n            }\n          } else if (event === \"error\") {\n            for (let [key, value] of Object.entries(data)) {\n              let err = new Error(value.message);\n              err.stack = value.stack;\n              if (deferredResolvers[key]) {\n                deferredResolvers[key].reject(err);\n              }\n            }\n          }\n        }\n        for (let [key, resolver] of Object.entries(deferredResolvers)) {\n          resolver.reject(new AbortedDeferredError(`Deferred ${key} will never be resolved`));\n        }\n      } catch (error) {\n        // Reject any existing deferred promises if something blows up\n        for (let resolver of Object.values(deferredResolvers)) {\n          resolver.reject(error);\n        }\n      }\n    })();\n    return new UNSAFE_DeferredData({\n      ...criticalData,\n      ...deferredData\n    });\n  } catch (error) {\n    for (let resolver of Object.values(deferredResolvers)) {\n      resolver.reject(error);\n    }\n    throw error;\n  }\n}\nasync function* readStreamSections(stream) {\n  let reader = stream.getReader();\n  let buffer = [];\n  let sections = [];\n  let closed = false;\n  let encoder = new TextEncoder();\n  let decoder = new TextDecoder();\n  let readStreamSection = async () => {\n    if (sections.length > 0) return sections.shift();\n\n    // Read from the stream until we have at least one complete section to process\n    while (!closed && sections.length === 0) {\n      let chunk = await reader.read();\n      if (chunk.done) {\n        closed = true;\n        break;\n      }\n      // Buffer the raw chunks\n      buffer.push(chunk.value);\n      try {\n        // Attempt to split off a section from the buffer\n        let bufferedString = decoder.decode(mergeArrays(...buffer));\n        let splitSections = bufferedString.split(\"\\n\\n\");\n        if (splitSections.length >= 2) {\n          // We have a complete section, so add it to the sections array\n          sections.push(...splitSections.slice(0, -1));\n          // Remove the section from the buffer and store the rest for future processing\n          buffer = [encoder.encode(splitSections.slice(-1).join(\"\\n\\n\"))];\n        }\n\n        // If we successfully parsed at least one section, break out of reading the stream\n        // to allow upstream processing of the processable sections\n        if (sections.length > 0) {\n          break;\n        }\n      } catch {\n        // If we failed to parse the buffer it was because we failed to decode the stream\n        // because we are missing bytes that we haven't yet received, so continue reading\n        // from the stream until we have a complete section\n        continue;\n      }\n    }\n\n    // If we have a complete section, return it\n    if (sections.length > 0) {\n      return sections.shift();\n    }\n\n    // If we have no complete section, but we have no more chunks to process,\n    // split those sections and clear out the buffer as there is no more data\n    // to process. If this errors, let it bubble up as the stream ended\n    // without valid data\n    if (buffer.length > 0) {\n      let bufferedString = decoder.decode(mergeArrays(...buffer));\n      sections = bufferedString.split(\"\\n\\n\").filter(s => s);\n      buffer = [];\n    }\n\n    // Return any remaining sections that have been processed\n    return sections.shift();\n  };\n  let section = await readStreamSection();\n  while (section) {\n    yield section;\n    section = await readStreamSection();\n  }\n}\nfunction mergeArrays(...arrays) {\n  let out = new Uint8Array(arrays.reduce((total, arr) => total + arr.length, 0));\n  let offset = 0;\n  for (let arr of arrays) {\n    out.set(arr, offset);\n    offset += arr.length;\n  }\n  return out;\n}\n\nexport { createRequestInit, fetchData, isCatchResponse, isDeferredData, isDeferredResponse, isErrorResponse, isNetworkErrorResponse, isRedirectResponse, isResponse, parseDeferredReadableStream };\n","/**\n * @remix-run/react v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { isRouteErrorResponse, data, UNSAFE_ErrorResponseImpl, redirect } from '@remix-run/router';\nimport { UNSAFE_SingleFetchRedirectSymbol } from '@remix-run/server-runtime';\nimport { decode } from 'turbo-stream';\nimport { createRequestInit, isResponse } from './data.js';\nimport { escapeHtml } from './markup.js';\nimport invariant from './invariant.js';\n\n// StreamTransfer recursively renders down chunks of the `serverHandoffStream`\n// into the client-side `streamController`\nfunction StreamTransfer({\n  context,\n  identifier,\n  reader,\n  textDecoder,\n  nonce\n}) {\n  // If the user didn't render the <Scripts> component then we don't have to\n  // bother streaming anything in\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\n    return null;\n  }\n  if (!context.renderMeta.streamCache) {\n    context.renderMeta.streamCache = {};\n  }\n  let {\n    streamCache\n  } = context.renderMeta;\n  let promise = streamCache[identifier];\n  if (!promise) {\n    promise = streamCache[identifier] = reader.read().then(result => {\n      streamCache[identifier].result = {\n        done: result.done,\n        value: textDecoder.decode(result.value, {\n          stream: true\n        })\n      };\n    }).catch(e => {\n      streamCache[identifier].error = e;\n    });\n  }\n  if (promise.error) {\n    throw promise.error;\n  }\n  if (promise.result === undefined) {\n    throw promise;\n  }\n  let {\n    done,\n    value\n  } = promise.result;\n  let scriptTag = value ? /*#__PURE__*/React.createElement(\"script\", {\n    nonce: nonce,\n    dangerouslySetInnerHTML: {\n      __html: `window.__remixContext.streamController.enqueue(${escapeHtml(JSON.stringify(value))});`\n    }\n  }) : null;\n  if (done) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, scriptTag, /*#__PURE__*/React.createElement(\"script\", {\n      nonce: nonce,\n      dangerouslySetInnerHTML: {\n        __html: `window.__remixContext.streamController.close();`\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, scriptTag, /*#__PURE__*/React.createElement(React.Suspense, null, /*#__PURE__*/React.createElement(StreamTransfer, {\n      context: context,\n      identifier: identifier + 1,\n      reader: reader,\n      textDecoder: textDecoder,\n      nonce: nonce\n    })));\n  }\n}\nfunction getSingleFetchDataStrategy(manifest, routeModules, getRouter) {\n  return async ({\n    request,\n    matches,\n    fetcherKey\n  }) => {\n    // Actions are simple and behave the same for navigations and fetchers\n    if (request.method !== \"GET\") {\n      return singleFetchActionStrategy(request, matches);\n    }\n\n    // Fetcher loads are singular calls to one loader\n    if (fetcherKey) {\n      return singleFetchLoaderFetcherStrategy(request, matches);\n    }\n\n    // Navigational loads are more complex...\n    return singleFetchLoaderNavigationStrategy(manifest, routeModules, getRouter(), request, matches);\n  };\n}\n\n// Actions are simple since they're singular calls to the server for both\n// navigations and fetchers)\nasync function singleFetchActionStrategy(request, matches) {\n  let actionMatch = matches.find(m => m.shouldLoad);\n  invariant(actionMatch, \"No action match found\");\n  let actionStatus = undefined;\n  let result = await actionMatch.resolve(async handler => {\n    let result = await handler(async () => {\n      let url = singleFetchUrl(request.url);\n      let init = await createRequestInit(request);\n      let {\n        data,\n        status\n      } = await fetchAndDecode(url, init);\n      actionStatus = status;\n      return unwrapSingleFetchResult(data, actionMatch.route.id);\n    });\n    return result;\n  });\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\n    return {\n      [actionMatch.route.id]: result\n    };\n  }\n\n  // For non-responses, proxy along the statusCode via data()\n  // (most notably for skipping action error revalidation)\n  return {\n    [actionMatch.route.id]: {\n      type: result.type,\n      result: data(result.result, actionStatus)\n    }\n  };\n}\n\n// Loaders are trickier since we only want to hit the server once, so we\n// create a singular promise for all server-loader routes to latch onto.\nasync function singleFetchLoaderNavigationStrategy(manifest, routeModules, router, request, matches) {\n  // Track which routes need a server load - in case we need to tack on a\n  // `_routes` param\n  let routesParams = new Set();\n\n  // We only add `_routes` when one or more routes opts out of a load via\n  // `shouldRevalidate` or `clientLoader`\n  let foundOptOutRoute = false;\n\n  // Deferreds for each route so we can be sure they've all loaded via\n  // `match.resolve()`, and a singular promise that can tell us all routes\n  // have been resolved\n  let routeDfds = matches.map(() => createDeferred());\n  let routesLoadedPromise = Promise.all(routeDfds.map(d => d.promise));\n\n  // Deferred that we'll use for the call to the server that each match can\n  // await and parse out it's specific result\n  let singleFetchDfd = createDeferred();\n\n  // Base URL and RequestInit for calls to the server\n  let url = stripIndexParam(singleFetchUrl(request.url));\n  let init = await createRequestInit(request);\n\n  // We'll build up this results object as we loop through matches\n  let results = {};\n  let resolvePromise = Promise.all(matches.map(async (m, i) => m.resolve(async handler => {\n    routeDfds[i].resolve();\n    if (!m.shouldLoad) {\n      var _routeModules$m$route;\n      // If we're not yet initialized and this is the initial load, respect\n      // `shouldLoad` because we're only dealing with `clientLoader.hydrate`\n      // routes which will fall into the `clientLoader` section below.\n      if (!router.state.initialized) {\n        return;\n      }\n\n      // Otherwise, we opt out if we currently have data, a `loader`, and a\n      // `shouldRevalidate` function.  This implies that the user opted out\n      // via `shouldRevalidate`\n      if (m.route.id in router.state.loaderData && manifest.routes[m.route.id].hasLoader && (_routeModules$m$route = routeModules[m.route.id]) !== null && _routeModules$m$route !== void 0 && _routeModules$m$route.shouldRevalidate) {\n        foundOptOutRoute = true;\n        return;\n      }\n    }\n\n    // When a route has a client loader, it opts out of the singular call and\n    // calls it's server loader via `serverLoader()` using a `?_routes` param\n    if (manifest.routes[m.route.id].hasClientLoader) {\n      if (manifest.routes[m.route.id].hasLoader) {\n        foundOptOutRoute = true;\n      }\n      try {\n        let result = await fetchSingleLoader(handler, url, init, m.route.id);\n        results[m.route.id] = {\n          type: \"data\",\n          result\n        };\n      } catch (e) {\n        results[m.route.id] = {\n          type: \"error\",\n          result: e\n        };\n      }\n      return;\n    }\n\n    // Load this route on the server if it has a loader\n    if (manifest.routes[m.route.id].hasLoader) {\n      routesParams.add(m.route.id);\n    }\n\n    // Lump this match in with the others on a singular promise\n    try {\n      let result = await handler(async () => {\n        let data = await singleFetchDfd.promise;\n        return unwrapSingleFetchResults(data, m.route.id);\n      });\n      results[m.route.id] = {\n        type: \"data\",\n        result\n      };\n    } catch (e) {\n      results[m.route.id] = {\n        type: \"error\",\n        result: e\n      };\n    }\n  })));\n\n  // Wait for all routes to resolve above before we make the HTTP call\n  await routesLoadedPromise;\n\n  // We can skip the server call:\n  // - On initial hydration - only clientLoaders can pass through via `clientLoader.hydrate`\n  // - If there are no routes to fetch from the server\n  //\n  // One exception - if we are performing an HDR revalidation we have to call\n  // the server in case a new loader has shown up that the manifest doesn't yet\n  // know about\n  if ((!router.state.initialized || routesParams.size === 0) && !window.__remixHdrActive) {\n    singleFetchDfd.resolve({});\n  } else {\n    try {\n      // When one or more routes have opted out, we add a _routes param to\n      // limit the loaders to those that have a server loader and did not\n      // opt out\n      if (foundOptOutRoute && routesParams.size > 0) {\n        url.searchParams.set(\"_routes\", matches.filter(m => routesParams.has(m.route.id)).map(m => m.route.id).join(\",\"));\n      }\n      let data = await fetchAndDecode(url, init);\n      singleFetchDfd.resolve(data.data);\n    } catch (e) {\n      singleFetchDfd.reject(e);\n    }\n  }\n  await resolvePromise;\n  return results;\n}\n\n// Fetcher loader calls are much simpler than navigational loader calls\nasync function singleFetchLoaderFetcherStrategy(request, matches) {\n  let fetcherMatch = matches.find(m => m.shouldLoad);\n  invariant(fetcherMatch, \"No fetcher match found\");\n  let result = await fetcherMatch.resolve(async handler => {\n    let url = stripIndexParam(singleFetchUrl(request.url));\n    let init = await createRequestInit(request);\n    return fetchSingleLoader(handler, url, init, fetcherMatch.route.id);\n  });\n  return {\n    [fetcherMatch.route.id]: result\n  };\n}\nfunction fetchSingleLoader(handler, url, init, routeId) {\n  return handler(async () => {\n    let singleLoaderUrl = new URL(url);\n    singleLoaderUrl.searchParams.set(\"_routes\", routeId);\n    let {\n      data\n    } = await fetchAndDecode(singleLoaderUrl, init);\n    return unwrapSingleFetchResults(data, routeId);\n  });\n}\nfunction stripIndexParam(url) {\n  let indexValues = url.searchParams.getAll(\"index\");\n  url.searchParams.delete(\"index\");\n  let indexValuesToKeep = [];\n  for (let indexValue of indexValues) {\n    if (indexValue) {\n      indexValuesToKeep.push(indexValue);\n    }\n  }\n  for (let toKeep of indexValuesToKeep) {\n    url.searchParams.append(\"index\", toKeep);\n  }\n  return url;\n}\nfunction singleFetchUrl(reqUrl) {\n  let url = typeof reqUrl === \"string\" ? new URL(reqUrl, window.location.origin) : reqUrl;\n  if (url.pathname === \"/\") {\n    url.pathname = \"_root.data\";\n  } else {\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\n  }\n  return url;\n}\nasync function fetchAndDecode(url, init) {\n  let res = await fetch(url, init);\n  // Don't do a hard check against the header here.  We'll get `text/x-script`\n  // when we have a running server, but if folks want to prerender `.data` files\n  // and serve them from a CDN we should let them come back with whatever\n  // Content-Type their CDN provides and not force them to make sure `.data`\n  // files are served as `text/x-script`.  We'll throw if we can't decode anyway.\n  invariant(res.body, \"No response body to decode\");\n  try {\n    let decoded = await decodeViaTurboStream(res.body, window);\n    return {\n      status: res.status,\n      data: decoded.value\n    };\n  } catch (e) {\n    console.error(e);\n    throw new Error(`Unable to decode turbo-stream response from URL: ${url.toString()}`);\n  }\n}\n\n// Note: If you change this function please change the corresponding\n// encodeViaTurboStream function in server-runtime\nfunction decodeViaTurboStream(body, global) {\n  return decode(body, {\n    plugins: [(type, ...rest) => {\n      // Decode Errors back into Error instances using the right type and with\n      // the right (potentially undefined) stacktrace\n      if (type === \"SanitizedError\") {\n        let [name, message, stack] = rest;\n        let Constructor = Error;\n        // @ts-expect-error\n        if (name && name in global && typeof global[name] === \"function\") {\n          // @ts-expect-error\n          Constructor = global[name];\n        }\n        let error = new Constructor(message);\n        error.stack = stack;\n        return {\n          value: error\n        };\n      }\n      if (type === \"ErrorResponse\") {\n        let [data, status, statusText] = rest;\n        return {\n          value: new UNSAFE_ErrorResponseImpl(status, statusText, data)\n        };\n      }\n      if (type === \"SingleFetchRedirect\") {\n        return {\n          value: {\n            [UNSAFE_SingleFetchRedirectSymbol]: rest[0]\n          }\n        };\n      }\n    }, (type, value) => {\n      if (type === \"SingleFetchFallback\") {\n        return {\n          value: undefined\n        };\n      }\n      if (type === \"SingleFetchClassInstance\") {\n        return {\n          value\n        };\n      }\n    }]\n  });\n}\nfunction unwrapSingleFetchResults(results, routeId) {\n  let redirect = results[UNSAFE_SingleFetchRedirectSymbol];\n  if (redirect) {\n    return unwrapSingleFetchResult(redirect, routeId);\n  }\n  return results[routeId] !== undefined ? unwrapSingleFetchResult(results[routeId], routeId) : null;\n}\nfunction unwrapSingleFetchResult(result, routeId) {\n  if (\"error\" in result) {\n    throw result.error;\n  } else if (\"redirect\" in result) {\n    let headers = {};\n    if (result.revalidate) {\n      headers[\"X-Remix-Revalidate\"] = \"yes\";\n    }\n    if (result.reload) {\n      headers[\"X-Remix-Reload-Document\"] = \"yes\";\n    }\n    if (result.replace) {\n      headers[\"X-Remix-Replace\"] = \"yes\";\n    }\n    throw redirect(result.redirect, {\n      status: result.status,\n      headers\n    });\n  } else if (\"data\" in result) {\n    return result.data;\n  } else {\n    throw new Error(`No response found for routeId \"${routeId}\"`);\n  }\n}\nfunction createDeferred() {\n  let resolve;\n  let reject;\n  let promise = new Promise((res, rej) => {\n    resolve = async val => {\n      res(val);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n    reject = async error => {\n      rej(error);\n      try {\n        await promise;\n      } catch (e) {}\n    };\n  });\n  return {\n    promise,\n    //@ts-ignore\n    resolve,\n    //@ts-ignore\n    reject\n  };\n}\n\nexport { StreamTransfer, decodeViaTurboStream, getSingleFetchDataStrategy, singleFetchUrl };\n","/**\n * @remix-run/react v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { isRouteErrorResponse } from 'react-router-dom';\nimport { useRemixContext, Scripts } from './components.js';\n\nclass RemixErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: props.error || null,\n      location: props.location\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application (even the HTML!) that will have no effect--the error page\n    // continues to display. This gives us a mechanism to recover from the error\n    // when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error || null,\n        location: props.location\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/React.createElement(RemixRootDefaultErrorBoundary, {\n        error: this.state.error,\n        isOutsideRemixApp: true\n      });\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\n/**\n * When app's don't provide a root level ErrorBoundary, we default to this.\n */\nfunction RemixRootDefaultErrorBoundary({\n  error,\n  isOutsideRemixApp\n}) {\n  console.error(error);\n  let heyDeveloper = /*#__PURE__*/React.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n        console.log(\n          \"💿 Hey developer 👋. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\n        );\n      `\n    }\n  });\n  if (isRouteErrorResponse(error)) {\n    return /*#__PURE__*/React.createElement(BoundaryShell, {\n      title: \"Unhandled Thrown Response!\"\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        fontSize: \"24px\"\n      }\n    }, error.status, \" \", error.statusText), heyDeveloper);\n  }\n  let errorInstance;\n  if (error instanceof Error) {\n    errorInstance = error;\n  } else {\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\n    errorInstance = new Error(errorString);\n  }\n  return /*#__PURE__*/React.createElement(BoundaryShell, {\n    title: \"Application Error!\",\n    isOutsideRemixApp: isOutsideRemixApp\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      fontSize: \"24px\"\n    }\n  }, \"Application Error\"), /*#__PURE__*/React.createElement(\"pre\", {\n    style: {\n      padding: \"2rem\",\n      background: \"hsla(10, 50%, 50%, 0.1)\",\n      color: \"red\",\n      overflow: \"auto\"\n    }\n  }, errorInstance.stack), heyDeveloper);\n}\nfunction BoundaryShell({\n  title,\n  renderScripts,\n  isOutsideRemixApp,\n  children\n}) {\n  var _routeModules$root;\n  let {\n    routeModules\n  } = useRemixContext();\n\n  // Generally speaking, when the root route has a Layout we want to use that\n  // as the app shell instead of the default `BoundaryShell` wrapper markup below.\n  // This is true for `loader`/`action` errors, most render errors, and\n  // `HydrateFallback` scenarios.\n\n  // However, render errors thrown from the `Layout` present a bit of an issue\n  // because if the `Layout` itself throws during the `ErrorBoundary` pass and\n  // we bubble outside the `RouterProvider` to the wrapping `RemixErrorBoundary`,\n  // by returning only `children` here we'll be trying to append a `<div>` to\n  // the `document` and the DOM will throw, putting React into an error/hydration\n  // loop.\n\n  // Instead, if we're ever rendering from the outermost `RemixErrorBoundary`\n  // during hydration that wraps `RouterProvider`, then we can't trust the\n  // `Layout` and should fallback to the default app shell so we're always\n  // returning an `<html>` document.\n  if ((_routeModules$root = routeModules.root) !== null && _routeModules$root !== void 0 && _routeModules$root.Layout && !isOutsideRemixApp) {\n    return children;\n  }\n  return /*#__PURE__*/React.createElement(\"html\", {\n    lang: \"en\"\n  }, /*#__PURE__*/React.createElement(\"head\", null, /*#__PURE__*/React.createElement(\"meta\", {\n    charSet: \"utf-8\"\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n  }), /*#__PURE__*/React.createElement(\"title\", null, title)), /*#__PURE__*/React.createElement(\"body\", null, /*#__PURE__*/React.createElement(\"main\", {\n    style: {\n      fontFamily: \"system-ui, sans-serif\",\n      padding: \"2rem\"\n    }\n  }, children, renderScripts ? /*#__PURE__*/React.createElement(Scripts, null) : null)));\n}\n\nexport { BoundaryShell, RemixErrorBoundary, RemixRootDefaultErrorBoundary };\n","/**\n * @remix-run/react v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { BoundaryShell } from './errorBoundaries.js';\n\n// If the user sets `clientLoader.hydrate=true` somewhere but does not\n// provide a `HydrateFallback` at any level of the tree, then we need to at\n// least include `<Scripts>` in the SSR so we can hydrate the app and call the\n// `clientLoader` functions\nfunction RemixRootDefaultHydrateFallback() {\n  return /*#__PURE__*/React.createElement(BoundaryShell, {\n    title: \"Loading...\",\n    renderScripts: true\n  }, /*#__PURE__*/React.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n              console.log(\n                \"💿 Hey developer 👋. You can provide a way better UX than this \" +\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\n                \"functions. Check out https://remix.run/route/hydrate-fallback \" +\n                \"for more information.\"\n              );\n            `\n    }\n  }));\n}\n\nexport { RemixRootDefaultHydrateFallback };\n","/**\n * @remix-run/react v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\nimport { useRouteError, redirect } from 'react-router-dom';\nimport { loadRouteModule } from './routeModules.js';\nimport { fetchData, isRedirectResponse, isCatchResponse, isDeferredResponse, parseDeferredReadableStream, isDeferredData, isResponse } from './data.js';\nimport { prefetchStyleLinks } from './links.js';\nimport { RemixRootDefaultErrorBoundary } from './errorBoundaries.js';\nimport { RemixRootDefaultHydrateFallback } from './fallback.js';\nimport invariant from './invariant.js';\n\n// NOTE: make sure to change the Route in server-runtime if you change this\n\n// NOTE: make sure to change the EntryRoute in server-runtime if you change this\n\n// Create a map of routes by parentId to use recursively instead of\n// repeatedly filtering the manifest.\nfunction groupRoutesByParentId(manifest) {\n  let routes = {};\n  Object.values(manifest).forEach(route => {\n    let parentId = route.parentId || \"\";\n    if (!routes[parentId]) {\n      routes[parentId] = [];\n    }\n    routes[parentId].push(route);\n  });\n  return routes;\n}\nfunction getRouteComponents(route, routeModule, isSpaMode) {\n  let Component = getRouteModuleComponent(routeModule);\n  // HydrateFallback can only exist on the root route in SPA Mode\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : undefined;\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /*#__PURE__*/React.createElement(RemixRootDefaultErrorBoundary, {\n    error: useRouteError()\n  }) : undefined;\n  if (route.id === \"root\" && routeModule.Layout) {\n    return {\n      ...(Component ? {\n        element: /*#__PURE__*/React.createElement(routeModule.Layout, null, /*#__PURE__*/React.createElement(Component, null))\n      } : {\n        Component\n      }),\n      ...(ErrorBoundary ? {\n        errorElement: /*#__PURE__*/React.createElement(routeModule.Layout, null, /*#__PURE__*/React.createElement(ErrorBoundary, null))\n      } : {\n        ErrorBoundary\n      }),\n      ...(HydrateFallback ? {\n        hydrateFallbackElement: /*#__PURE__*/React.createElement(routeModule.Layout, null, /*#__PURE__*/React.createElement(HydrateFallback, null))\n      } : {\n        HydrateFallback\n      })\n    };\n  }\n  return {\n    Component,\n    ErrorBoundary,\n    HydrateFallback\n  };\n}\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({\n  Component: () => null\n})) {\n  return (routesByParentId[parentId] || []).map(route => {\n    let routeModule = routeModules[route.id];\n    invariant(routeModule, \"No `routeModule` available to create server routes\");\n    let dataRoute = {\n      ...getRouteComponents(route, routeModule, isSpaMode),\n      caseSensitive: route.caseSensitive,\n      id: route.id,\n      index: route.index,\n      path: route.path,\n      handle: routeModule.handle,\n      // For SPA Mode, all routes are lazy except root.  However we tell the\n      // router root is also lazy here too since we don't need a full\n      // implementation - we just need a `lazy` prop to tell the RR rendering\n      // where to stop which is always at the root route in SPA mode\n      lazy: isSpaMode ? () => spaModeLazyPromise : undefined,\n      // For partial hydration rendering, we need to indicate when the route\n      // has a loader/clientLoader, but it won't ever be called during the static\n      // render, so just give it a no-op function so we can render down to the\n      // proper fallback\n      loader: route.hasLoader || route.hasClientLoader ? () => null : undefined\n      // We don't need action/shouldRevalidate on these routes since they're\n      // for a static render\n    };\n    let children = createServerRoutes(manifest, routeModules, future, isSpaMode, route.id, routesByParentId, spaModeLazyPromise);\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, future, isSpaMode) {\n  return createClientRoutes(manifest, routeModulesCache, initialState, future, isSpaMode, \"\", groupRoutesByParentId(manifest), needsRevalidation);\n}\nfunction preventInvalidServerHandlerCall(type, route, isSpaMode) {\n  if (isSpaMode) {\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n    let msg = `You cannot call ${fn} in SPA Mode (routeId: \"${route.id}\")`;\n    console.error(msg);\n    throw new UNSAFE_ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n  let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\n  let msg = `You are trying to call ${fn} on a route that does not have a server ` + `${type} (routeId: \"${route.id}\")`;\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\n    console.error(msg);\n    throw new UNSAFE_ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\n  }\n}\nfunction noActionDefinedError(type, routeId) {\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to ` + `submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\n  console.error(msg);\n  throw new UNSAFE_ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\n}\nfunction createClientRoutes(manifest, routeModulesCache, initialState, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\n  return (routesByParentId[parentId] || []).map(route => {\n    let routeModule = routeModulesCache[route.id];\n\n    // Fetch data from the server either via single fetch or the standard `?_data`\n    // request.  Unwrap it when called via `serverLoader`/`serverAction` in a\n    // client handler, otherwise return the raw response for the router to unwrap\n    async function fetchServerHandlerAndMaybeUnwrap(request, unwrap, singleFetch) {\n      if (typeof singleFetch === \"function\") {\n        let result = await singleFetch();\n        return result;\n      }\n      let result = await fetchServerHandler(request, route);\n      return unwrap ? unwrapServerResponse(result) : result;\n    }\n    function fetchServerLoader(request, unwrap, singleFetch) {\n      if (!route.hasLoader) return Promise.resolve(null);\n      return fetchServerHandlerAndMaybeUnwrap(request, unwrap, singleFetch);\n    }\n    function fetchServerAction(request, unwrap, singleFetch) {\n      if (!route.hasAction) {\n        throw noActionDefinedError(\"action\", route.id);\n      }\n      return fetchServerHandlerAndMaybeUnwrap(request, unwrap, singleFetch);\n    }\n    async function prefetchStylesAndCallHandler(handler) {\n      // Only prefetch links if we exist in the routeModulesCache (critical modules\n      // and navigating back to pages previously loaded via route.lazy).  Initial\n      // execution of route.lazy (when the module is not in the cache) will handle\n      // prefetching style links via loadRouteModuleWithBlockingLinks.\n      let cachedModule = routeModulesCache[route.id];\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\n      try {\n        return handler();\n      } finally {\n        await linkPrefetchPromise;\n      }\n    }\n    let dataRoute = {\n      id: route.id,\n      index: route.index,\n      path: route.path\n    };\n    if (routeModule) {\n      var _initialState$loaderD, _initialState$errors, _routeModule$clientLo;\n      // Use critical path modules directly\n      Object.assign(dataRoute, {\n        ...dataRoute,\n        ...getRouteComponents(route, routeModule, isSpaMode),\n        handle: routeModule.handle,\n        shouldRevalidate: getShouldRevalidateFunction(future, routeModule, route.id, needsRevalidation)\n      });\n      let initialData = initialState === null || initialState === void 0 ? void 0 : (_initialState$loaderD = initialState.loaderData) === null || _initialState$loaderD === void 0 ? void 0 : _initialState$loaderD[route.id];\n      let initialError = initialState === null || initialState === void 0 ? void 0 : (_initialState$errors = initialState.errors) === null || _initialState$errors === void 0 ? void 0 : _initialState$errors[route.id];\n      let isHydrationRequest = needsRevalidation == null && (((_routeModule$clientLo = routeModule.clientLoader) === null || _routeModule$clientLo === void 0 ? void 0 : _routeModule$clientLo.hydrate) === true || !route.hasLoader);\n      dataRoute.loader = async ({\n        request,\n        params\n      }, singleFetch) => {\n        try {\n          let result = await prefetchStylesAndCallHandler(async () => {\n            invariant(routeModule, \"No `routeModule` available for critical-route loader\");\n            if (!routeModule.clientLoader) {\n              if (isSpaMode) return null;\n              // Call the server when no client loader exists\n              return fetchServerLoader(request, false, singleFetch);\n            }\n            return routeModule.clientLoader({\n              request,\n              params,\n              async serverLoader() {\n                preventInvalidServerHandlerCall(\"loader\", route, isSpaMode);\n\n                // On the first call, resolve with the server result\n                if (isHydrationRequest) {\n                  if (initialData !== undefined) {\n                    return initialData;\n                  }\n                  if (initialError !== undefined) {\n                    throw initialError;\n                  }\n                  return null;\n                }\n\n                // Call the server loader for client-side navigations\n                return fetchServerLoader(request, true, singleFetch);\n              }\n            });\n          });\n          return result;\n        } finally {\n          // Whether or not the user calls `serverLoader`, we only let this\n          // stick around as true for one loader call\n          isHydrationRequest = false;\n        }\n      };\n\n      // Let React Router know whether to run this on hydration\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(route, routeModule, isSpaMode);\n      dataRoute.action = ({\n        request,\n        params\n      }, singleFetch) => {\n        return prefetchStylesAndCallHandler(async () => {\n          invariant(routeModule, \"No `routeModule` available for critical-route action\");\n          if (!routeModule.clientAction) {\n            if (isSpaMode) {\n              throw noActionDefinedError(\"clientAction\", route.id);\n            }\n            return fetchServerAction(request, false, singleFetch);\n          }\n          return routeModule.clientAction({\n            request,\n            params,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route, isSpaMode);\n              return fetchServerAction(request, true, singleFetch);\n            }\n          });\n        });\n      };\n    } else {\n      // If the lazy route does not have a client loader/action we want to call\n      // the server loader/action in parallel with the module load so we add\n      // loader/action as static props on the route\n      if (!route.hasClientLoader) {\n        dataRoute.loader = ({\n          request\n        }, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) return Promise.resolve(null);\n          return fetchServerLoader(request, false, singleFetch);\n        });\n      }\n      if (!route.hasClientAction) {\n        dataRoute.action = ({\n          request\n        }, singleFetch) => prefetchStylesAndCallHandler(() => {\n          if (isSpaMode) {\n            throw noActionDefinedError(\"clientAction\", route.id);\n          }\n          return fetchServerAction(request, false, singleFetch);\n        });\n      }\n\n      // Load all other modules via route.lazy()\n      dataRoute.lazy = async () => {\n        let mod = await loadRouteModuleWithBlockingLinks(route, routeModulesCache);\n        let lazyRoute = {\n          ...mod\n        };\n        if (mod.clientLoader) {\n          let clientLoader = mod.clientLoader;\n          lazyRoute.loader = (args, singleFetch) => clientLoader({\n            ...args,\n            async serverLoader() {\n              preventInvalidServerHandlerCall(\"loader\", route, isSpaMode);\n              return fetchServerLoader(args.request, true, singleFetch);\n            }\n          });\n        }\n        if (mod.clientAction) {\n          let clientAction = mod.clientAction;\n          lazyRoute.action = (args, singleFetch) => clientAction({\n            ...args,\n            async serverAction() {\n              preventInvalidServerHandlerCall(\"action\", route, isSpaMode);\n              return fetchServerAction(args.request, true, singleFetch);\n            }\n          });\n        }\n        return {\n          ...(lazyRoute.loader ? {\n            loader: lazyRoute.loader\n          } : {}),\n          ...(lazyRoute.action ? {\n            action: lazyRoute.action\n          } : {}),\n          hasErrorBoundary: lazyRoute.hasErrorBoundary,\n          shouldRevalidate: getShouldRevalidateFunction(future, lazyRoute, route.id, needsRevalidation),\n          handle: lazyRoute.handle,\n          // No need to wrap these in layout since the root route is never\n          // loaded via route.lazy()\n          Component: lazyRoute.Component,\n          ErrorBoundary: lazyRoute.ErrorBoundary\n        };\n      };\n    }\n    let children = createClientRoutes(manifest, routeModulesCache, initialState, future, isSpaMode, route.id, routesByParentId, needsRevalidation);\n    if (children.length > 0) dataRoute.children = children;\n    return dataRoute;\n  });\n}\nfunction getShouldRevalidateFunction(future, route, routeId, needsRevalidation) {\n  // During HDR we force revalidation for updated routes\n  if (needsRevalidation) {\n    return wrapShouldRevalidateForHdr(routeId, route.shouldRevalidate, needsRevalidation);\n  }\n\n  // Single fetch revalidates by default, so override the RR default value which\n  // matches the multi-fetch behavior with `true`\n  if (future.v3_singleFetch && route.shouldRevalidate) {\n    let fn = route.shouldRevalidate;\n    return opts => fn({\n      ...opts,\n      defaultShouldRevalidate: true\n    });\n  }\n  return route.shouldRevalidate;\n}\n\n// When an HMR / HDR update happens we opt out of all user-defined\n// revalidation logic and force a revalidation on the first call\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\n  let handledRevalidation = false;\n  return arg => {\n    if (!handledRevalidation) {\n      handledRevalidation = true;\n      return needsRevalidation.has(routeId);\n    }\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\n  };\n}\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModule = await loadRouteModule(route, routeModules);\n  await prefetchStyleLinks(route, routeModule);\n\n  // Include all `browserSafeRouteExports` fields, except `HydrateFallback`\n  // since those aren't used on lazily loaded routes\n  return {\n    Component: getRouteModuleComponent(routeModule),\n    ErrorBoundary: routeModule.ErrorBoundary,\n    clientAction: routeModule.clientAction,\n    clientLoader: routeModule.clientLoader,\n    handle: routeModule.handle,\n    links: routeModule.links,\n    meta: routeModule.meta,\n    shouldRevalidate: routeModule.shouldRevalidate\n  };\n}\nasync function fetchServerHandler(request, route) {\n  let result = await fetchData(request, route.id);\n  if (result instanceof Error) {\n    throw result;\n  }\n  if (isRedirectResponse(result)) {\n    throw getRedirect(result);\n  }\n  if (isCatchResponse(result)) {\n    throw result;\n  }\n  if (isDeferredResponse(result) && result.body) {\n    return await parseDeferredReadableStream(result.body);\n  }\n  return result;\n}\nfunction unwrapServerResponse(result) {\n  if (isDeferredData(result)) {\n    return result.data;\n  }\n  if (isResponse(result)) {\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      return result.json();\n    } else {\n      return result.text();\n    }\n  }\n  return result;\n}\nfunction getRedirect(response) {\n  let status = parseInt(response.headers.get(\"X-Remix-Status\"), 10) || 302;\n  let url = response.headers.get(\"X-Remix-Redirect\");\n  let headers = {};\n  let revalidate = response.headers.get(\"X-Remix-Revalidate\");\n  if (revalidate) {\n    headers[\"X-Remix-Revalidate\"] = revalidate;\n  }\n  let reloadDocument = response.headers.get(\"X-Remix-Reload-Document\");\n  if (reloadDocument) {\n    headers[\"X-Remix-Reload-Document\"] = reloadDocument;\n  }\n  let replace = response.headers.get(\"X-Remix-Replace\");\n  if (replace) {\n    headers[\"X-Remix-Replace\"] = replace;\n  }\n  return redirect(url, {\n    status,\n    headers\n  });\n}\n\n// Our compiler generates the default export as `{}` when no default is provided,\n// which can lead us to trying to use that as a Component in RR and calling\n// createElement on it.  Patching here as a quick fix and hoping it's no longer\n// an issue in Vite.\nfunction getRouteModuleComponent(routeModule) {\n  if (routeModule.default == null) return undefined;\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\n  if (!isEmptyObject) {\n    return routeModule.default;\n  }\n}\nfunction shouldHydrateRouteLoader(route, routeModule, isSpaMode) {\n  return isSpaMode && route.id !== \"root\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\n}\n\nexport { createClientRoutes, createClientRoutesWithHMRRevalidationOptOut, createServerRoutes, shouldHydrateRouteLoader };\n","/**\n * @remix-run/react v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { matchRoutes } from '@remix-run/router';\nimport * as React from 'react';\nimport { createClientRoutes } from './routes.js';\n\n// Currently rendered links that may need prefetching\nconst nextPaths = new Set();\n\n// FIFO queue of previously discovered routes to prevent re-calling on\n// subsequent navigations to the same path\nconst discoveredPathsMaxSize = 1000;\nconst discoveredPaths = new Set();\n\n// 7.5k to come in under the ~8k limit for most browsers\n// https://stackoverflow.com/a/417184\nconst URL_LIMIT = 7680;\nfunction isFogOfWarEnabled(future, isSpaMode) {\n  return future.v3_lazyRouteDiscovery === true && !isSpaMode;\n}\nfunction getPartialManifest(manifest, router) {\n  // Start with our matches for this pathname\n  let routeIds = new Set(router.state.matches.map(m => m.route.id));\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\n  let paths = [\"/\"];\n\n  // We've already matched to the last segment\n  segments.pop();\n\n  // Traverse each path for our parents and match in case they have pathless/index\n  // children we need to include in the initial manifest\n  while (segments.length > 0) {\n    paths.push(`/${segments.join(\"/\")}`);\n    segments.pop();\n  }\n  paths.forEach(path => {\n    let matches = matchRoutes(router.routes, path, router.basename);\n    if (matches) {\n      matches.forEach(m => routeIds.add(m.route.id));\n    }\n  });\n  let initialRoutes = [...routeIds].reduce((acc, id) => Object.assign(acc, {\n    [id]: manifest.routes[id]\n  }), {});\n  return {\n    ...manifest,\n    routes: initialRoutes\n  };\n}\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, future, isSpaMode, basename) {\n  if (!isFogOfWarEnabled(future, isSpaMode)) {\n    return undefined;\n  }\n  return async ({\n    path,\n    patch\n  }) => {\n    if (discoveredPaths.has(path)) {\n      return;\n    }\n    await fetchAndApplyManifestPatches([path], manifest, routeModules, future, isSpaMode, basename, patch);\n  };\n}\nfunction useFogOFWarDiscovery(router, manifest, routeModules, future, isSpaMode) {\n  React.useEffect(() => {\n    var _navigator$connection;\n    // Don't prefetch if not enabled or if the user has `saveData` enabled\n    if (!isFogOfWarEnabled(future, isSpaMode) || ((_navigator$connection = navigator.connection) === null || _navigator$connection === void 0 ? void 0 : _navigator$connection.saveData) === true) {\n      return;\n    }\n\n    // Register a link href for patching\n    function registerElement(el) {\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\n      if (!path) {\n        return;\n      }\n      let url = new URL(path, window.location.origin);\n      if (!discoveredPaths.has(url.pathname)) {\n        nextPaths.add(url.pathname);\n      }\n    }\n\n    // Fetch patches for all currently rendered links\n    async function fetchPatches() {\n      let lazyPaths = Array.from(nextPaths.keys()).filter(path => {\n        if (discoveredPaths.has(path)) {\n          nextPaths.delete(path);\n          return false;\n        }\n        return true;\n      });\n      if (lazyPaths.length === 0) {\n        return;\n      }\n      try {\n        await fetchAndApplyManifestPatches(lazyPaths, manifest, routeModules, future, isSpaMode, router.basename, router.patchRoutes);\n      } catch (e) {\n        console.error(\"Failed to fetch manifest patches\", e);\n      }\n    }\n\n    // Register and fetch patches for all initially-rendered links/forms\n    document.body.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(el => registerElement(el));\n    fetchPatches();\n\n    // Setup a MutationObserver to fetch all subsequently rendered links/forms\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\n    function isElement(node) {\n      return node.nodeType === Node.ELEMENT_NODE;\n    }\n    let observer = new MutationObserver(records => {\n      let elements = new Set();\n      records.forEach(r => {\n        [r.target, ...r.addedNodes].forEach(node => {\n          if (!isElement(node)) return;\n          if (node.tagName === \"A\" && node.getAttribute(\"data-discover\")) {\n            elements.add(node);\n          } else if (node.tagName === \"FORM\" && node.getAttribute(\"data-discover\")) {\n            elements.add(node);\n          }\n          if (node.tagName !== \"A\") {\n            node.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(el => elements.add(el));\n          }\n        });\n      });\n      elements.forEach(el => registerElement(el));\n      debouncedFetchPatches();\n    });\n    observer.observe(document.documentElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\n    });\n    return () => observer.disconnect();\n  }, [future, isSpaMode, manifest, routeModules, router]);\n}\nasync function fetchAndApplyManifestPatches(paths, manifest, routeModules, future, isSpaMode, basename, patchRoutes) {\n  let manifestPath = `${basename ?? \"/\"}/__manifest`.replace(/\\/+/g, \"/\");\n  let url = new URL(manifestPath, window.location.origin);\n  paths.sort().forEach(path => url.searchParams.append(\"p\", path));\n  url.searchParams.set(\"version\", manifest.version);\n\n  // If the URL is nearing the ~8k limit on GET requests, skip this optimization\n  // step and just let discovery happen on link click.  We also wipe out the\n  // nextPaths Set here so we can start filling it with fresh links\n  if (url.toString().length > URL_LIMIT) {\n    nextPaths.clear();\n    return;\n  }\n  let res = await fetch(url);\n  if (!res.ok) {\n    throw new Error(`${res.status} ${res.statusText}`);\n  } else if (res.status >= 400) {\n    throw new Error(await res.text());\n  }\n  let serverPatches = await res.json();\n\n  // Patch routes we don't know about yet into the manifest\n  let knownRoutes = new Set(Object.keys(manifest.routes));\n  let patches = Object.values(serverPatches).reduce((acc, route) => !knownRoutes.has(route.id) ? Object.assign(acc, {\n    [route.id]: route\n  }) : acc, {});\n  Object.assign(manifest.routes, patches);\n\n  // Track discovered paths so we don't have to fetch them again\n  paths.forEach(p => addToFifoQueue(p, discoveredPaths));\n\n  // Identify all parentIds for which we have new children to add and patch\n  // in their new children\n  let parentIds = new Set();\n  Object.values(patches).forEach(patch => {\n    if (!patch.parentId || !patches[patch.parentId]) {\n      parentIds.add(patch.parentId);\n    }\n  });\n  parentIds.forEach(parentId => patchRoutes(parentId || null, createClientRoutes(patches, routeModules, null, future, isSpaMode, parentId)));\n}\nfunction addToFifoQueue(path, queue) {\n  if (queue.size >= discoveredPathsMaxSize) {\n    let first = queue.values().next().value;\n    if (typeof first === \"string\") queue.delete(first);\n  }\n  queue.add(path);\n}\n\n// Thanks Josh!\n// https://www.joshwcomeau.com/snippets/javascript/debounce/\nfunction debounce(callback, wait) {\n  let timeoutId;\n  return (...args) => {\n    window.clearTimeout(timeoutId);\n    timeoutId = window.setTimeout(() => callback(...args), wait);\n  };\n}\n\nexport { fetchAndApplyManifestPatches, getPartialManifest, getPatchRoutesOnNavigationFunction, isFogOfWarEnabled, useFogOFWarDiscovery };\n","/**\n * @remix-run/react v2.15.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.js';\nimport * as React from 'react';\nimport { useHref, NavLink as NavLink$1, Link as Link$1, Form as Form$1, matchRoutes, useLocation, Await as Await$1, useAsyncError, useMatches as useMatches$1, useLoaderData as useLoaderData$1, useRouteLoaderData as useRouteLoaderData$1, useActionData as useActionData$1, useFetcher as useFetcher$1, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext } from 'react-router-dom';\nimport invariant from './invariant.js';\nimport { getKeyedLinksForMatches, isPageLinkDescriptor, getNewMatchesForLinks, getDataLinkHrefs, getModuleLinkHrefs, getKeyedPrefetchLinks } from './links.js';\nimport { escapeHtml, createHtml } from './markup.js';\nimport { singleFetchUrl } from './single-fetch.js';\nimport { isFogOfWarEnabled, getPartialManifest } from './fog-of-war.js';\n\nfunction useDataRouterContext() {\n  let context = React.useContext(UNSAFE_DataRouterContext);\n  invariant(context, \"You must render this element inside a <DataRouterContext.Provider> element\");\n  return context;\n}\nfunction useDataRouterStateContext() {\n  let context = React.useContext(UNSAFE_DataRouterStateContext);\n  invariant(context, \"You must render this element inside a <DataRouterStateContext.Provider> element\");\n  return context;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RemixContext\n\nconst RemixContext = /*#__PURE__*/React.createContext(undefined);\nRemixContext.displayName = \"Remix\";\nfunction useRemixContext() {\n  let context = React.useContext(RemixContext);\n  invariant(context, \"You must render this element inside a <Remix> element\");\n  return context;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Public API\n\n/**\n * Defines the discovery behavior of the link:\n *\n * - \"render\": Eagerly discover when the link is rendered (default)\n * - \"none\": No eager discovery - discover when the link is clicked\n */\n\n/**\n * Defines the prefetching behavior of the link:\n *\n * - \"none\": Never fetched\n * - \"intent\": Fetched when the user focuses or hovers the link\n * - \"render\": Fetched when the link is rendered\n * - \"viewport\": Fetched when the link is in the viewport\n */\n\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let [maybePrefetch, setMaybePrefetch] = React.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React.useState(false);\n  let {\n    onFocus,\n    onBlur,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart\n  } = theirElementProps;\n  let ref = React.useRef(null);\n  React.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n    if (prefetch === \"viewport\") {\n      let callback = entries => {\n        entries.forEach(entry => {\n          setShouldPrefetch(entry.isIntersecting);\n        });\n      };\n      let observer = new IntersectionObserver(callback, {\n        threshold: 0.5\n      });\n      if (ref.current) observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [prefetch]);\n  let setIntent = () => {\n    if (prefetch === \"intent\") {\n      setMaybePrefetch(true);\n    }\n  };\n  let cancelIntent = () => {\n    if (prefetch === \"intent\") {\n      setMaybePrefetch(false);\n      setShouldPrefetch(false);\n    }\n  };\n  React.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  return [shouldPrefetch, ref, {\n    onFocus: composeEventHandlers(onFocus, setIntent),\n    onBlur: composeEventHandlers(onBlur, cancelIntent),\n    onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n    onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n    onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n  }];\n}\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nfunction getDiscoverAttr(discover, isAbsolute, reloadDocument) {\n  return discover === \"render\" && !isAbsolute && !reloadDocument ? \"true\" : undefined;\n}\n\n/**\n * A special kind of `<Link>` that knows whether it is \"active\".\n *\n * @see https://remix.run/components/nav-link\n */\nlet NavLink = /*#__PURE__*/React.forwardRef(({\n  to,\n  prefetch = \"none\",\n  discover = \"render\",\n  ...props\n}, forwardedRef) => {\n  let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to);\n  let href = useHref(to);\n  let [shouldPrefetch, ref, prefetchHandlers] = usePrefetchBehavior(prefetch, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavLink$1, _extends({}, props, prefetchHandlers, {\n    ref: mergeRefs(forwardedRef, ref),\n    to: to,\n    \"data-discover\": getDiscoverAttr(discover, isAbsolute, props.reloadDocument)\n  })), shouldPrefetch && !isAbsolute ? /*#__PURE__*/React.createElement(PrefetchPageLinks, {\n    page: href\n  }) : null);\n});\nNavLink.displayName = \"NavLink\";\n\n/**\n * This component renders an anchor tag and is the primary way the user will\n * navigate around your website.\n *\n * @see https://remix.run/components/link\n */\nlet Link = /*#__PURE__*/React.forwardRef(({\n  to,\n  prefetch = \"none\",\n  discover = \"render\",\n  ...props\n}, forwardedRef) => {\n  let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to);\n  let href = useHref(to);\n  let [shouldPrefetch, ref, prefetchHandlers] = usePrefetchBehavior(prefetch, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link$1, _extends({}, props, prefetchHandlers, {\n    ref: mergeRefs(forwardedRef, ref),\n    to: to,\n    \"data-discover\": getDiscoverAttr(discover, isAbsolute, props.reloadDocument)\n  })), shouldPrefetch && !isAbsolute ? /*#__PURE__*/React.createElement(PrefetchPageLinks, {\n    page: href\n  }) : null);\n});\nLink.displayName = \"Link\";\n/**\n * This component renders a form tag and is the primary way the user will\n * submit information via your website.\n *\n * @see https://remix.run/components/form\n */\nlet Form = /*#__PURE__*/React.forwardRef(({\n  discover = \"render\",\n  ...props\n}, forwardedRef) => {\n  let isAbsolute = typeof props.action === \"string\" && ABSOLUTE_URL_REGEX.test(props.action);\n  return /*#__PURE__*/React.createElement(Form$1, _extends({}, props, {\n    ref: forwardedRef,\n    \"data-discover\": getDiscoverAttr(discover, isAbsolute, props.reloadDocument)\n  }));\n});\nForm.displayName = \"Form\";\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return event => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\n\n// Return the matches actively being displayed:\n// - In SPA Mode we only SSR/hydrate the root match, and include all matches\n//   after hydration. This lets the router handle initial match loads via lazy().\n// - When an error boundary is rendered, we slice off matches up to the\n//   boundary for <Links>/<Meta>\nfunction getActiveMatches(matches, errors, isSpaMode) {\n  if (isSpaMode && !isHydrated) {\n    return [matches[0]];\n  }\n  if (errors) {\n    let errorIdx = matches.findIndex(m => errors[m.route.id] !== undefined);\n    return matches.slice(0, errorIdx + 1);\n  }\n  return matches;\n}\n\n/**\n * Renders the `<link>` tags for the current routes.\n *\n * @see https://remix.run/components/links\n */\nfunction Links() {\n  let {\n    isSpaMode,\n    manifest,\n    routeModules,\n    criticalCss\n  } = useRemixContext();\n  let {\n    errors,\n    matches: routerMatches\n  } = useDataRouterStateContext();\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let keyedLinks = React.useMemo(() => getKeyedLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, criticalCss ? /*#__PURE__*/React.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: criticalCss\n    }\n  }) : null, keyedLinks.map(({\n    key,\n    link\n  }) => isPageLinkDescriptor(link) ? /*#__PURE__*/React.createElement(PrefetchPageLinks, _extends({\n    key: key\n  }, link)) : /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: key\n  }, link))));\n}\n\n/**\n * This component renders all the `<link rel=\"prefetch\">` and\n * `<link rel=\"modulepreload\"/>` tags for all the assets (data, modules, css) of\n * a given page.\n *\n * @param props\n * @param props.page\n * @see https://remix.run/components/prefetch-page-links\n */\nfunction PrefetchPageLinks({\n  page,\n  ...dataLinkProps\n}) {\n  let {\n    router\n  } = useDataRouterContext();\n  let matches = React.useMemo(() => matchRoutes(router.routes, page, router.basename), [router.routes, page, router.basename]);\n  if (!matches) {\n    console.warn(`Tried to prefetch ${page} but no routes matched.`);\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(PrefetchPageLinksImpl, _extends({\n    page: page,\n    matches: matches\n  }, dataLinkProps));\n}\nfunction useKeyedPrefetchLinks(matches) {\n  let {\n    manifest,\n    routeModules\n  } = useRemixContext();\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React.useState([]);\n  React.useEffect(() => {\n    let interrupted = false;\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(links => {\n      if (!interrupted) {\n        setKeyedPrefetchLinks(links);\n      }\n    });\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, manifest, routeModules]);\n  return keyedPrefetchLinks;\n}\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let {\n    future,\n    manifest,\n    routeModules\n  } = useRemixContext();\n  let {\n    loaderData,\n    matches\n  } = useDataRouterStateContext();\n  let newMatchesForData = React.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, future, \"data\"), [page, nextMatches, matches, manifest, location, future]);\n  let dataHrefs = React.useMemo(() => {\n    if (!future.v3_singleFetch) {\n      return getDataLinkHrefs(page, newMatchesForData, manifest);\n    }\n    if (page === location.pathname + location.search + location.hash) {\n      // Because we opt-into revalidation, don't compute this for the current page\n      // since it would always trigger a prefetch of the existing loaders\n      return [];\n    }\n\n    // Single-fetch is harder :)\n    // This parallels the logic in the single fetch data strategy\n    let routesParams = new Set();\n    let foundOptOutRoute = false;\n    nextMatches.forEach(m => {\n      var _routeModules$m$route;\n      if (!manifest.routes[m.route.id].hasLoader) {\n        return;\n      }\n      if (!newMatchesForData.some(m2 => m2.route.id === m.route.id) && m.route.id in loaderData && (_routeModules$m$route = routeModules[m.route.id]) !== null && _routeModules$m$route !== void 0 && _routeModules$m$route.shouldRevalidate) {\n        foundOptOutRoute = true;\n      } else if (manifest.routes[m.route.id].hasClientLoader) {\n        foundOptOutRoute = true;\n      } else {\n        routesParams.add(m.route.id);\n      }\n    });\n    if (routesParams.size === 0) {\n      return [];\n    }\n    let url = singleFetchUrl(page);\n    // When one or more routes have opted out, we add a _routes param to\n    // limit the loaders to those that have a server loader and did not\n    // opt out\n    if (foundOptOutRoute && routesParams.size > 0) {\n      url.searchParams.set(\"_routes\", nextMatches.filter(m => routesParams.has(m.route.id)).map(m => m.route.id).join(\",\"));\n    }\n    return [url.pathname + url.search];\n  }, [future.v3_singleFetch, loaderData, location, manifest, newMatchesForData, nextMatches, page, routeModules]);\n  let newMatchesForAssets = React.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, future, \"assets\"), [page, nextMatches, matches, manifest, location, future]);\n  let moduleHrefs = React.useMemo(() => getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]);\n\n  // needs to be a hook with async behavior because we need the modules, not\n  // just the manifest like the other links in here.\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dataHrefs.map(href => /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: href,\n    rel: \"prefetch\",\n    as: \"fetch\",\n    href: href\n  }, linkProps))), moduleHrefs.map(href => /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: href,\n    rel: \"modulepreload\",\n    href: href\n  }, linkProps))), keyedPrefetchLinks.map(({\n    key,\n    link\n  }) =>\n  /*#__PURE__*/\n  // these don't spread `linkProps` because they are full link descriptors\n  // already with their own props\n  React.createElement(\"link\", _extends({\n    key: key\n  }, link))));\n}\n\n/**\n * Renders HTML tags related to metadata for the current route.\n *\n * @see https://remix.run/components/meta\n */\nfunction Meta() {\n  let {\n    isSpaMode,\n    routeModules\n  } = useRemixContext();\n  let {\n    errors,\n    matches: routerMatches,\n    loaderData\n  } = useDataRouterStateContext();\n  let location = useLocation();\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\n  let error = null;\n  if (errors) {\n    error = errors[_matches[_matches.length - 1].route.id];\n  }\n  let meta = [];\n  let leafMeta = null;\n  let matches = [];\n  for (let i = 0; i < _matches.length; i++) {\n    let _match = _matches[i];\n    let routeId = _match.route.id;\n    let data = loaderData[routeId];\n    let params = _match.params;\n    let routeModule = routeModules[routeId];\n    let routeMeta = [];\n    let match = {\n      id: routeId,\n      data,\n      meta: [],\n      params: _match.params,\n      pathname: _match.pathname,\n      handle: _match.route.handle,\n      error\n    };\n    matches[i] = match;\n    if (routeModule !== null && routeModule !== void 0 && routeModule.meta) {\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data,\n        params,\n        location,\n        matches,\n        error\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\n    } else if (leafMeta) {\n      // We only assign the route's meta to the nearest leaf if there is no meta\n      // export in the route. The meta function may return a falsy value which\n      // is effectively the same as an empty array.\n      routeMeta = [...leafMeta];\n    }\n    routeMeta = routeMeta || [];\n    if (!Array.isArray(routeMeta)) {\n      throw new Error(\"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must \" + \"return an array of meta objects.\" + \"\\n\\nTo reference the meta function API, see https://remix.run/route/meta\");\n    }\n    match.meta = routeMeta;\n    matches[i] = match;\n    meta = [...routeMeta];\n    leafMeta = meta;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.flat().map(metaProps => {\n    if (!metaProps) {\n      return null;\n    }\n    if (\"tagName\" in metaProps) {\n      let {\n        tagName,\n        ...rest\n      } = metaProps;\n      if (!isValidMetaTag(tagName)) {\n        console.warn(`A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`);\n        return null;\n      }\n      let Comp = tagName;\n      return /*#__PURE__*/React.createElement(Comp, _extends({\n        key: JSON.stringify(rest)\n      }, rest));\n    }\n    if (\"title\" in metaProps) {\n      return /*#__PURE__*/React.createElement(\"title\", {\n        key: \"title\"\n      }, String(metaProps.title));\n    }\n    if (\"charset\" in metaProps) {\n      metaProps.charSet ??= metaProps.charset;\n      delete metaProps.charset;\n    }\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\n      return typeof metaProps.charSet === \"string\" ? /*#__PURE__*/React.createElement(\"meta\", {\n        key: \"charSet\",\n        charSet: metaProps.charSet\n      }) : null;\n    }\n    if (\"script:ld+json\" in metaProps) {\n      try {\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\n        return /*#__PURE__*/React.createElement(\"script\", {\n          key: `script:ld+json:${json}`,\n          type: \"application/ld+json\",\n          dangerouslySetInnerHTML: {\n            __html: json\n          }\n        });\n      } catch (err) {\n        return null;\n      }\n    }\n    return /*#__PURE__*/React.createElement(\"meta\", _extends({\n      key: JSON.stringify(metaProps)\n    }, metaProps));\n  }));\n}\nfunction isValidMetaTag(tagName) {\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\n}\nfunction Await(props) {\n  return /*#__PURE__*/React.createElement(Await$1, props);\n}\n\n/**\n * Tracks whether Remix has finished hydrating or not, so scripts can be skipped\n * during client-side updates.\n */\nlet isHydrated = false;\n/**\n * Renders the `<script>` tags needed for the initial render. Bundles for\n * additional routes are loaded later as needed.\n *\n * @param props Additional properties to add to each script tag that is rendered.\n * In addition to scripts, \\<link rel=\"modulepreload\"> tags receive the crossOrigin\n * property if provided.\n *\n * @see https://remix.run/components/scripts\n */\nfunction Scripts(props) {\n  let {\n    manifest,\n    serverHandoffString,\n    abortDelay,\n    serializeError,\n    isSpaMode,\n    future,\n    renderMeta\n  } = useRemixContext();\n  let {\n    router,\n    static: isStatic,\n    staticContext\n  } = useDataRouterContext();\n  let {\n    matches: routerMatches\n  } = useDataRouterStateContext();\n  let enableFogOfWar = isFogOfWarEnabled(future, isSpaMode);\n\n  // Let <RemixServer> know that we hydrated and we should render the single\n  // fetch streaming scripts\n  if (renderMeta) {\n    renderMeta.didRenderScripts = true;\n  }\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\n  React.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let serializePreResolvedErrorImp = (key, error) => {\n    let toSerialize;\n    if (serializeError && error instanceof Error) {\n      toSerialize = serializeError(error);\n    } else {\n      toSerialize = error;\n    }\n    return `${JSON.stringify(key)}:__remixContext.p(!1, ${escapeHtml(JSON.stringify(toSerialize))})`;\n  };\n  let serializePreresolvedDataImp = (routeId, key, data) => {\n    let serializedData;\n    try {\n      serializedData = JSON.stringify(data);\n    } catch (error) {\n      return serializePreResolvedErrorImp(key, error);\n    }\n    return `${JSON.stringify(key)}:__remixContext.p(${escapeHtml(serializedData)})`;\n  };\n  let serializeErrorImp = (routeId, key, error) => {\n    let toSerialize;\n    if (serializeError && error instanceof Error) {\n      toSerialize = serializeError(error);\n    } else {\n      toSerialize = error;\n    }\n    return `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(key)}, !1, ${escapeHtml(JSON.stringify(toSerialize))})`;\n  };\n  let serializeDataImp = (routeId, key, data) => {\n    let serializedData;\n    try {\n      serializedData = JSON.stringify(data);\n    } catch (error) {\n      return serializeErrorImp(routeId, key, error);\n    }\n    return `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(key)}, ${escapeHtml(serializedData)})`;\n  };\n  let deferredScripts = [];\n  let initialScripts = React.useMemo(() => {\n    var _manifest$hmr;\n    let streamScript = future.v3_singleFetch ?\n    // prettier-ignore\n    \"window.__remixContext.stream = new ReadableStream({\" + \"start(controller){\" + \"window.__remixContext.streamController = controller;\" + \"}\" + \"}).pipeThrough(new TextEncoderStream());\" : \"\";\n    let contextScript = staticContext ? `window.__remixContext = ${serverHandoffString};${streamScript}` : \" \";\n\n    // When single fetch is enabled, deferred is handled by turbo-stream\n    let activeDeferreds = future.v3_singleFetch ? undefined : staticContext === null || staticContext === void 0 ? void 0 : staticContext.activeDeferreds;\n\n    // This sets up the __remixContext with utility functions used by the\n    // deferred scripts.\n    // - __remixContext.p is a function that takes a resolved value or error and returns a promise.\n    //   This is used for transmitting pre-resolved promises from the server to the client.\n    // - __remixContext.n is a function that takes a routeID and key to returns a promise for later\n    //   resolution by the subsequently streamed chunks.\n    // - __remixContext.r is a function that takes a routeID, key and value or error and resolves\n    //   the promise created by __remixContext.n.\n    // - __remixContext.t is a map or routeId to keys to an object containing `e` and `r` methods\n    //   to resolve or reject the promise created by __remixContext.n.\n    // - __remixContext.a is the active number of deferred scripts that should be rendered to match\n    //   the SSR tree for hydration on the client.\n    contextScript += !activeDeferreds ? \"\" : [\"__remixContext.p = function(v,e,p,x) {\", \"  if (typeof e !== 'undefined') {\", process.env.NODE_ENV === \"development\" ? \"    x=new Error(e.message);\\n    x.stack=e.stack;\" : '    x=new Error(\"Unexpected Server Error\");\\n    x.stack=undefined;', \"    p=Promise.reject(x);\", \"  } else {\", \"    p=Promise.resolve(v);\", \"  }\", \"  return p;\", \"};\", \"__remixContext.n = function(i,k) {\", \"  __remixContext.t = __remixContext.t || {};\", \"  __remixContext.t[i] = __remixContext.t[i] || {};\", \"  let p = new Promise((r, e) => {__remixContext.t[i][k] = {r:(v)=>{r(v);},e:(v)=>{e(v);}};});\", typeof abortDelay === \"number\" ? `setTimeout(() => {if(typeof p._error !== \"undefined\" || typeof p._data !== \"undefined\"){return;} __remixContext.t[i][k].e(new Error(\"Server timeout.\"))}, ${abortDelay});` : \"\", \"  return p;\", \"};\", \"__remixContext.r = function(i,k,v,e,p,x) {\", \"  p = __remixContext.t[i][k];\", \"  if (typeof e !== 'undefined') {\", process.env.NODE_ENV === \"development\" ? \"    x=new Error(e.message);\\n    x.stack=e.stack;\" : '    x=new Error(\"Unexpected Server Error\");\\n    x.stack=undefined;', \"    p.e(x);\", \"  } else {\", \"    p.r(v);\", \"  }\", \"};\"].join(\"\\n\") + Object.entries(activeDeferreds).map(([routeId, deferredData]) => {\n      let pendingKeys = new Set(deferredData.pendingKeys);\n      let promiseKeyValues = deferredData.deferredKeys.map(key => {\n        if (pendingKeys.has(key)) {\n          deferredScripts.push( /*#__PURE__*/React.createElement(DeferredHydrationScript, {\n            key: `${routeId} | ${key}`,\n            deferredData: deferredData,\n            routeId: routeId,\n            dataKey: key,\n            scriptProps: props,\n            serializeData: serializeDataImp,\n            serializeError: serializeErrorImp\n          }));\n          return `${JSON.stringify(key)}:__remixContext.n(${JSON.stringify(routeId)}, ${JSON.stringify(key)})`;\n        } else {\n          let trackedPromise = deferredData.data[key];\n          if (typeof trackedPromise._error !== \"undefined\") {\n            return serializePreResolvedErrorImp(key, trackedPromise._error);\n          } else {\n            return serializePreresolvedDataImp(routeId, key, trackedPromise._data);\n          }\n        }\n      }).join(\",\\n\");\n      return `Object.assign(__remixContext.state.loaderData[${JSON.stringify(routeId)}], {${promiseKeyValues}});`;\n    }).join(\"\\n\") + (deferredScripts.length > 0 ? `__remixContext.a=${deferredScripts.length};` : \"\");\n    let routeModulesScript = !isStatic ? \" \" : `${(_manifest$hmr = manifest.hmr) !== null && _manifest$hmr !== void 0 && _manifest$hmr.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${enableFogOfWar ? \"\" : `import ${JSON.stringify(manifest.url)}`};\n${matches.map((match, index) => `import * as route${index} from ${JSON.stringify(manifest.routes[match.route.id].module)};`).join(\"\\n\")}\n${enableFogOfWar ?\n    // Inline a minimal manifest with the SSR matches\n    `window.__remixManifest = ${JSON.stringify(getPartialManifest(manifest, router), null, 2)};` : \"\"}\nwindow.__remixRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\n\nimport(${JSON.stringify(manifest.entry.module)});`;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(contextScript),\n      type: undefined\n    })), /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(routeModulesScript),\n      type: \"module\",\n      async: true\n    })));\n    // disabled deps array because we are purposefully only rendering this once\n    // for hydration, after that we want to just continue rendering the initial\n    // scripts as they were when the page first loaded\n    // eslint-disable-next-line\n  }, []);\n  if (!isStatic && typeof __remixContext === \"object\" && __remixContext.a) {\n    for (let i = 0; i < __remixContext.a; i++) {\n      deferredScripts.push( /*#__PURE__*/React.createElement(DeferredHydrationScript, {\n        key: i,\n        scriptProps: props,\n        serializeData: serializeDataImp,\n        serializeError: serializeErrorImp\n      }));\n    }\n  }\n  let routePreloads = matches.map(match => {\n    let route = manifest.routes[match.route.id];\n    return (route.imports || []).concat([route.module]);\n  }).flat(1);\n  let preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);\n  return isHydrated ? null : /*#__PURE__*/React.createElement(React.Fragment, null, !enableFogOfWar ? /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.url,\n    crossOrigin: props.crossOrigin\n  }) : null, /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"modulepreload\",\n    href: manifest.entry.module,\n    crossOrigin: props.crossOrigin\n  }), dedupe(preloads).map(path => /*#__PURE__*/React.createElement(\"link\", {\n    key: path,\n    rel: \"modulepreload\",\n    href: path,\n    crossOrigin: props.crossOrigin\n  })), initialScripts, deferredScripts);\n}\nfunction DeferredHydrationScript({\n  dataKey,\n  deferredData,\n  routeId,\n  scriptProps,\n  serializeData,\n  serializeError\n}) {\n  if (typeof document === \"undefined\" && deferredData && dataKey && routeId) {\n    invariant(deferredData.pendingKeys.includes(dataKey), `Deferred data for route ${routeId} with key ${dataKey} was not pending but tried to render a script for it.`);\n  }\n  return /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback:\n    // This makes absolutely no sense. The server renders null as a fallback,\n    // but when hydrating, we need to render a script tag to avoid a hydration issue.\n    // To reproduce a hydration mismatch, just render null as a fallback.\n    typeof document === \"undefined\" && deferredData && dataKey && routeId ? null : /*#__PURE__*/React.createElement(\"script\", _extends({}, scriptProps, {\n      async: true,\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: {\n        __html: \" \"\n      }\n    }))\n  }, typeof document === \"undefined\" && deferredData && dataKey && routeId ? /*#__PURE__*/React.createElement(Await, {\n    resolve: deferredData.data[dataKey],\n    errorElement: /*#__PURE__*/React.createElement(ErrorDeferredHydrationScript, {\n      dataKey: dataKey,\n      routeId: routeId,\n      scriptProps: scriptProps,\n      serializeError: serializeError\n    }),\n    children: data => {\n      return /*#__PURE__*/React.createElement(\"script\", _extends({}, scriptProps, {\n        async: true,\n        suppressHydrationWarning: true,\n        dangerouslySetInnerHTML: {\n          __html: serializeData(routeId, dataKey, data)\n        }\n      }));\n    }\n  }) : /*#__PURE__*/React.createElement(\"script\", _extends({}, scriptProps, {\n    async: true,\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: \" \"\n    }\n  })));\n}\nfunction ErrorDeferredHydrationScript({\n  dataKey,\n  routeId,\n  scriptProps,\n  serializeError\n}) {\n  let error = useAsyncError();\n  return /*#__PURE__*/React.createElement(\"script\", _extends({}, scriptProps, {\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: serializeError(routeId, dataKey, error)\n    }\n  }));\n}\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n *\n * @see https://remix.run/hooks/use-matches\n */\nfunction useMatches() {\n  return useMatches$1();\n}\n\n/**\n * Returns the JSON parsed data from the current route's `loader`.\n *\n * @see https://remix.run/hooks/use-loader-data\n */\nfunction useLoaderData() {\n  return useLoaderData$1();\n}\n\n/**\n * Returns the loaderData for the given routeId.\n *\n * @see https://remix.run/hooks/use-route-loader-data\n */\nfunction useRouteLoaderData(routeId) {\n  return useRouteLoaderData$1(routeId);\n}\n\n/**\n * Returns the JSON parsed data from the current route's `action`.\n *\n * @see https://remix.run/hooks/use-action-data\n */\nfunction useActionData() {\n  return useActionData$1();\n}\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n *\n * @see https://remix.run/hooks/use-fetcher\n */\nfunction useFetcher(opts = {}) {\n  return useFetcher$1(opts);\n}\n\n/**\n * This component connects your app to the Remix asset server and\n * automatically reloads the page when files change in development.\n * In production, it renders null, so you can safely render it always in your root route.\n *\n * @see https://remix.run/docs/components/live-reload\n */\nconst LiveReload =\n// Dead Code Elimination magic for production builds.\n// This way devs don't have to worry about doing the NODE_ENV check themselves.\nprocess.env.NODE_ENV !== \"development\" ? () => null : function LiveReload({\n  origin,\n  port,\n  timeoutMs = 1000,\n  nonce = undefined\n}) {\n  // @ts-expect-error\n  let isViteClient = import.meta && import.meta.env !== undefined;\n  if (isViteClient) {\n    console.warn([\"`<LiveReload />` is obsolete when using Vite and can conflict with Vite's built-in HMR runtime.\", \"\", \"Remove `<LiveReload />` from your code and instead only use `<Scripts />`.\", \"Then refresh the page to remove lingering scripts from `<LiveReload />`.\"].join(\"\\n\"));\n    return null;\n  }\n  origin ??= process.env.REMIX_DEV_ORIGIN;\n  let js = String.raw;\n  return /*#__PURE__*/React.createElement(\"script\", {\n    nonce: nonce,\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: js`\n                function remixLiveReloadConnect(config) {\n                  let LIVE_RELOAD_ORIGIN = ${JSON.stringify(origin)};\n                  let protocol =\n                    LIVE_RELOAD_ORIGIN ? new URL(LIVE_RELOAD_ORIGIN).protocol.replace(/^http/, \"ws\") :\n                    location.protocol === \"https:\" ? \"wss:\" : \"ws:\"; // remove in v2?\n                  let hostname = LIVE_RELOAD_ORIGIN ? new URL(LIVE_RELOAD_ORIGIN).hostname : location.hostname;\n                  let url = new URL(protocol + \"//\" + hostname + \"/socket\");\n\n                  url.port =\n                    ${port} ||\n                    (LIVE_RELOAD_ORIGIN ? new URL(LIVE_RELOAD_ORIGIN).port : 8002);\n\n                  let ws = new WebSocket(url.href);\n                  ws.onmessage = async (message) => {\n                    let event = JSON.parse(message.data);\n                    if (event.type === \"LOG\") {\n                      console.log(event.message);\n                    }\n                    if (event.type === \"RELOAD\") {\n                      console.log(\"💿 Reloading window ...\");\n                      window.location.reload();\n                    }\n                    if (event.type === \"HMR\") {\n                      if (!window.__hmr__ || !window.__hmr__.contexts) {\n                        console.log(\"💿 [HMR] No HMR context, reloading window ...\");\n                        window.location.reload();\n                        return;\n                      }\n                      if (!event.updates || !event.updates.length) return;\n                      let updateAccepted = false;\n                      let needsRevalidation = new Set();\n                      for (let update of event.updates) {\n                        console.log(\"[HMR] \" + update.reason + \" [\" + update.id +\"]\")\n                        if (update.revalidate) {\n                          needsRevalidation.add(update.routeId);\n                          console.log(\"[HMR] Revalidating [\" + update.routeId + \"]\");\n                        }\n                        let imported = await import(update.url +  '?t=' + event.assetsManifest.hmr.timestamp);\n                        if (window.__hmr__.contexts[update.id]) {\n                          let accepted = window.__hmr__.contexts[update.id].emit(\n                            imported\n                          );\n                          if (accepted) {\n                            console.log(\"[HMR] Update accepted by\", update.id);\n                            updateAccepted = true;\n                          }\n                        }\n                      }\n                      if (event.assetsManifest && window.__hmr__.contexts[\"remix:manifest\"]) {\n                        let accepted = window.__hmr__.contexts[\"remix:manifest\"].emit(\n                          { needsRevalidation, assetsManifest: event.assetsManifest }\n                        );\n                        if (accepted) {\n                          console.log(\"[HMR] Update accepted by\", \"remix:manifest\");\n                          updateAccepted = true;\n                        }\n                      }\n                      if (!updateAccepted) {\n                        console.log(\"[HMR] Update rejected, reloading...\");\n                        window.location.reload();\n                      }\n                    }\n                  };\n                  ws.onopen = () => {\n                    if (config && typeof config.onOpen === \"function\") {\n                      config.onOpen();\n                    }\n                  };\n                  ws.onclose = (event) => {\n                    if (event.code === 1006) {\n                      console.log(\"Remix dev asset server web socket closed. Reconnecting...\");\n                      setTimeout(\n                        () =>\n                          remixLiveReloadConnect({\n                            onOpen: () => window.location.reload(),\n                          }),\n                      ${String(timeoutMs)}\n                      );\n                    }\n                  };\n                  ws.onerror = (error) => {\n                    console.log(\"Remix dev asset server web socket error:\");\n                    console.error(error);\n                  };\n                }\n                remixLiveReloadConnect();\n              `\n    }\n  });\n};\nfunction mergeRefs(...refs) {\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\nexport { Await, Form, Link, Links, LiveReload, Meta, NavLink, PrefetchPageLinks, RemixContext, Scripts, composeEventHandlers, useActionData, useFetcher, useLoaderData, useMatches, useRemixContext, useRouteLoaderData };\n"],"names":["_extends","target","i","source","key","Action","PopStateEventType","createBrowserHistory","options","createBrowserLocation","window","globalHistory","pathname","search","hash","createLocation","createBrowserHref","to","createPath","getUrlBasedHistory","invariant","value","message","warning","cond","createKey","getHistoryState","location","index","current","state","parsePath","_ref","path","parsedPath","hashIndex","searchIndex","getLocation","createHref","validateLocation","v5Compat","action","listener","getIndex","handlePop","nextIndex","delta","history","push","historyState","url","error","replace","createURL","base","href","fn","n","ResultType","immutableRouteKeys","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","treePath","id","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","matchRoutesImpl","allowPartial","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","convertRouteMatchToUiMatch","match","loaderData","params","parentsMeta","flattenRoute","relativePath","meta","joinPaths","routesMeta","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","normalizePathname","pattern","matcher","compiledParams","compilePath","pathnameBase","captureGroups","memo","paramName","splatValue","caseSensitive","regexpSource","_","v","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","getResolveToMatches","v7_relativeSplatPath","pathMatches","idx","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","DataWithResponseInit","data","init","AbortedDeferredError","DeferredData","responseInit","reject","r","onAbort","acc","_ref2","promise","undefinedError","aborted","settledKey","subscriber","k","signal","resolve","_ref3","unwrapTrackedPromise","isTrackedPromise","redirect","headers","ErrorResponseImpl","status","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","IDLE_FETCHER","IDLE_BLOCKER","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","TRANSITIONS_STORAGE_KEY","createRouter","routerWindow","isBrowser","isServer","detectErrorBoundary","dataRoutes","inFlightDataRoutes","dataStrategyImpl","defaultDataStrategy","patchRoutesOnNavigationImpl","future","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","checkFogOfWar","initialized","m","errors","shouldLoadRouteOnHydration","fogOfWar","router","pendingAction","pendingPreventScrollReset","pendingNavigationController","pendingViewTransitionEnabled","appliedViewTransitions","removePageHideEventListener","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeFetchers","deletedFetchers","activeDeferreds","blockerFunctions","unblockBlockerHistoryUpdate","initialize","historyAction","blockerKey","shouldBlockNavigation","nextHistoryUpdatePromise","updateBlocker","blockers","updateState","startNavigation","restoreAppliedTransitions","_saveAppliedTransitions","persistAppliedTransitions","dispose","deleteFetcher","deleteBlocker","subscribe","newState","opts","completedFetchers","deletedFetchersKeys","fetcher","completeNavigation","_temp","_location$state","_location$state2","flushSync","isActionReload","isMutationMethod","actionData","mergeLoaderData","preventScrollReset","viewTransitionOpts","priorPaths","toPaths","getSavedScrollPosition","navigate","normalizedPath","normalizeTo","submission","normalizeNavigateOptions","currentLocation","nextLocation","userReplace","revalidate","interruptActiveLoads","saveScrollPosition","routesToUse","loadingNavigation","notFoundMatches","handleNavigational404","isHashChangeOnly","request","createClientSideRequest","pendingActionResult","findNearestBoundary","actionResult","handleAction","routeId","isErrorResult","getLoadingNavigation","shortCircuited","updatedMatches","handleLoaders","getActionDataForCommit","isFogOfWar","navigation","getSubmittingNavigation","discoverResult","discoverRoutes","boundaryId","actionMatch","getTargetMatch","callDataStrategy","isRedirectResult","normalizeRedirectLocation","startRedirectNavigation","isDeferredResult","boundaryMatch","overrideNavigation","fetcherSubmission","initialHydration","activeSubmission","getSubmissionFromNavigation","shouldUpdateNavigationState","getUpdatedActionData","matchesToLoad","revalidatingFetchers","getMatchesToLoad","cancelActiveDeferreds","updatedFetchers","markFetchRedirectsDone","updates","getUpdatedRevalidatingFetchers","rf","abortFetcher","abortPendingFetchRevalidations","f","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","revalidatingFetcher","getLoadingFetcher","fetch","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","detectAndHandle405Error","existingFetcher","updateFetcherState","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","getDoneFetcher","revalidationRequest","loadId","loadFetcher","staleKey","doneFetcher","resolveDeferredData","isNavigation","_temp2","redirectLocation","isDocumentReload","redirectHistoryAction","formMethod","formAction","formEncType","type","fetcherKey","results","dataResults","callDataStrategyImpl","e","isRedirectDataStrategyResultResult","response","normalizeRelativeRoutingRedirectResponse","convertDataStrategyResultToDataResult","fetchersToLoad","currentMatches","loaderResultsPromise","fetcherResultsPromise","resolveNavigationDeferredResults","resolveFetcherDeferredResults","getFetcher","deleteFetcherAndUpdateState","count","controller","markFetchersDone","keys","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","entries","blockerFunction","predicate","cancelledRouteIds","dfd","enableScrollRestoration","positions","getPosition","getKey","y","getScrollKey","partialMatches","isNonHMR","localManifest","children","patchRoutesImpl","newMatches","newPartialMatches","_internalSetRoutes","newRoutes","patchRoutes","isSubmissionNavigation","prependBasename","fromRouteId","relative","contextualMatches","activeRouteMatch","nakedIndex","hasNakedIndexQuery","indexValues","qs","normalizeFormMethod","isFetcher","isValidMethod","getInvalidBodyError","rawFormMethod","stripHashFromPath","text","name","json","searchParams","formData","convertFormDataToSearchParams","convertSearchParamsToFormData","getLoaderMatchesUntilBoundary","includeBoundary","skipActionErrorRevalidation","currentUrl","nextUrl","boundaryMatches","actionStatus","shouldSkipRevalidation","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","hasData","hasError","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","_childrenToPatch","childrenToPatch","uniqueChildren","newRoute","existingRoute","isSameRoute","aChild","_existingRoute$childr","bChild","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","_ref4","requestContext","loadRouteDefinitionsPromises","dsMatches","loadRoutePromise","shouldLoad","handlerOverride","callLoaderOrAction","staticContext","onReject","runHandler","handler","abortPromise","actualHandler","ctx","handlerPromise","handlerError","dataStrategyResult","isResponse","contentType","isDataWithResponseInit","_result$init2","_result$init","isDeferredData","_result$init3","_result$init4","_result$init5","_result$init6","trimmedMatches","normalizedLocation","isSameBasename","processRouteLoaderData","skipLoaderErrorBubbling","statusCode","foundError","loaderHeaders","pendingError","newLoaderData","mergedLoaderData","_temp5","method","errorMessage","deferred","isRevalidatingLoader","unwrap","_window","transitions","sessionPositions","DataRouterContext","React.createContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useHref","useInRouterContext","UNSAFE_invariant","navigator","React.useContext","useResolvedPath","joinedPathname","useLocation","useIsomorphicLayoutEffect","cb","React.useLayoutEffect","useNavigate","isDataRoute","useNavigateStable","useNavigateUnstable","dataRouterContext","routePathnamesJson","UNSAFE_getResolveToMatches","activeRef","React.useRef","React.useCallback","OutletContext","useOutlet","context","outlet","React.createElement","useParams","routeMatch","React.useMemo","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","parentSegments","_renderMatches","DefaultErrorComponent","useRouteError","stack","preStyles","React.Fragment","defaultErrorElement","RenderErrorBoundary","React.Component","props","errorInfo","RenderedRoute","routeContext","_dataRouterState","_future","renderedMatches","errorIndex","renderFallback","fallbackIndex","needsToRunLoader","shouldRenderHydrateFallback","errorElement","hydrateFallbackElement","getChildren","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","useNavigation","useMatches","UNSAFE_convertRouteMatchToUiMatch","useLoaderData","useActionData","_state$errors","useAsyncValue","useAsyncError","alreadyWarned","warnOnce","logDeprecation","flag","msg","link","logV6DeprecationWarnings","renderFuture","routerFuture","Outlet","Router","_ref5","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","Await","_ref7","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","renderError","_ref8","toRender","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultMethod","defaultEncType","isHtmlElement","object","isButtonElement","isFormElement","isInputElement","isModifiedEvent","event","shouldProcessLinkClick","createSearchParams","getSearchParamsForLocation","locationSearch","defaultSearchParams","_formDataSupportsSubmitter","isFormDataSubmitterSupported","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","body","attr","form","prefix","_excluded","_excluded2","_excluded3","REACT_ROUTER_VERSION","ViewTransitionContext","FetchersContext","START_TRANSITION","startTransitionImpl","React","FLUSH_SYNC","flushSyncImpl","ReactDOM","USE_ID","useIdImpl","startTransitionSafe","flushSyncSafe","Deferred$1","reason","RouterProvider","fallbackElement","setStateImpl","React.useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","v7_startTransition","optInStartTransition","setState","isViewTransitionUnavailable","t","React.useEffect","Deferred","renderPromise","UNSAFE_logV6DeprecationWarnings","UNSAFE_DataRouterContext","UNSAFE_DataRouterStateContext","MemoizedDataRoutes","React.memo","DataRoutes","UNSAFE_useRoutesImpl","Link","React.forwardRef","ref","onClick","reloadDocument","viewTransition","UNSAFE_NavigationContext","absoluteHref","isExternal","targetUrl","internalOnClick","useLinkClickHandler","handleClick","NavLink","ariaCurrentProp","classNameProp","styleProp","routerState","isTransitioning","useViewTransitionState","nextLocationPathname","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","className","style","Form","_ref9","forwardedRef","onSubmit","submit","useSubmit","useFormAction","submitHandler","submitter","submitMethod","replaceProp","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","fetcherId","getUniqueFetcherId","currentRouteId","UNSAFE_useRouteId","UNSAFE_RouteContext","useFetcher","_temp3","_route$matches","defaultKey","setFetcherKey","load","submitImpl","FetcherForm","SCROLL_RESTORATION_STORAGE_KEY","useScrollRestoration","_temp4","storageKey","restoreScrollPosition","usePageHide","getKeyWithoutBasename","disableScrollRestoration","el","callback","capture","nextPath","HOLE","NAN","NEGATIVE_INFINITY","NEGATIVE_ZERO","NULL","POSITIVE_INFINITY","UNDEFINED","TYPE_BIGINT","TYPE_DATE","TYPE_ERROR","TYPE_MAP","TYPE_NULL_OBJECT","TYPE_PROMISE","TYPE_REGEXP","TYPE_SET","TYPE_SYMBOL","TYPE_URL","TYPE_PREVIOUS_RESOLVED","__publicField","createLineSplittingTransform","decoder","leftover","chunk","str","parts","part","globalObj","unflatten","parsed","hydrated","values","hydrate","plugins","postRun","index2","set","c","newSet","map","obj","d","errorType","vals","v2","plugin","result2","array","decode","readable","done","reader","decodeInitial","donePromise","decodeDeferred","read","line","colonIndex","deferredId","lineData","jsonLine","SingleFetchRedirectSymbol","loadRouteModule","routeModulesCache","routeModule","getKeyedLinksForMatches","routeModules","descriptors","_module$links","module","preloads","getCurrentPageModulePreloadHrefs","dedupeLinkDescriptors","prefetchStyleLinks","_route$css","_routeModule$links","isPreloadSupported","styleLinks","descriptor","isPageLinkDescriptor","matchingLinks","prefetchStyleLink","removeLink","isHtmlLinkDescriptor","getKeyedPrefetchLinks","links","mod","getNewMatchesForLinks","page","nextMatches","mode","parsePathPatch","matchPathChanged","_currentMatches$index","defaultShouldRevalidate","_currentMatches$","manifestRoute","getDataLinkHrefs","dedupeHrefs","getModuleLinkHrefs","manifestPatch","hrefs","sortKeys","sorted","preloadsSet","deduped","_isPreloadSupported","ESCAPE_LOOKUP","ESCAPE_REGEX","escapeHtml","html","createHtml","isCatchResponse","isErrorResponse","isNetworkErrorResponse","isRedirectResponse","isDeferredResponse","_response$headers$get","fetchData","retry","createRequestInit","revalidation","DEFERRED_VALUE_PLACEHOLDER_PREFIX","parseDeferredReadableStream","stream","deferredResolvers","sectionReader","readStreamSections","initialSection","criticalData","eventKey","section","sectionDataStrings","sectionDataString","err","resolver","UNSAFE_DeferredData","buffer","sections","closed","encoder","readStreamSection","splitSections","mergeArrays","arrays","out","total","arr","offset","getSingleFetchDataStrategy","getRouter","singleFetchActionStrategy","singleFetchLoaderFetcherStrategy","singleFetchLoaderNavigationStrategy","singleFetchUrl","fetchAndDecode","unwrapSingleFetchResult","routesParams","foundOptOutRoute","routeDfds","createDeferred","routesLoadedPromise","singleFetchDfd","stripIndexParam","resolvePromise","_routeModules$m$route","fetchSingleLoader","unwrapSingleFetchResults","singleLoaderUrl","indexValuesToKeep","indexValue","toKeep","reqUrl","res","decodeViaTurboStream","global","Constructor","UNSAFE_ErrorResponseImpl","UNSAFE_SingleFetchRedirectSymbol","rej","val","RemixErrorBoundary","RemixRootDefaultErrorBoundary","isOutsideRemixApp","heyDeveloper","BoundaryShell","errorInstance","errorString","title","renderScripts","_routeModules$root","useRemixContext","Scripts","RemixRootDefaultHydrateFallback","groupRoutesByParentId","parentId","getRouteComponents","isSpaMode","Component","getRouteModuleComponent","HydrateFallback","ErrorBoundary","createClientRoutesWithHMRRevalidationOptOut","needsRevalidation","initialState","createClientRoutes","preventInvalidServerHandlerCall","noActionDefinedError","article","routesByParentId","fetchServerHandlerAndMaybeUnwrap","singleFetch","fetchServerHandler","unwrapServerResponse","fetchServerLoader","fetchServerAction","prefetchStylesAndCallHandler","cachedModule","linkPrefetchPromise","dataRoute","_initialState$loaderD","_initialState$errors","_routeModule$clientLo","getShouldRevalidateFunction","initialData","initialError","isHydrationRequest","shouldHydrateRouteLoader","loadRouteModuleWithBlockingLinks","clientLoader","args","clientAction","wrapShouldRevalidateForHdr","routeShouldRevalidate","handledRevalidation","getRedirect","nextPaths","discoveredPathsMaxSize","discoveredPaths","URL_LIMIT","isFogOfWarEnabled","getPartialManifest","routeIds","initialRoutes","getPatchRoutesOnNavigationFunction","patch","fetchAndApplyManifestPatches","useFogOFWarDiscovery","_navigator$connection","registerElement","fetchPatches","lazyPaths","debouncedFetchPatches","debounce","isElement","node","observer","records","elements","manifestPath","serverPatches","knownRoutes","patches","p","addToFifoQueue","parentIds","queue","wait","timeoutId","useDataRouterStateContext","RemixContext","usePrefetchBehavior","prefetch","theirElementProps","maybePrefetch","setMaybePrefetch","shouldPrefetch","setShouldPrefetch","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","entry","setIntent","cancelIntent","composeEventHandlers","getDiscoverAttr","discover","isAbsolute","prefetchHandlers","NavLink$1","mergeRefs","PrefetchPageLinks","Link$1","Form$1","theirHandler","ourHandler","getActiveMatches","isHydrated","errorIdx","Links","criticalCss","routerMatches","keyedLinks","dataLinkProps","PrefetchPageLinksImpl","useKeyedPrefetchLinks","keyedPrefetchLinks","setKeyedPrefetchLinks","interrupted","linkProps","newMatchesForData","dataHrefs","m2","newMatchesForAssets","moduleHrefs","Meta","_matches","leafMeta","_match","routeMeta","metaProps","tagName","isValidMetaTag","Comp","Await$1","serverHandoffString","abortDelay","serializeError","renderMeta","isStatic","enableFogOfWar","serializePreResolvedErrorImp","toSerialize","serializePreresolvedDataImp","serializedData","serializeErrorImp","serializeDataImp","deferredScripts","initialScripts","_manifest$hmr","streamScript","contextScript","pendingKeys","promiseKeyValues","DeferredHydrationScript","trackedPromise","routeModulesScript","routePreloads","dedupe","dataKey","scriptProps","serializeData","React.Suspense","ErrorDeferredHydrationScript","useMatches$1","useLoaderData$1","useActionData$1","useFetcher$1","refs"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}