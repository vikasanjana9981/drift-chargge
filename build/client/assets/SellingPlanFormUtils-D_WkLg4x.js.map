{"version":3,"file":"SellingPlanFormUtils-D_WkLg4x.js","sources":["../../../node_modules/rizzui/dist/input.js","../../../app/shared/products/selling-plan-groups/components/NumberInput.tsx","../../../app/shared/products/selling-plan-groups/components/SellingPlanFormUtils.ts"],"sourcesContent":["'use strict';var chunkJ7JAQF3P_js=require('./chunk-J7JAQF3P.js');require('./chunk-4LD5NCXD.js'),require('./chunk-Y466GAI5.js'),require('./chunk-5RS52APR.js'),require('./chunk-JFIBTDXR.js'),require('./chunk-SPAFJZLT.js'),require('./chunk-VA57PCYD.js'),require('./chunk-XPFTC3XC.js'),require('./chunk-XG4FE63T.js'),require('./chunk-ASMPPBDR.js'),require('./chunk-NHF3VARK.js');Object.defineProperty(exports,\"Input\",{enumerable:true,get:function(){return chunkJ7JAQF3P_js.a}});","import { FC, useState } from 'react';\r\nimport { Input } from 'rizzui/input';\r\nimport { FaChevronUp, FaChevronDown } from 'react-icons/fa6';\r\n\r\ninterface NumberInputProps {\r\n    label: string;\r\n    value: number;\r\n    min?: number;\r\n    max?: number;\r\n    percent?: boolean; // New prop to control max limit\r\n    onChange: (value: number) => void;\r\n}\r\n\r\nexport const NumberInput: FC<NumberInputProps> = ({ label, value, min = 1, percent = false, onChange }) => {\r\n    const [internalValue, setInternalValue] = useState(value);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newValue = e.target.value === '' ? '' : Number(e.target.value);\r\n        setInternalValue(newValue as number); // Allow empty value for manual entry\r\n    };\r\n\r\n    const handleBlur = () => {\r\n        const finalValue = Math.max(min, Math.min(internalValue || min, percent ? 100 : Infinity)); // Apply min/max limits\r\n        setInternalValue(finalValue);\r\n        onChange(finalValue);\r\n    };\r\n\r\n    return (\r\n        <Input\r\n            type=\"number\"\r\n            value={internalValue}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            label={label}\r\n            suffix={\r\n                <div className=\"-mr-3.5 grid gap-[2px] p-0.5 rtl:-ml-3.5 rtl:-mr-0\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"rounded-[3px] bg-gray-100 py-0.5 px-1.5 hover:bg-gray-200 focus:bg-gray-200\"\r\n                        onClick={() => {\r\n                            const newValue = Math.min(internalValue + 1, percent ? 100 : Infinity);\r\n                            setInternalValue(newValue);\r\n                            onChange(newValue);\r\n                        }}\r\n                    >\r\n                        <FaChevronUp className=\"h-3 w-3\" />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"rounded-[3px] bg-gray-100 py-0.5 px-1.5 hover:bg-gray-200 focus:bg-gray-200\"\r\n                        onClick={() => {\r\n                            const newValue = Math.max(internalValue - 1, min);\r\n                            setInternalValue(newValue);\r\n                            onChange(newValue);\r\n                        }}\r\n                    >\r\n                        <FaChevronDown className=\"h-3 w-3\" />\r\n                    </button>\r\n                </div>\r\n            }\r\n        />\r\n    );\r\n};\r\n","import { AnchorType, DeliveryPolicy, FulfillmentTrigger, InventoryPolicy, Plan, PreAnchorBehaviorBehavior, RemainingBalanceChargeTrigger, SellingPlanInterval } from \"app/types/product/sellingPlans\";\r\n\r\n// Type definitions\r\nexport interface SelectOption<T = string | number> {\r\n    label: string;\r\n    value: T;\r\n}\r\n\r\n\r\n\r\n// Constants\r\nexport const unitOptions: SelectOption<SellingPlanInterval>[] = [\r\n    { label: \"Day(s)\", value: \"DAY\" },\r\n    { label: \"Week(s)\", value: \"WEEK\" },\r\n    { label: \"Month(s)\", value: \"MONTH\" },\r\n    { label: \"Year(s)\", value: \"YEAR\" },\r\n];\r\n\r\nexport const PricingPolicyAdjustmentTypeOptions: SelectOption<Plan['discountType']>[] = [\r\n    { label: \"Fixed amount off\", value: \"FIXED_AMOUNT\" },\r\n    { label: \"Percentage off\", value: \"PERCENTAGE\" },\r\n    { label: \"Set Price\", value: \"PRICE\" },\r\n];\r\n\r\n\r\nexport const inventoryReserveOptions: SelectOption<InventoryPolicy['reserve']>[] = [\r\n    { label: \"Reserve Inventory on Fulfillment\", value: \"ON_FULFILLMENT\" },\r\n    { label: \"Reserve Inventory on Sale\", value: \"ON_SALE\" },\r\n];\r\n\r\nexport const deliveryPolicyFulfillmentTriggerOptions: SelectOption<FulfillmentTrigger>[] = [\r\n    { label: \"Anchor-based Fulfillment\", value: \"ANCHOR\" },\r\n    { label: \"Fulfill as Soon as Possible\", value: \"ASAP\" },\r\n    { label: \"Fulfill at an Exact Time\", value: \"EXACT_TIME\" },\r\n    { label: \"Unknown Fulfillment Trigger\", value: \"UNKNOWN\" },\r\n]\r\n\r\nexport const dayOptions: SelectOption[] = [\r\n    { label: \"Monday\", value: 1 },\r\n    { label: \"Tuesday\", value: 2 },\r\n    { label: \"Wednesday\", value: 3 },\r\n    { label: \"Thursday\", value: 4 },\r\n    { label: \"Friday\", value: 5 },\r\n    { label: \"Saturday\", value: 6 },\r\n    { label: \"Sunday\", value: 7 },\r\n];\r\n\r\n\r\nexport const anchorTypeOptions: SelectOption<AnchorType>[] = [\r\n    { label: \"Day of the Week (Monday–Sunday)\", value: \"WEEKDAY\" },\r\n    { label: \"Day of the Month (1st–31st)\", value: \"MONTHDAY\" },\r\n    { label: \"Specific Date in the Year (Month & Day)\", value: \"YEARDAY\" },\r\n]\r\n\r\nexport const preAnchorBehaviorOptions: SelectOption<PreAnchorBehaviorBehavior>[] = [\r\n    { label: \"On the Same Day\", value: \"ASAP\" },\r\n    { label: \"On Next Anchor\", value: \"NEXT\" },\r\n]\r\n\r\nexport const inventoryPolicyOptions: SelectOption<Plan['inventoryPolicy']>[] = [\r\n    { label: \"On Sale\", value: \"ON_SALE\" },\r\n    { label: \"On Fulfilment\", value: \"ON_FULFILMENT\" },\r\n];\r\n\r\nexport const monthDayOptions: SelectOption[] =\r\n    Array.from({ length: 31 }, (_, i) => ({\r\n        label: `${i + 1}${['st', 'nd', 'rd'][((i + 1) % 10) - 1] || 'th'}`,\r\n        value: (i + 1),\r\n    }));\r\n\r\nexport const subscriptionRenewalDateTypeOptions: SelectOption[] = [\r\n    { label: \"Same day of month\", value: \"SAME_DAY\" },\r\n    ...Array.from({ length: 31 }, (_, i) => ({\r\n        label: `${i + 1}${['st', 'nd', 'rd'][((i + 1) % 10) - 1] || 'th'}`,\r\n        value: (i + 1).toString(),\r\n    })),\r\n];\r\n\r\nexport const checkoutChargeTypeOptions: SelectOption[] = [\r\n    { label: \"The checkout charge is a percentage\", value: \"PERCENTAGE\" },\r\n    { label: \"The checkout charge is a fixed price amount\", value: \"PRICE\" },\r\n]\r\n\r\nexport const remainingBalanceChargeTriggerOptions: SelectOption<RemainingBalanceChargeTrigger>[] = [\r\n    { label: \"At an exact time \", value: \"EXACT_TIME\" },\r\n    // { label: \"There's no remaining balance\", value: \"NO_REMAINING_BALANCE\" },\r\n    { label: \"After the duration defined in the plan\", value: \"TIME_AFTER_CHECKOUT\" },\r\n]\r\n\r\nexport const timeUnitsOptions: SelectOption[] = [\r\n    { value: \"D\", label: \"Days\" },\r\n    { value: \"W\", label: \"Weeks\" },\r\n    { value: \"M\", label: \"Months\" },\r\n    { value: \"Y\", label: \"Years\" }\r\n]\r\n\r\nexport const subscriptionRenewalCuttOffDateOptions: SelectOption[] =\r\n    Array.from({ length: 31 }, (_, i) => ({\r\n        label: `${i + 1}${['st', 'nd', 'rd'][((i + 1) % 10) - 1] || 'th'}`,\r\n        value: (i + 1).toString(),\r\n    }));\r\n\r\n// New Options for Weekly and Yearly Plans\r\nexport const weeklyRenewalOptions: SelectOption[] = [\r\n    { label: \"Monday\", value: \"mon\" },\r\n    { label: \"Tuesday\", value: \"tue\" },\r\n    { label: \"Wednesday\", value: \"wed\" },\r\n    { label: \"Thursday\", value: \"thu\" },\r\n    { label: \"Friday\", value: \"fri\" },\r\n    { label: \"Saturday\", value: \"sat\" },\r\n    { label: \"Sunday\", value: \"sun\" },\r\n];\r\n\r\nexport const yearlyRenewalMonthOptions: SelectOption[] = [\r\n    { label: \"January\", value: 1 },\r\n    { label: \"February\", value: 2 },\r\n    { label: \"March\", value: 3 },\r\n    { label: \"April\", value: 4 },\r\n    { label: \"May\", value: 5 },\r\n    { label: \"June\", value: 6 },\r\n    { label: \"July\", value: 7 },\r\n    { label: \"August\", value: 8 },\r\n    { label: \"September\", value: 9 },\r\n    { label: \"October\", value: 10 },\r\n    { label: \"November\", value: 11 },\r\n    { label: \"December\", value: 12 },\r\n];\r\n\r\nexport const yearlyRenewalDayOptions: SelectOption[] =\r\n    Array.from({ length: 31 }, (_, i) => ({\r\n        label: `${i + 1}${['st', 'nd', 'rd'][((i + 1) % 10) - 1] || 'th'}`,\r\n        value: (i + 1).toString(),\r\n    }));"],"names":["chunkJ7JAQF3P_js","require$$0","exports","NumberInput","label","value","min","percent","onChange","internalValue","setInternalValue","useState","handleChange","e","newValue","handleBlur","finalValue","jsx","Input","jsxs","FaChevronUp","FaChevronDown","unitOptions","PricingPolicyAdjustmentTypeOptions","inventoryReserveOptions","deliveryPolicyFulfillmentTriggerOptions","dayOptions","anchorTypeOptions","preAnchorBehaviorOptions","monthDayOptions","_","i","checkoutChargeTypeOptions","remainingBalanceChargeTriggerOptions","yearlyRenewalMonthOptions"],"mappings":"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","x_google_ignoreList":[0]}